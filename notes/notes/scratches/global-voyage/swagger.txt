@Api            用在controller类上，用于对该类进行解释说明
@ApiOperation   用在方法上，对方法进行解释说明，表示一个http请求的操作
                    tags：用于方法描述，    notes：用于内容提示
@ApiParam       用在方法，参数，字段说明；表示对参数的添加元数据（说明或是否必填等），
                    name：参数名，   value：参数说明， required：是否为必须参数
    @Api(value="用户controller",tags={"用户操作接口"})
    @RestController
    public class UserController {
         @ApiOperation(value="获取用户信息",tags={"获取用户信息copy"},notes="注意问题点")
         @GetMapping("/getUserInfo")
         public User getUserInfo(@ApiParam(name="id",value="用户id",required=true) Long id,@ApiParam(name="username",value="用户名") String username) {
         // userService可忽略，是业务逻辑
          User user = userService.getUserInfo();
          return user;
      }
    }

@ApiModel           用于类，表示对类进行说明，用于参数用实体类接收  value：对象名，description:描述，都可省略
@ApiModelProperty   用于方法、字段，表明对model属性的说明或者数据操作更改。
                        value：说明字段，     name：重写属性名字，    dataType：重写属性类型，
                        example：举例说明，   required：是否必填，    hidden：隐藏
    @ApiModel(value="user对象",description="用户对象user")
    public class User implements Serializable{
        private static final long serialVersionUID = 1L;
         @ApiModelProperty(value="用户名",name="username",example="xingguo")
         private String username;
         @ApiModelProperty(value="状态",name="state",required=true)
          private Integer state;
          private String password;
          private String nickName;
          private Integer isDeleted;

          @ApiModelProperty(value="id数组",hidden=true)
          private String[] ids;
          private List<String> idList;
         //省略get/set
    }

@ApiIgnore()    用于方法或者类上，可以不被swagger显示在页面上