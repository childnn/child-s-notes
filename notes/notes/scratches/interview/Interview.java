package miaowan;

/**
 * @author child
 * 2019/7/3 11:54
 * 集合
 * juc 包/多线程
 * io 流
 * jvm
 * 分布式事务: 一般消息中间件实现
 * 并发
 * CAP 定理: consistency(一致性), availability(可用性), partition tolerance(分区容错性)
 *   一致性: 在分布式系统中的所有数据备份, 在同一时刻是否具有同样的值
 *   可用性: 在集群中一部分节点故障后, 集群整体是否还能响应的客户端的读写请求.
 *   分区容忍性: 以实际效果而言, 分区相当于对通信的时限要求. 系统如果不能在时限内达成数据一致性,
 *          就意味着发生了分区的情况, 必须就当前操作在 C 和 A 之间做出选择.
 *   CAP原则的精髓就是要么AP，要么CP，要么AC，但是不存在CAP。
 *   如果在某个分布式系统中数据无副本， 那么系统必然满足强一致性条件,
 *   因为只有独一数据，不会出现数据不一致的情况，此时C和P两要素具备,
 *   但是如果系统发生了网络分区状况或者宕机，必然导致某些数据不可以访问,
 *   此时可用性条件就不能被满足，即在此情况下获得了CP系统.
 * 由于网络硬件肯定会出现延迟丢包等问题, 所以 分区容错性 是必须要实现的.
 * 所以只能在 一致性 和 可用性 之间进行权衡.
 * 要么选择 CP: 要求 强一致性(consistency), 弱化可用性 (availability)
 * 要么选择 AP: 要求 高可用(availability), 实现 最终一致性
 *
 */
public class Interview {
}
