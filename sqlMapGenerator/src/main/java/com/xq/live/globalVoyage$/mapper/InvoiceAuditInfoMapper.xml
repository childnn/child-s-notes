<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xq.live.globalVoyage$.dao.InvoiceAuditInfoMapper">
  <resultMap id="BaseResultMap" type="com.xq.live.globalVoyage$.model.InvoiceAuditInfo">
    <result column="id" jdbcType="BIGINT" property="id" />
    <result column="invoice_money" jdbcType="DECIMAL" property="invoiceMoney" />
    <result column="invoice_title" jdbcType="VARCHAR" property="invoiceTitle" />
    <result column="duty_paragraph" jdbcType="VARCHAR" property="dutyParagraph" />
    <result column="address_id" jdbcType="BIGINT" property="addressId" />
    <result column="express_type" jdbcType="VARCHAR" property="expressType" />
    <result column="express_num" jdbcType="VARCHAR" property="expressNum" />
    <result column="reject_imgs" jdbcType="VARCHAR" property="rejectImgs" />
    <result column="reject_reason" jdbcType="VARCHAR" property="rejectReason" />
    <result column="audit_status" jdbcType="INTEGER" property="auditStatus" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="update_by" jdbcType="VARCHAR" property="updateBy" />
    <result column="is_deleted" jdbcType="TINYINT" property="isDeleted" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, invoice_money, invoice_title, duty_paragraph, address_id, express_type, express_num, 
    reject_imgs, reject_reason, audit_status, create_time, update_time, create_by, update_by, 
    is_deleted
  </sql>
  <select id="selectByExample" parameterType="com.xq.live.globalVoyage$.model.InvoiceAuditInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from invoice_audit_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.xq.live.globalVoyage$.model.InvoiceAuditInfoExample">
    delete from invoice_audit_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xq.live.globalVoyage$.model.InvoiceAuditInfo">
    insert into invoice_audit_info (id, invoice_money, invoice_title, 
      duty_paragraph, address_id, express_type, 
      express_num, reject_imgs, reject_reason, 
      audit_status, create_time, update_time, 
      create_by, update_by, is_deleted
      )
    values (#{id,jdbcType=BIGINT}, #{invoiceMoney,jdbcType=DECIMAL}, #{invoiceTitle,jdbcType=VARCHAR}, 
      #{dutyParagraph,jdbcType=VARCHAR}, #{addressId,jdbcType=BIGINT}, #{expressType,jdbcType=VARCHAR}, 
      #{expressNum,jdbcType=VARCHAR}, #{rejectImgs,jdbcType=VARCHAR}, #{rejectReason,jdbcType=VARCHAR}, 
      #{auditStatus,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{createBy,jdbcType=VARCHAR}, #{updateBy,jdbcType=VARCHAR}, #{isDeleted,jdbcType=TINYINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.xq.live.globalVoyage$.model.InvoiceAuditInfo">
    insert into invoice_audit_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="invoiceMoney != null">
        invoice_money,
      </if>
      <if test="invoiceTitle != null">
        invoice_title,
      </if>
      <if test="dutyParagraph != null">
        duty_paragraph,
      </if>
      <if test="addressId != null">
        address_id,
      </if>
      <if test="expressType != null">
        express_type,
      </if>
      <if test="expressNum != null">
        express_num,
      </if>
      <if test="rejectImgs != null">
        reject_imgs,
      </if>
      <if test="rejectReason != null">
        reject_reason,
      </if>
      <if test="auditStatus != null">
        audit_status,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="updateBy != null">
        update_by,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="invoiceMoney != null">
        #{invoiceMoney,jdbcType=DECIMAL},
      </if>
      <if test="invoiceTitle != null">
        #{invoiceTitle,jdbcType=VARCHAR},
      </if>
      <if test="dutyParagraph != null">
        #{dutyParagraph,jdbcType=VARCHAR},
      </if>
      <if test="addressId != null">
        #{addressId,jdbcType=BIGINT},
      </if>
      <if test="expressType != null">
        #{expressType,jdbcType=VARCHAR},
      </if>
      <if test="expressNum != null">
        #{expressNum,jdbcType=VARCHAR},
      </if>
      <if test="rejectImgs != null">
        #{rejectImgs,jdbcType=VARCHAR},
      </if>
      <if test="rejectReason != null">
        #{rejectReason,jdbcType=VARCHAR},
      </if>
      <if test="auditStatus != null">
        #{auditStatus,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xq.live.globalVoyage$.model.InvoiceAuditInfoExample" resultType="java.lang.Long">
    select count(*) from invoice_audit_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update invoice_audit_info
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.invoiceMoney != null">
        invoice_money = #{record.invoiceMoney,jdbcType=DECIMAL},
      </if>
      <if test="record.invoiceTitle != null">
        invoice_title = #{record.invoiceTitle,jdbcType=VARCHAR},
      </if>
      <if test="record.dutyParagraph != null">
        duty_paragraph = #{record.dutyParagraph,jdbcType=VARCHAR},
      </if>
      <if test="record.addressId != null">
        address_id = #{record.addressId,jdbcType=BIGINT},
      </if>
      <if test="record.expressType != null">
        express_type = #{record.expressType,jdbcType=VARCHAR},
      </if>
      <if test="record.expressNum != null">
        express_num = #{record.expressNum,jdbcType=VARCHAR},
      </if>
      <if test="record.rejectImgs != null">
        reject_imgs = #{record.rejectImgs,jdbcType=VARCHAR},
      </if>
      <if test="record.rejectReason != null">
        reject_reason = #{record.rejectReason,jdbcType=VARCHAR},
      </if>
      <if test="record.auditStatus != null">
        audit_status = #{record.auditStatus,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createBy != null">
        create_by = #{record.createBy,jdbcType=VARCHAR},
      </if>
      <if test="record.updateBy != null">
        update_by = #{record.updateBy,jdbcType=VARCHAR},
      </if>
      <if test="record.isDeleted != null">
        is_deleted = #{record.isDeleted,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update invoice_audit_info
    set id = #{record.id,jdbcType=BIGINT},
      invoice_money = #{record.invoiceMoney,jdbcType=DECIMAL},
      invoice_title = #{record.invoiceTitle,jdbcType=VARCHAR},
      duty_paragraph = #{record.dutyParagraph,jdbcType=VARCHAR},
      address_id = #{record.addressId,jdbcType=BIGINT},
      express_type = #{record.expressType,jdbcType=VARCHAR},
      express_num = #{record.expressNum,jdbcType=VARCHAR},
      reject_imgs = #{record.rejectImgs,jdbcType=VARCHAR},
      reject_reason = #{record.rejectReason,jdbcType=VARCHAR},
      audit_status = #{record.auditStatus,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      create_by = #{record.createBy,jdbcType=VARCHAR},
      update_by = #{record.updateBy,jdbcType=VARCHAR},
      is_deleted = #{record.isDeleted,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <resultMap id="BaseResultMap" type="com.xq.live.globalVoyage$.model.InvoiceAuditInfo">
    <result column="id" jdbcType="BIGINT" property="id" />
    <result column="invoice_money" jdbcType="DECIMAL" property="invoiceMoney" />
    <result column="invoice_title" jdbcType="VARCHAR" property="invoiceTitle" />
    <result column="duty_paragraph" jdbcType="VARCHAR" property="dutyParagraph" />
    <result column="address_id" jdbcType="BIGINT" property="addressId" />
    <result column="express_type" jdbcType="VARCHAR" property="expressType" />
    <result column="express_num" jdbcType="VARCHAR" property="expressNum" />
    <result column="reject_imgs" jdbcType="VARCHAR" property="rejectImgs" />
    <result column="reject_reason" jdbcType="VARCHAR" property="rejectReason" />
    <result column="audit_status" jdbcType="INTEGER" property="auditStatus" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="update_by" jdbcType="VARCHAR" property="updateBy" />
    <result column="is_deleted" jdbcType="TINYINT" property="isDeleted" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, invoice_money, invoice_title, duty_paragraph, address_id, express_type, express_num, 
    reject_imgs, reject_reason, audit_status, create_time, update_time, create_by, update_by, 
    is_deleted
  </sql>
  <select id="selectByExample" parameterType="com.xq.live.globalVoyage$.model.InvoiceAuditInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from invoice_audit_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.xq.live.globalVoyage$.model.InvoiceAuditInfoExample">
    delete from invoice_audit_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xq.live.globalVoyage$.model.InvoiceAuditInfo">
    insert into invoice_audit_info (id, invoice_money, invoice_title, 
      duty_paragraph, address_id, express_type, 
      express_num, reject_imgs, reject_reason, 
      audit_status, create_time, update_time, 
      create_by, update_by, is_deleted
      )
    values (#{id,jdbcType=BIGINT}, #{invoiceMoney,jdbcType=DECIMAL}, #{invoiceTitle,jdbcType=VARCHAR}, 
      #{dutyParagraph,jdbcType=VARCHAR}, #{addressId,jdbcType=BIGINT}, #{expressType,jdbcType=VARCHAR}, 
      #{expressNum,jdbcType=VARCHAR}, #{rejectImgs,jdbcType=VARCHAR}, #{rejectReason,jdbcType=VARCHAR}, 
      #{auditStatus,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{createBy,jdbcType=VARCHAR}, #{updateBy,jdbcType=VARCHAR}, #{isDeleted,jdbcType=TINYINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.xq.live.globalVoyage$.model.InvoiceAuditInfo">
    insert into invoice_audit_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="invoiceMoney != null">
        invoice_money,
      </if>
      <if test="invoiceTitle != null">
        invoice_title,
      </if>
      <if test="dutyParagraph != null">
        duty_paragraph,
      </if>
      <if test="addressId != null">
        address_id,
      </if>
      <if test="expressType != null">
        express_type,
      </if>
      <if test="expressNum != null">
        express_num,
      </if>
      <if test="rejectImgs != null">
        reject_imgs,
      </if>
      <if test="rejectReason != null">
        reject_reason,
      </if>
      <if test="auditStatus != null">
        audit_status,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="updateBy != null">
        update_by,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="invoiceMoney != null">
        #{invoiceMoney,jdbcType=DECIMAL},
      </if>
      <if test="invoiceTitle != null">
        #{invoiceTitle,jdbcType=VARCHAR},
      </if>
      <if test="dutyParagraph != null">
        #{dutyParagraph,jdbcType=VARCHAR},
      </if>
      <if test="addressId != null">
        #{addressId,jdbcType=BIGINT},
      </if>
      <if test="expressType != null">
        #{expressType,jdbcType=VARCHAR},
      </if>
      <if test="expressNum != null">
        #{expressNum,jdbcType=VARCHAR},
      </if>
      <if test="rejectImgs != null">
        #{rejectImgs,jdbcType=VARCHAR},
      </if>
      <if test="rejectReason != null">
        #{rejectReason,jdbcType=VARCHAR},
      </if>
      <if test="auditStatus != null">
        #{auditStatus,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xq.live.globalVoyage$.model.InvoiceAuditInfoExample" resultType="java.lang.Long">
    select count(*) from invoice_audit_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update invoice_audit_info
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.invoiceMoney != null">
        invoice_money = #{record.invoiceMoney,jdbcType=DECIMAL},
      </if>
      <if test="record.invoiceTitle != null">
        invoice_title = #{record.invoiceTitle,jdbcType=VARCHAR},
      </if>
      <if test="record.dutyParagraph != null">
        duty_paragraph = #{record.dutyParagraph,jdbcType=VARCHAR},
      </if>
      <if test="record.addressId != null">
        address_id = #{record.addressId,jdbcType=BIGINT},
      </if>
      <if test="record.expressType != null">
        express_type = #{record.expressType,jdbcType=VARCHAR},
      </if>
      <if test="record.expressNum != null">
        express_num = #{record.expressNum,jdbcType=VARCHAR},
      </if>
      <if test="record.rejectImgs != null">
        reject_imgs = #{record.rejectImgs,jdbcType=VARCHAR},
      </if>
      <if test="record.rejectReason != null">
        reject_reason = #{record.rejectReason,jdbcType=VARCHAR},
      </if>
      <if test="record.auditStatus != null">
        audit_status = #{record.auditStatus,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createBy != null">
        create_by = #{record.createBy,jdbcType=VARCHAR},
      </if>
      <if test="record.updateBy != null">
        update_by = #{record.updateBy,jdbcType=VARCHAR},
      </if>
      <if test="record.isDeleted != null">
        is_deleted = #{record.isDeleted,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update invoice_audit_info
    set id = #{record.id,jdbcType=BIGINT},
      invoice_money = #{record.invoiceMoney,jdbcType=DECIMAL},
      invoice_title = #{record.invoiceTitle,jdbcType=VARCHAR},
      duty_paragraph = #{record.dutyParagraph,jdbcType=VARCHAR},
      address_id = #{record.addressId,jdbcType=BIGINT},
      express_type = #{record.expressType,jdbcType=VARCHAR},
      express_num = #{record.expressNum,jdbcType=VARCHAR},
      reject_imgs = #{record.rejectImgs,jdbcType=VARCHAR},
      reject_reason = #{record.rejectReason,jdbcType=VARCHAR},
      audit_status = #{record.auditStatus,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      create_by = #{record.createBy,jdbcType=VARCHAR},
      update_by = #{record.updateBy,jdbcType=VARCHAR},
      is_deleted = #{record.isDeleted,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>