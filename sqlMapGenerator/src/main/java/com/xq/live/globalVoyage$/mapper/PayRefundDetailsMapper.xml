<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xq.live.globalVoyage$.dao.PayRefundDetailsMapper">
  <resultMap id="BaseResultMap" type="com.xq.live.globalVoyage$.model.PayRefundDetails">
    <result column="id" jdbcType="BIGINT" property="id" />
    <result column="out_trade_no" jdbcType="VARCHAR" property="outTradeNo" />
    <result column="order_type" jdbcType="INTEGER" property="orderType" />
    <result column="total_fee" jdbcType="DECIMAL" property="totalFee" />
    <result column="refund_fee" jdbcType="DECIMAL" property="refundFee" />
    <result column="apply_reason" jdbcType="VARCHAR" property="applyReason" />
    <result column="apply_time" jdbcType="TIMESTAMP" property="applyTime" />
    <result column="shop_audit_status" jdbcType="INTEGER" property="shopAuditStatus" />
    <result column="shop_audit_time" jdbcType="TIMESTAMP" property="shopAuditTime" />
    <result column="shop_audit_remarks" jdbcType="VARCHAR" property="shopAuditRemarks" />
    <result column="operator_audit_status" jdbcType="INTEGER" property="operatorAuditStatus" />
    <result column="operator_audit_time" jdbcType="TIMESTAMP" property="operatorAuditTime" />
    <result column="operator_audit_remarks" jdbcType="VARCHAR" property="operatorAuditRemarks" />
    <result column="refund_status" jdbcType="INTEGER" property="refundStatus" />
    <result column="settlement_refund_fee" jdbcType="DECIMAL" property="settlementRefundFee" />
    <result column="refund_time" jdbcType="TIMESTAMP" property="refundTime" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="other_reason" jdbcType="VARCHAR" property="otherReason" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, out_trade_no, order_type, total_fee, refund_fee, apply_reason, apply_time, shop_audit_status, 
    shop_audit_time, shop_audit_remarks, operator_audit_status, operator_audit_time, 
    operator_audit_remarks, refund_status, settlement_refund_fee, refund_time, type, 
    user_id, other_reason
  </sql>
  <select id="selectByExample" parameterType="com.xq.live.globalVoyage$.model.PayRefundDetailsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from pay_refund_details
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.xq.live.globalVoyage$.model.PayRefundDetailsExample">
    delete from pay_refund_details
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xq.live.globalVoyage$.model.PayRefundDetails">
    insert into pay_refund_details (id, out_trade_no, order_type, 
      total_fee, refund_fee, apply_reason, 
      apply_time, shop_audit_status, shop_audit_time, 
      shop_audit_remarks, operator_audit_status, 
      operator_audit_time, operator_audit_remarks, 
      refund_status, settlement_refund_fee, refund_time, 
      type, user_id, other_reason
      )
    values (#{id,jdbcType=BIGINT}, #{outTradeNo,jdbcType=VARCHAR}, #{orderType,jdbcType=INTEGER}, 
      #{totalFee,jdbcType=DECIMAL}, #{refundFee,jdbcType=DECIMAL}, #{applyReason,jdbcType=VARCHAR}, 
      #{applyTime,jdbcType=TIMESTAMP}, #{shopAuditStatus,jdbcType=INTEGER}, #{shopAuditTime,jdbcType=TIMESTAMP}, 
      #{shopAuditRemarks,jdbcType=VARCHAR}, #{operatorAuditStatus,jdbcType=INTEGER}, 
      #{operatorAuditTime,jdbcType=TIMESTAMP}, #{operatorAuditRemarks,jdbcType=VARCHAR}, 
      #{refundStatus,jdbcType=INTEGER}, #{settlementRefundFee,jdbcType=DECIMAL}, #{refundTime,jdbcType=TIMESTAMP}, 
      #{type,jdbcType=INTEGER}, #{userId,jdbcType=BIGINT}, #{otherReason,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.xq.live.globalVoyage$.model.PayRefundDetails">
    insert into pay_refund_details
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="outTradeNo != null">
        out_trade_no,
      </if>
      <if test="orderType != null">
        order_type,
      </if>
      <if test="totalFee != null">
        total_fee,
      </if>
      <if test="refundFee != null">
        refund_fee,
      </if>
      <if test="applyReason != null">
        apply_reason,
      </if>
      <if test="applyTime != null">
        apply_time,
      </if>
      <if test="shopAuditStatus != null">
        shop_audit_status,
      </if>
      <if test="shopAuditTime != null">
        shop_audit_time,
      </if>
      <if test="shopAuditRemarks != null">
        shop_audit_remarks,
      </if>
      <if test="operatorAuditStatus != null">
        operator_audit_status,
      </if>
      <if test="operatorAuditTime != null">
        operator_audit_time,
      </if>
      <if test="operatorAuditRemarks != null">
        operator_audit_remarks,
      </if>
      <if test="refundStatus != null">
        refund_status,
      </if>
      <if test="settlementRefundFee != null">
        settlement_refund_fee,
      </if>
      <if test="refundTime != null">
        refund_time,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="otherReason != null">
        other_reason,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="outTradeNo != null">
        #{outTradeNo,jdbcType=VARCHAR},
      </if>
      <if test="orderType != null">
        #{orderType,jdbcType=INTEGER},
      </if>
      <if test="totalFee != null">
        #{totalFee,jdbcType=DECIMAL},
      </if>
      <if test="refundFee != null">
        #{refundFee,jdbcType=DECIMAL},
      </if>
      <if test="applyReason != null">
        #{applyReason,jdbcType=VARCHAR},
      </if>
      <if test="applyTime != null">
        #{applyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="shopAuditStatus != null">
        #{shopAuditStatus,jdbcType=INTEGER},
      </if>
      <if test="shopAuditTime != null">
        #{shopAuditTime,jdbcType=TIMESTAMP},
      </if>
      <if test="shopAuditRemarks != null">
        #{shopAuditRemarks,jdbcType=VARCHAR},
      </if>
      <if test="operatorAuditStatus != null">
        #{operatorAuditStatus,jdbcType=INTEGER},
      </if>
      <if test="operatorAuditTime != null">
        #{operatorAuditTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operatorAuditRemarks != null">
        #{operatorAuditRemarks,jdbcType=VARCHAR},
      </if>
      <if test="refundStatus != null">
        #{refundStatus,jdbcType=INTEGER},
      </if>
      <if test="settlementRefundFee != null">
        #{settlementRefundFee,jdbcType=DECIMAL},
      </if>
      <if test="refundTime != null">
        #{refundTime,jdbcType=TIMESTAMP},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="otherReason != null">
        #{otherReason,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xq.live.globalVoyage$.model.PayRefundDetailsExample" resultType="java.lang.Long">
    select count(*) from pay_refund_details
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update pay_refund_details
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.outTradeNo != null">
        out_trade_no = #{record.outTradeNo,jdbcType=VARCHAR},
      </if>
      <if test="record.orderType != null">
        order_type = #{record.orderType,jdbcType=INTEGER},
      </if>
      <if test="record.totalFee != null">
        total_fee = #{record.totalFee,jdbcType=DECIMAL},
      </if>
      <if test="record.refundFee != null">
        refund_fee = #{record.refundFee,jdbcType=DECIMAL},
      </if>
      <if test="record.applyReason != null">
        apply_reason = #{record.applyReason,jdbcType=VARCHAR},
      </if>
      <if test="record.applyTime != null">
        apply_time = #{record.applyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.shopAuditStatus != null">
        shop_audit_status = #{record.shopAuditStatus,jdbcType=INTEGER},
      </if>
      <if test="record.shopAuditTime != null">
        shop_audit_time = #{record.shopAuditTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.shopAuditRemarks != null">
        shop_audit_remarks = #{record.shopAuditRemarks,jdbcType=VARCHAR},
      </if>
      <if test="record.operatorAuditStatus != null">
        operator_audit_status = #{record.operatorAuditStatus,jdbcType=INTEGER},
      </if>
      <if test="record.operatorAuditTime != null">
        operator_audit_time = #{record.operatorAuditTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.operatorAuditRemarks != null">
        operator_audit_remarks = #{record.operatorAuditRemarks,jdbcType=VARCHAR},
      </if>
      <if test="record.refundStatus != null">
        refund_status = #{record.refundStatus,jdbcType=INTEGER},
      </if>
      <if test="record.settlementRefundFee != null">
        settlement_refund_fee = #{record.settlementRefundFee,jdbcType=DECIMAL},
      </if>
      <if test="record.refundTime != null">
        refund_time = #{record.refundTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.otherReason != null">
        other_reason = #{record.otherReason,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update pay_refund_details
    set id = #{record.id,jdbcType=BIGINT},
      out_trade_no = #{record.outTradeNo,jdbcType=VARCHAR},
      order_type = #{record.orderType,jdbcType=INTEGER},
      total_fee = #{record.totalFee,jdbcType=DECIMAL},
      refund_fee = #{record.refundFee,jdbcType=DECIMAL},
      apply_reason = #{record.applyReason,jdbcType=VARCHAR},
      apply_time = #{record.applyTime,jdbcType=TIMESTAMP},
      shop_audit_status = #{record.shopAuditStatus,jdbcType=INTEGER},
      shop_audit_time = #{record.shopAuditTime,jdbcType=TIMESTAMP},
      shop_audit_remarks = #{record.shopAuditRemarks,jdbcType=VARCHAR},
      operator_audit_status = #{record.operatorAuditStatus,jdbcType=INTEGER},
      operator_audit_time = #{record.operatorAuditTime,jdbcType=TIMESTAMP},
      operator_audit_remarks = #{record.operatorAuditRemarks,jdbcType=VARCHAR},
      refund_status = #{record.refundStatus,jdbcType=INTEGER},
      settlement_refund_fee = #{record.settlementRefundFee,jdbcType=DECIMAL},
      refund_time = #{record.refundTime,jdbcType=TIMESTAMP},
      type = #{record.type,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=BIGINT},
      other_reason = #{record.otherReason,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <resultMap id="BaseResultMap" type="com.xq.live.globalVoyage$.model.PayRefundDetails">
    <result column="id" jdbcType="BIGINT" property="id" />
    <result column="out_trade_no" jdbcType="VARCHAR" property="outTradeNo" />
    <result column="order_type" jdbcType="INTEGER" property="orderType" />
    <result column="total_fee" jdbcType="DECIMAL" property="totalFee" />
    <result column="refund_fee" jdbcType="DECIMAL" property="refundFee" />
    <result column="apply_reason" jdbcType="VARCHAR" property="applyReason" />
    <result column="apply_time" jdbcType="TIMESTAMP" property="applyTime" />
    <result column="shop_audit_status" jdbcType="INTEGER" property="shopAuditStatus" />
    <result column="shop_audit_time" jdbcType="TIMESTAMP" property="shopAuditTime" />
    <result column="shop_audit_remarks" jdbcType="VARCHAR" property="shopAuditRemarks" />
    <result column="operator_audit_status" jdbcType="INTEGER" property="operatorAuditStatus" />
    <result column="operator_audit_time" jdbcType="TIMESTAMP" property="operatorAuditTime" />
    <result column="operator_audit_remarks" jdbcType="VARCHAR" property="operatorAuditRemarks" />
    <result column="refund_status" jdbcType="INTEGER" property="refundStatus" />
    <result column="settlement_refund_fee" jdbcType="DECIMAL" property="settlementRefundFee" />
    <result column="refund_time" jdbcType="TIMESTAMP" property="refundTime" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="other_reason" jdbcType="VARCHAR" property="otherReason" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, out_trade_no, order_type, total_fee, refund_fee, apply_reason, apply_time, shop_audit_status, 
    shop_audit_time, shop_audit_remarks, operator_audit_status, operator_audit_time, 
    operator_audit_remarks, refund_status, settlement_refund_fee, refund_time, type, 
    user_id, other_reason
  </sql>
  <select id="selectByExample" parameterType="com.xq.live.globalVoyage$.model.PayRefundDetailsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from pay_refund_details
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.xq.live.globalVoyage$.model.PayRefundDetailsExample">
    delete from pay_refund_details
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xq.live.globalVoyage$.model.PayRefundDetails">
    insert into pay_refund_details (id, out_trade_no, order_type, 
      total_fee, refund_fee, apply_reason, 
      apply_time, shop_audit_status, shop_audit_time, 
      shop_audit_remarks, operator_audit_status, 
      operator_audit_time, operator_audit_remarks, 
      refund_status, settlement_refund_fee, refund_time, 
      type, user_id, other_reason
      )
    values (#{id,jdbcType=BIGINT}, #{outTradeNo,jdbcType=VARCHAR}, #{orderType,jdbcType=INTEGER}, 
      #{totalFee,jdbcType=DECIMAL}, #{refundFee,jdbcType=DECIMAL}, #{applyReason,jdbcType=VARCHAR}, 
      #{applyTime,jdbcType=TIMESTAMP}, #{shopAuditStatus,jdbcType=INTEGER}, #{shopAuditTime,jdbcType=TIMESTAMP}, 
      #{shopAuditRemarks,jdbcType=VARCHAR}, #{operatorAuditStatus,jdbcType=INTEGER}, 
      #{operatorAuditTime,jdbcType=TIMESTAMP}, #{operatorAuditRemarks,jdbcType=VARCHAR}, 
      #{refundStatus,jdbcType=INTEGER}, #{settlementRefundFee,jdbcType=DECIMAL}, #{refundTime,jdbcType=TIMESTAMP}, 
      #{type,jdbcType=INTEGER}, #{userId,jdbcType=BIGINT}, #{otherReason,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.xq.live.globalVoyage$.model.PayRefundDetails">
    insert into pay_refund_details
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="outTradeNo != null">
        out_trade_no,
      </if>
      <if test="orderType != null">
        order_type,
      </if>
      <if test="totalFee != null">
        total_fee,
      </if>
      <if test="refundFee != null">
        refund_fee,
      </if>
      <if test="applyReason != null">
        apply_reason,
      </if>
      <if test="applyTime != null">
        apply_time,
      </if>
      <if test="shopAuditStatus != null">
        shop_audit_status,
      </if>
      <if test="shopAuditTime != null">
        shop_audit_time,
      </if>
      <if test="shopAuditRemarks != null">
        shop_audit_remarks,
      </if>
      <if test="operatorAuditStatus != null">
        operator_audit_status,
      </if>
      <if test="operatorAuditTime != null">
        operator_audit_time,
      </if>
      <if test="operatorAuditRemarks != null">
        operator_audit_remarks,
      </if>
      <if test="refundStatus != null">
        refund_status,
      </if>
      <if test="settlementRefundFee != null">
        settlement_refund_fee,
      </if>
      <if test="refundTime != null">
        refund_time,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="otherReason != null">
        other_reason,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="outTradeNo != null">
        #{outTradeNo,jdbcType=VARCHAR},
      </if>
      <if test="orderType != null">
        #{orderType,jdbcType=INTEGER},
      </if>
      <if test="totalFee != null">
        #{totalFee,jdbcType=DECIMAL},
      </if>
      <if test="refundFee != null">
        #{refundFee,jdbcType=DECIMAL},
      </if>
      <if test="applyReason != null">
        #{applyReason,jdbcType=VARCHAR},
      </if>
      <if test="applyTime != null">
        #{applyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="shopAuditStatus != null">
        #{shopAuditStatus,jdbcType=INTEGER},
      </if>
      <if test="shopAuditTime != null">
        #{shopAuditTime,jdbcType=TIMESTAMP},
      </if>
      <if test="shopAuditRemarks != null">
        #{shopAuditRemarks,jdbcType=VARCHAR},
      </if>
      <if test="operatorAuditStatus != null">
        #{operatorAuditStatus,jdbcType=INTEGER},
      </if>
      <if test="operatorAuditTime != null">
        #{operatorAuditTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operatorAuditRemarks != null">
        #{operatorAuditRemarks,jdbcType=VARCHAR},
      </if>
      <if test="refundStatus != null">
        #{refundStatus,jdbcType=INTEGER},
      </if>
      <if test="settlementRefundFee != null">
        #{settlementRefundFee,jdbcType=DECIMAL},
      </if>
      <if test="refundTime != null">
        #{refundTime,jdbcType=TIMESTAMP},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="otherReason != null">
        #{otherReason,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xq.live.globalVoyage$.model.PayRefundDetailsExample" resultType="java.lang.Long">
    select count(*) from pay_refund_details
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update pay_refund_details
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.outTradeNo != null">
        out_trade_no = #{record.outTradeNo,jdbcType=VARCHAR},
      </if>
      <if test="record.orderType != null">
        order_type = #{record.orderType,jdbcType=INTEGER},
      </if>
      <if test="record.totalFee != null">
        total_fee = #{record.totalFee,jdbcType=DECIMAL},
      </if>
      <if test="record.refundFee != null">
        refund_fee = #{record.refundFee,jdbcType=DECIMAL},
      </if>
      <if test="record.applyReason != null">
        apply_reason = #{record.applyReason,jdbcType=VARCHAR},
      </if>
      <if test="record.applyTime != null">
        apply_time = #{record.applyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.shopAuditStatus != null">
        shop_audit_status = #{record.shopAuditStatus,jdbcType=INTEGER},
      </if>
      <if test="record.shopAuditTime != null">
        shop_audit_time = #{record.shopAuditTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.shopAuditRemarks != null">
        shop_audit_remarks = #{record.shopAuditRemarks,jdbcType=VARCHAR},
      </if>
      <if test="record.operatorAuditStatus != null">
        operator_audit_status = #{record.operatorAuditStatus,jdbcType=INTEGER},
      </if>
      <if test="record.operatorAuditTime != null">
        operator_audit_time = #{record.operatorAuditTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.operatorAuditRemarks != null">
        operator_audit_remarks = #{record.operatorAuditRemarks,jdbcType=VARCHAR},
      </if>
      <if test="record.refundStatus != null">
        refund_status = #{record.refundStatus,jdbcType=INTEGER},
      </if>
      <if test="record.settlementRefundFee != null">
        settlement_refund_fee = #{record.settlementRefundFee,jdbcType=DECIMAL},
      </if>
      <if test="record.refundTime != null">
        refund_time = #{record.refundTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.otherReason != null">
        other_reason = #{record.otherReason,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update pay_refund_details
    set id = #{record.id,jdbcType=BIGINT},
      out_trade_no = #{record.outTradeNo,jdbcType=VARCHAR},
      order_type = #{record.orderType,jdbcType=INTEGER},
      total_fee = #{record.totalFee,jdbcType=DECIMAL},
      refund_fee = #{record.refundFee,jdbcType=DECIMAL},
      apply_reason = #{record.applyReason,jdbcType=VARCHAR},
      apply_time = #{record.applyTime,jdbcType=TIMESTAMP},
      shop_audit_status = #{record.shopAuditStatus,jdbcType=INTEGER},
      shop_audit_time = #{record.shopAuditTime,jdbcType=TIMESTAMP},
      shop_audit_remarks = #{record.shopAuditRemarks,jdbcType=VARCHAR},
      operator_audit_status = #{record.operatorAuditStatus,jdbcType=INTEGER},
      operator_audit_time = #{record.operatorAuditTime,jdbcType=TIMESTAMP},
      operator_audit_remarks = #{record.operatorAuditRemarks,jdbcType=VARCHAR},
      refund_status = #{record.refundStatus,jdbcType=INTEGER},
      settlement_refund_fee = #{record.settlementRefundFee,jdbcType=DECIMAL},
      refund_time = #{record.refundTime,jdbcType=TIMESTAMP},
      type = #{record.type,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=BIGINT},
      other_reason = #{record.otherReason,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>