<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xq.live.globalVoyage$.dao.GoodsSkuMapper">
  <resultMap id="BaseResultMap" type="com.xq.live.globalVoyage$.model.GoodsSku">
    <result column="goods_id" jdbcType="BIGINT" property="goodsId" />
    <result column="goods_name" jdbcType="VARCHAR" property="goodsName" />
    <result column="goods_spu_id" jdbcType="BIGINT" property="goodsSpuId" />
    <result column="goods_sku" jdbcType="VARCHAR" property="goodsSku" />
    <result column="goods_price" jdbcType="DECIMAL" property="goodsPrice" />
    <result column="goods_weight" jdbcType="DOUBLE" property="goodsWeight" />
    <result column="goods_volume" jdbcType="DOUBLE" property="goodsVolume" />
    <result column="gs_code" jdbcType="VARCHAR" property="gsCode" />
    <result column="goods_class_id" jdbcType="BIGINT" property="goodsClassId" />
    <result column="goods_brand_id" jdbcType="BIGINT" property="goodsBrandId" />
    <result column="gs_unit" jdbcType="VARCHAR" property="gsUnit" />
    <result column="goods_status" jdbcType="VARCHAR" property="goodsStatus" />
    <result column="goods_seq" jdbcType="INTEGER" property="goodsSeq" />
    <result column="is_deleted" jdbcType="TINYINT" property="isDeleted" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="update_by" jdbcType="VARCHAR" property="updateBy" />
    <result column="preferential_price" jdbcType="DECIMAL" property="preferentialPrice" />
    <result column="automatic_replenishment" jdbcType="INTEGER" property="automaticReplenishment" />
    <result column="sku_type" jdbcType="VARCHAR" property="skuType" />
    <result column="shop_id" jdbcType="BIGINT" property="shopId" />
    <result column="sales" jdbcType="INTEGER" property="sales" />
    <result column="details" jdbcType="VARCHAR" property="details" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.xq.live.globalVoyage$.model.GoodsSkuWithBLOBs">
    <result column="goods_main_pic" jdbcType="LONGVARCHAR" property="goodsMainPic" />
    <result column="goods_small_pics" jdbcType="LONGVARCHAR" property="goodsSmallPics" />
    <result column="goods_specs" jdbcType="LONGVARCHAR" property="goodsSpecs" />
    <result column="goods_attrs" jdbcType="LONGVARCHAR" property="goodsAttrs" />
    <result column="remark" jdbcType="LONGVARCHAR" property="remark" />
    <result column="details_img" jdbcType="LONGVARCHAR" property="detailsImg" />
    <result column="rejected_img" jdbcType="LONGVARCHAR" property="rejectedImg" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    goods_id, goods_name, goods_spu_id, goods_sku, goods_price, goods_weight, goods_volume, 
    gs_code, goods_class_id, goods_brand_id, gs_unit, goods_status, goods_seq, is_deleted, 
    create_time, update_time, create_by, update_by, preferential_price, automatic_replenishment, 
    sku_type, shop_id, sales, details
  </sql>
  <sql id="Blob_Column_List">
    goods_main_pic, goods_small_pics, goods_specs, goods_attrs, remark, details_img, 
    rejected_img
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.xq.live.globalVoyage$.model.GoodsSkuExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from goods_sku
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.xq.live.globalVoyage$.model.GoodsSkuExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from goods_sku
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.xq.live.globalVoyage$.model.GoodsSkuExample">
    delete from goods_sku
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xq.live.globalVoyage$.model.GoodsSkuWithBLOBs">
    insert into goods_sku (goods_id, goods_name, goods_spu_id, 
      goods_sku, goods_price, goods_weight, 
      goods_volume, gs_code, goods_class_id, 
      goods_brand_id, gs_unit, goods_status, 
      goods_seq, is_deleted, create_time, 
      update_time, create_by, update_by, 
      preferential_price, automatic_replenishment, 
      sku_type, shop_id, sales, 
      details, goods_main_pic, goods_small_pics, 
      goods_specs, goods_attrs, remark, 
      details_img, rejected_img)
    values (#{goodsId,jdbcType=BIGINT}, #{goodsName,jdbcType=VARCHAR}, #{goodsSpuId,jdbcType=BIGINT}, 
      #{goodsSku,jdbcType=VARCHAR}, #{goodsPrice,jdbcType=DECIMAL}, #{goodsWeight,jdbcType=DOUBLE}, 
      #{goodsVolume,jdbcType=DOUBLE}, #{gsCode,jdbcType=VARCHAR}, #{goodsClassId,jdbcType=BIGINT}, 
      #{goodsBrandId,jdbcType=BIGINT}, #{gsUnit,jdbcType=VARCHAR}, #{goodsStatus,jdbcType=VARCHAR}, 
      #{goodsSeq,jdbcType=INTEGER}, #{isDeleted,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{createBy,jdbcType=VARCHAR}, #{updateBy,jdbcType=VARCHAR}, 
      #{preferentialPrice,jdbcType=DECIMAL}, #{automaticReplenishment,jdbcType=INTEGER}, 
      #{skuType,jdbcType=VARCHAR}, #{shopId,jdbcType=BIGINT}, #{sales,jdbcType=INTEGER}, 
      #{details,jdbcType=VARCHAR}, #{goodsMainPic,jdbcType=LONGVARCHAR}, #{goodsSmallPics,jdbcType=LONGVARCHAR}, 
      #{goodsSpecs,jdbcType=LONGVARCHAR}, #{goodsAttrs,jdbcType=LONGVARCHAR}, #{remark,jdbcType=LONGVARCHAR}, 
      #{detailsImg,jdbcType=LONGVARCHAR}, #{rejectedImg,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.xq.live.globalVoyage$.model.GoodsSkuWithBLOBs">
    insert into goods_sku
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="goodsId != null">
        goods_id,
      </if>
      <if test="goodsName != null">
        goods_name,
      </if>
      <if test="goodsSpuId != null">
        goods_spu_id,
      </if>
      <if test="goodsSku != null">
        goods_sku,
      </if>
      <if test="goodsPrice != null">
        goods_price,
      </if>
      <if test="goodsWeight != null">
        goods_weight,
      </if>
      <if test="goodsVolume != null">
        goods_volume,
      </if>
      <if test="gsCode != null">
        gs_code,
      </if>
      <if test="goodsClassId != null">
        goods_class_id,
      </if>
      <if test="goodsBrandId != null">
        goods_brand_id,
      </if>
      <if test="gsUnit != null">
        gs_unit,
      </if>
      <if test="goodsStatus != null">
        goods_status,
      </if>
      <if test="goodsSeq != null">
        goods_seq,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="updateBy != null">
        update_by,
      </if>
      <if test="preferentialPrice != null">
        preferential_price,
      </if>
      <if test="automaticReplenishment != null">
        automatic_replenishment,
      </if>
      <if test="skuType != null">
        sku_type,
      </if>
      <if test="shopId != null">
        shop_id,
      </if>
      <if test="sales != null">
        sales,
      </if>
      <if test="details != null">
        details,
      </if>
      <if test="goodsMainPic != null">
        goods_main_pic,
      </if>
      <if test="goodsSmallPics != null">
        goods_small_pics,
      </if>
      <if test="goodsSpecs != null">
        goods_specs,
      </if>
      <if test="goodsAttrs != null">
        goods_attrs,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="detailsImg != null">
        details_img,
      </if>
      <if test="rejectedImg != null">
        rejected_img,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="goodsId != null">
        #{goodsId,jdbcType=BIGINT},
      </if>
      <if test="goodsName != null">
        #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="goodsSpuId != null">
        #{goodsSpuId,jdbcType=BIGINT},
      </if>
      <if test="goodsSku != null">
        #{goodsSku,jdbcType=VARCHAR},
      </if>
      <if test="goodsPrice != null">
        #{goodsPrice,jdbcType=DECIMAL},
      </if>
      <if test="goodsWeight != null">
        #{goodsWeight,jdbcType=DOUBLE},
      </if>
      <if test="goodsVolume != null">
        #{goodsVolume,jdbcType=DOUBLE},
      </if>
      <if test="gsCode != null">
        #{gsCode,jdbcType=VARCHAR},
      </if>
      <if test="goodsClassId != null">
        #{goodsClassId,jdbcType=BIGINT},
      </if>
      <if test="goodsBrandId != null">
        #{goodsBrandId,jdbcType=BIGINT},
      </if>
      <if test="gsUnit != null">
        #{gsUnit,jdbcType=VARCHAR},
      </if>
      <if test="goodsStatus != null">
        #{goodsStatus,jdbcType=VARCHAR},
      </if>
      <if test="goodsSeq != null">
        #{goodsSeq,jdbcType=INTEGER},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="preferentialPrice != null">
        #{preferentialPrice,jdbcType=DECIMAL},
      </if>
      <if test="automaticReplenishment != null">
        #{automaticReplenishment,jdbcType=INTEGER},
      </if>
      <if test="skuType != null">
        #{skuType,jdbcType=VARCHAR},
      </if>
      <if test="shopId != null">
        #{shopId,jdbcType=BIGINT},
      </if>
      <if test="sales != null">
        #{sales,jdbcType=INTEGER},
      </if>
      <if test="details != null">
        #{details,jdbcType=VARCHAR},
      </if>
      <if test="goodsMainPic != null">
        #{goodsMainPic,jdbcType=LONGVARCHAR},
      </if>
      <if test="goodsSmallPics != null">
        #{goodsSmallPics,jdbcType=LONGVARCHAR},
      </if>
      <if test="goodsSpecs != null">
        #{goodsSpecs,jdbcType=LONGVARCHAR},
      </if>
      <if test="goodsAttrs != null">
        #{goodsAttrs,jdbcType=LONGVARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=LONGVARCHAR},
      </if>
      <if test="detailsImg != null">
        #{detailsImg,jdbcType=LONGVARCHAR},
      </if>
      <if test="rejectedImg != null">
        #{rejectedImg,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xq.live.globalVoyage$.model.GoodsSkuExample" resultType="java.lang.Long">
    select count(*) from goods_sku
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update goods_sku
    <set>
      <if test="record.goodsId != null">
        goods_id = #{record.goodsId,jdbcType=BIGINT},
      </if>
      <if test="record.goodsName != null">
        goods_name = #{record.goodsName,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsSpuId != null">
        goods_spu_id = #{record.goodsSpuId,jdbcType=BIGINT},
      </if>
      <if test="record.goodsSku != null">
        goods_sku = #{record.goodsSku,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsPrice != null">
        goods_price = #{record.goodsPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.goodsWeight != null">
        goods_weight = #{record.goodsWeight,jdbcType=DOUBLE},
      </if>
      <if test="record.goodsVolume != null">
        goods_volume = #{record.goodsVolume,jdbcType=DOUBLE},
      </if>
      <if test="record.gsCode != null">
        gs_code = #{record.gsCode,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsClassId != null">
        goods_class_id = #{record.goodsClassId,jdbcType=BIGINT},
      </if>
      <if test="record.goodsBrandId != null">
        goods_brand_id = #{record.goodsBrandId,jdbcType=BIGINT},
      </if>
      <if test="record.gsUnit != null">
        gs_unit = #{record.gsUnit,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsStatus != null">
        goods_status = #{record.goodsStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsSeq != null">
        goods_seq = #{record.goodsSeq,jdbcType=INTEGER},
      </if>
      <if test="record.isDeleted != null">
        is_deleted = #{record.isDeleted,jdbcType=TINYINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createBy != null">
        create_by = #{record.createBy,jdbcType=VARCHAR},
      </if>
      <if test="record.updateBy != null">
        update_by = #{record.updateBy,jdbcType=VARCHAR},
      </if>
      <if test="record.preferentialPrice != null">
        preferential_price = #{record.preferentialPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.automaticReplenishment != null">
        automatic_replenishment = #{record.automaticReplenishment,jdbcType=INTEGER},
      </if>
      <if test="record.skuType != null">
        sku_type = #{record.skuType,jdbcType=VARCHAR},
      </if>
      <if test="record.shopId != null">
        shop_id = #{record.shopId,jdbcType=BIGINT},
      </if>
      <if test="record.sales != null">
        sales = #{record.sales,jdbcType=INTEGER},
      </if>
      <if test="record.details != null">
        details = #{record.details,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsMainPic != null">
        goods_main_pic = #{record.goodsMainPic,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.goodsSmallPics != null">
        goods_small_pics = #{record.goodsSmallPics,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.goodsSpecs != null">
        goods_specs = #{record.goodsSpecs,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.goodsAttrs != null">
        goods_attrs = #{record.goodsAttrs,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.detailsImg != null">
        details_img = #{record.detailsImg,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.rejectedImg != null">
        rejected_img = #{record.rejectedImg,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update goods_sku
    set goods_id = #{record.goodsId,jdbcType=BIGINT},
      goods_name = #{record.goodsName,jdbcType=VARCHAR},
      goods_spu_id = #{record.goodsSpuId,jdbcType=BIGINT},
      goods_sku = #{record.goodsSku,jdbcType=VARCHAR},
      goods_price = #{record.goodsPrice,jdbcType=DECIMAL},
      goods_weight = #{record.goodsWeight,jdbcType=DOUBLE},
      goods_volume = #{record.goodsVolume,jdbcType=DOUBLE},
      gs_code = #{record.gsCode,jdbcType=VARCHAR},
      goods_class_id = #{record.goodsClassId,jdbcType=BIGINT},
      goods_brand_id = #{record.goodsBrandId,jdbcType=BIGINT},
      gs_unit = #{record.gsUnit,jdbcType=VARCHAR},
      goods_status = #{record.goodsStatus,jdbcType=VARCHAR},
      goods_seq = #{record.goodsSeq,jdbcType=INTEGER},
      is_deleted = #{record.isDeleted,jdbcType=TINYINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      create_by = #{record.createBy,jdbcType=VARCHAR},
      update_by = #{record.updateBy,jdbcType=VARCHAR},
      preferential_price = #{record.preferentialPrice,jdbcType=DECIMAL},
      automatic_replenishment = #{record.automaticReplenishment,jdbcType=INTEGER},
      sku_type = #{record.skuType,jdbcType=VARCHAR},
      shop_id = #{record.shopId,jdbcType=BIGINT},
      sales = #{record.sales,jdbcType=INTEGER},
      details = #{record.details,jdbcType=VARCHAR},
      goods_main_pic = #{record.goodsMainPic,jdbcType=LONGVARCHAR},
      goods_small_pics = #{record.goodsSmallPics,jdbcType=LONGVARCHAR},
      goods_specs = #{record.goodsSpecs,jdbcType=LONGVARCHAR},
      goods_attrs = #{record.goodsAttrs,jdbcType=LONGVARCHAR},
      remark = #{record.remark,jdbcType=LONGVARCHAR},
      details_img = #{record.detailsImg,jdbcType=LONGVARCHAR},
      rejected_img = #{record.rejectedImg,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update goods_sku
    set goods_id = #{record.goodsId,jdbcType=BIGINT},
      goods_name = #{record.goodsName,jdbcType=VARCHAR},
      goods_spu_id = #{record.goodsSpuId,jdbcType=BIGINT},
      goods_sku = #{record.goodsSku,jdbcType=VARCHAR},
      goods_price = #{record.goodsPrice,jdbcType=DECIMAL},
      goods_weight = #{record.goodsWeight,jdbcType=DOUBLE},
      goods_volume = #{record.goodsVolume,jdbcType=DOUBLE},
      gs_code = #{record.gsCode,jdbcType=VARCHAR},
      goods_class_id = #{record.goodsClassId,jdbcType=BIGINT},
      goods_brand_id = #{record.goodsBrandId,jdbcType=BIGINT},
      gs_unit = #{record.gsUnit,jdbcType=VARCHAR},
      goods_status = #{record.goodsStatus,jdbcType=VARCHAR},
      goods_seq = #{record.goodsSeq,jdbcType=INTEGER},
      is_deleted = #{record.isDeleted,jdbcType=TINYINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      create_by = #{record.createBy,jdbcType=VARCHAR},
      update_by = #{record.updateBy,jdbcType=VARCHAR},
      preferential_price = #{record.preferentialPrice,jdbcType=DECIMAL},
      automatic_replenishment = #{record.automaticReplenishment,jdbcType=INTEGER},
      sku_type = #{record.skuType,jdbcType=VARCHAR},
      shop_id = #{record.shopId,jdbcType=BIGINT},
      sales = #{record.sales,jdbcType=INTEGER},
      details = #{record.details,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <resultMap id="BaseResultMap" type="com.xq.live.globalVoyage$.model.GoodsSku">
    <result column="goods_id" jdbcType="BIGINT" property="goodsId" />
    <result column="goods_name" jdbcType="VARCHAR" property="goodsName" />
    <result column="goods_spu_id" jdbcType="BIGINT" property="goodsSpuId" />
    <result column="goods_sku" jdbcType="VARCHAR" property="goodsSku" />
    <result column="goods_price" jdbcType="DECIMAL" property="goodsPrice" />
    <result column="goods_weight" jdbcType="DOUBLE" property="goodsWeight" />
    <result column="goods_volume" jdbcType="DOUBLE" property="goodsVolume" />
    <result column="gs_code" jdbcType="VARCHAR" property="gsCode" />
    <result column="goods_main_pic" jdbcType="VARCHAR" property="goodsMainPic" />
    <result column="goods_small_pics" jdbcType="VARCHAR" property="goodsSmallPics" />
    <result column="goods_class_id" jdbcType="BIGINT" property="goodsClassId" />
    <result column="goods_brand_id" jdbcType="BIGINT" property="goodsBrandId" />
    <result column="gs_unit" jdbcType="VARCHAR" property="gsUnit" />
    <result column="goods_status" jdbcType="VARCHAR" property="goodsStatus" />
    <result column="goods_seq" jdbcType="INTEGER" property="goodsSeq" />
    <result column="is_deleted" jdbcType="TINYINT" property="isDeleted" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="update_by" jdbcType="VARCHAR" property="updateBy" />
    <result column="preferential_price" jdbcType="DECIMAL" property="preferentialPrice" />
    <result column="automatic_replenishment" jdbcType="INTEGER" property="automaticReplenishment" />
    <result column="sku_type" jdbcType="VARCHAR" property="skuType" />
    <result column="shop_id" jdbcType="BIGINT" property="shopId" />
    <result column="sales" jdbcType="INTEGER" property="sales" />
    <result column="details" jdbcType="VARCHAR" property="details" />
    <result column="details_img" jdbcType="VARCHAR" property="detailsImg" />
    <result column="rejected_img" jdbcType="VARCHAR" property="rejectedImg" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.xq.live.globalVoyage$.model.GoodsSkuWithBLOBs">
    <result column="goods_specs" jdbcType="LONGVARCHAR" property="goodsSpecs" />
    <result column="goods_attrs" jdbcType="LONGVARCHAR" property="goodsAttrs" />
    <result column="remark" jdbcType="LONGVARCHAR" property="remark" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    goods_id, goods_name, goods_spu_id, goods_sku, goods_price, goods_weight, goods_volume, 
    gs_code, goods_main_pic, goods_small_pics, goods_class_id, goods_brand_id, gs_unit, 
    goods_status, goods_seq, is_deleted, create_time, update_time, create_by, update_by, 
    preferential_price, automatic_replenishment, sku_type, shop_id, sales, details, details_img, 
    rejected_img
  </sql>
  <sql id="Blob_Column_List">
    goods_specs, goods_attrs, remark
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.xq.live.globalVoyage$.model.GoodsSkuExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from goods_sku
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.xq.live.globalVoyage$.model.GoodsSkuExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from goods_sku
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.xq.live.globalVoyage$.model.GoodsSkuExample">
    delete from goods_sku
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xq.live.globalVoyage$.model.GoodsSkuWithBLOBs">
    insert into goods_sku (goods_id, goods_name, goods_spu_id, 
      goods_sku, goods_price, goods_weight, 
      goods_volume, gs_code, goods_main_pic, 
      goods_small_pics, goods_class_id, goods_brand_id, 
      gs_unit, goods_status, goods_seq, 
      is_deleted, create_time, update_time, 
      create_by, update_by, preferential_price, 
      automatic_replenishment, sku_type, shop_id, 
      sales, details, details_img, 
      rejected_img, goods_specs, goods_attrs, 
      remark)
    values (#{goodsId,jdbcType=BIGINT}, #{goodsName,jdbcType=VARCHAR}, #{goodsSpuId,jdbcType=BIGINT}, 
      #{goodsSku,jdbcType=VARCHAR}, #{goodsPrice,jdbcType=DECIMAL}, #{goodsWeight,jdbcType=DOUBLE}, 
      #{goodsVolume,jdbcType=DOUBLE}, #{gsCode,jdbcType=VARCHAR}, #{goodsMainPic,jdbcType=VARCHAR}, 
      #{goodsSmallPics,jdbcType=VARCHAR}, #{goodsClassId,jdbcType=BIGINT}, #{goodsBrandId,jdbcType=BIGINT}, 
      #{gsUnit,jdbcType=VARCHAR}, #{goodsStatus,jdbcType=VARCHAR}, #{goodsSeq,jdbcType=INTEGER}, 
      #{isDeleted,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{createBy,jdbcType=VARCHAR}, #{updateBy,jdbcType=VARCHAR}, #{preferentialPrice,jdbcType=DECIMAL}, 
      #{automaticReplenishment,jdbcType=INTEGER}, #{skuType,jdbcType=VARCHAR}, #{shopId,jdbcType=BIGINT}, 
      #{sales,jdbcType=INTEGER}, #{details,jdbcType=VARCHAR}, #{detailsImg,jdbcType=VARCHAR}, 
      #{rejectedImg,jdbcType=VARCHAR}, #{goodsSpecs,jdbcType=LONGVARCHAR}, #{goodsAttrs,jdbcType=LONGVARCHAR}, 
      #{remark,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.xq.live.globalVoyage$.model.GoodsSkuWithBLOBs">
    insert into goods_sku
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="goodsId != null">
        goods_id,
      </if>
      <if test="goodsName != null">
        goods_name,
      </if>
      <if test="goodsSpuId != null">
        goods_spu_id,
      </if>
      <if test="goodsSku != null">
        goods_sku,
      </if>
      <if test="goodsPrice != null">
        goods_price,
      </if>
      <if test="goodsWeight != null">
        goods_weight,
      </if>
      <if test="goodsVolume != null">
        goods_volume,
      </if>
      <if test="gsCode != null">
        gs_code,
      </if>
      <if test="goodsMainPic != null">
        goods_main_pic,
      </if>
      <if test="goodsSmallPics != null">
        goods_small_pics,
      </if>
      <if test="goodsClassId != null">
        goods_class_id,
      </if>
      <if test="goodsBrandId != null">
        goods_brand_id,
      </if>
      <if test="gsUnit != null">
        gs_unit,
      </if>
      <if test="goodsStatus != null">
        goods_status,
      </if>
      <if test="goodsSeq != null">
        goods_seq,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="updateBy != null">
        update_by,
      </if>
      <if test="preferentialPrice != null">
        preferential_price,
      </if>
      <if test="automaticReplenishment != null">
        automatic_replenishment,
      </if>
      <if test="skuType != null">
        sku_type,
      </if>
      <if test="shopId != null">
        shop_id,
      </if>
      <if test="sales != null">
        sales,
      </if>
      <if test="details != null">
        details,
      </if>
      <if test="detailsImg != null">
        details_img,
      </if>
      <if test="rejectedImg != null">
        rejected_img,
      </if>
      <if test="goodsSpecs != null">
        goods_specs,
      </if>
      <if test="goodsAttrs != null">
        goods_attrs,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="goodsId != null">
        #{goodsId,jdbcType=BIGINT},
      </if>
      <if test="goodsName != null">
        #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="goodsSpuId != null">
        #{goodsSpuId,jdbcType=BIGINT},
      </if>
      <if test="goodsSku != null">
        #{goodsSku,jdbcType=VARCHAR},
      </if>
      <if test="goodsPrice != null">
        #{goodsPrice,jdbcType=DECIMAL},
      </if>
      <if test="goodsWeight != null">
        #{goodsWeight,jdbcType=DOUBLE},
      </if>
      <if test="goodsVolume != null">
        #{goodsVolume,jdbcType=DOUBLE},
      </if>
      <if test="gsCode != null">
        #{gsCode,jdbcType=VARCHAR},
      </if>
      <if test="goodsMainPic != null">
        #{goodsMainPic,jdbcType=VARCHAR},
      </if>
      <if test="goodsSmallPics != null">
        #{goodsSmallPics,jdbcType=VARCHAR},
      </if>
      <if test="goodsClassId != null">
        #{goodsClassId,jdbcType=BIGINT},
      </if>
      <if test="goodsBrandId != null">
        #{goodsBrandId,jdbcType=BIGINT},
      </if>
      <if test="gsUnit != null">
        #{gsUnit,jdbcType=VARCHAR},
      </if>
      <if test="goodsStatus != null">
        #{goodsStatus,jdbcType=VARCHAR},
      </if>
      <if test="goodsSeq != null">
        #{goodsSeq,jdbcType=INTEGER},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="preferentialPrice != null">
        #{preferentialPrice,jdbcType=DECIMAL},
      </if>
      <if test="automaticReplenishment != null">
        #{automaticReplenishment,jdbcType=INTEGER},
      </if>
      <if test="skuType != null">
        #{skuType,jdbcType=VARCHAR},
      </if>
      <if test="shopId != null">
        #{shopId,jdbcType=BIGINT},
      </if>
      <if test="sales != null">
        #{sales,jdbcType=INTEGER},
      </if>
      <if test="details != null">
        #{details,jdbcType=VARCHAR},
      </if>
      <if test="detailsImg != null">
        #{detailsImg,jdbcType=VARCHAR},
      </if>
      <if test="rejectedImg != null">
        #{rejectedImg,jdbcType=VARCHAR},
      </if>
      <if test="goodsSpecs != null">
        #{goodsSpecs,jdbcType=LONGVARCHAR},
      </if>
      <if test="goodsAttrs != null">
        #{goodsAttrs,jdbcType=LONGVARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xq.live.globalVoyage$.model.GoodsSkuExample" resultType="java.lang.Long">
    select count(*) from goods_sku
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update goods_sku
    <set>
      <if test="record.goodsId != null">
        goods_id = #{record.goodsId,jdbcType=BIGINT},
      </if>
      <if test="record.goodsName != null">
        goods_name = #{record.goodsName,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsSpuId != null">
        goods_spu_id = #{record.goodsSpuId,jdbcType=BIGINT},
      </if>
      <if test="record.goodsSku != null">
        goods_sku = #{record.goodsSku,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsPrice != null">
        goods_price = #{record.goodsPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.goodsWeight != null">
        goods_weight = #{record.goodsWeight,jdbcType=DOUBLE},
      </if>
      <if test="record.goodsVolume != null">
        goods_volume = #{record.goodsVolume,jdbcType=DOUBLE},
      </if>
      <if test="record.gsCode != null">
        gs_code = #{record.gsCode,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsMainPic != null">
        goods_main_pic = #{record.goodsMainPic,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsSmallPics != null">
        goods_small_pics = #{record.goodsSmallPics,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsClassId != null">
        goods_class_id = #{record.goodsClassId,jdbcType=BIGINT},
      </if>
      <if test="record.goodsBrandId != null">
        goods_brand_id = #{record.goodsBrandId,jdbcType=BIGINT},
      </if>
      <if test="record.gsUnit != null">
        gs_unit = #{record.gsUnit,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsStatus != null">
        goods_status = #{record.goodsStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsSeq != null">
        goods_seq = #{record.goodsSeq,jdbcType=INTEGER},
      </if>
      <if test="record.isDeleted != null">
        is_deleted = #{record.isDeleted,jdbcType=TINYINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createBy != null">
        create_by = #{record.createBy,jdbcType=VARCHAR},
      </if>
      <if test="record.updateBy != null">
        update_by = #{record.updateBy,jdbcType=VARCHAR},
      </if>
      <if test="record.preferentialPrice != null">
        preferential_price = #{record.preferentialPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.automaticReplenishment != null">
        automatic_replenishment = #{record.automaticReplenishment,jdbcType=INTEGER},
      </if>
      <if test="record.skuType != null">
        sku_type = #{record.skuType,jdbcType=VARCHAR},
      </if>
      <if test="record.shopId != null">
        shop_id = #{record.shopId,jdbcType=BIGINT},
      </if>
      <if test="record.sales != null">
        sales = #{record.sales,jdbcType=INTEGER},
      </if>
      <if test="record.details != null">
        details = #{record.details,jdbcType=VARCHAR},
      </if>
      <if test="record.detailsImg != null">
        details_img = #{record.detailsImg,jdbcType=VARCHAR},
      </if>
      <if test="record.rejectedImg != null">
        rejected_img = #{record.rejectedImg,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsSpecs != null">
        goods_specs = #{record.goodsSpecs,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.goodsAttrs != null">
        goods_attrs = #{record.goodsAttrs,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update goods_sku
    set goods_id = #{record.goodsId,jdbcType=BIGINT},
      goods_name = #{record.goodsName,jdbcType=VARCHAR},
      goods_spu_id = #{record.goodsSpuId,jdbcType=BIGINT},
      goods_sku = #{record.goodsSku,jdbcType=VARCHAR},
      goods_price = #{record.goodsPrice,jdbcType=DECIMAL},
      goods_weight = #{record.goodsWeight,jdbcType=DOUBLE},
      goods_volume = #{record.goodsVolume,jdbcType=DOUBLE},
      gs_code = #{record.gsCode,jdbcType=VARCHAR},
      goods_main_pic = #{record.goodsMainPic,jdbcType=VARCHAR},
      goods_small_pics = #{record.goodsSmallPics,jdbcType=VARCHAR},
      goods_class_id = #{record.goodsClassId,jdbcType=BIGINT},
      goods_brand_id = #{record.goodsBrandId,jdbcType=BIGINT},
      gs_unit = #{record.gsUnit,jdbcType=VARCHAR},
      goods_status = #{record.goodsStatus,jdbcType=VARCHAR},
      goods_seq = #{record.goodsSeq,jdbcType=INTEGER},
      is_deleted = #{record.isDeleted,jdbcType=TINYINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      create_by = #{record.createBy,jdbcType=VARCHAR},
      update_by = #{record.updateBy,jdbcType=VARCHAR},
      preferential_price = #{record.preferentialPrice,jdbcType=DECIMAL},
      automatic_replenishment = #{record.automaticReplenishment,jdbcType=INTEGER},
      sku_type = #{record.skuType,jdbcType=VARCHAR},
      shop_id = #{record.shopId,jdbcType=BIGINT},
      sales = #{record.sales,jdbcType=INTEGER},
      details = #{record.details,jdbcType=VARCHAR},
      details_img = #{record.detailsImg,jdbcType=VARCHAR},
      rejected_img = #{record.rejectedImg,jdbcType=VARCHAR},
      goods_specs = #{record.goodsSpecs,jdbcType=LONGVARCHAR},
      goods_attrs = #{record.goodsAttrs,jdbcType=LONGVARCHAR},
      remark = #{record.remark,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update goods_sku
    set goods_id = #{record.goodsId,jdbcType=BIGINT},
      goods_name = #{record.goodsName,jdbcType=VARCHAR},
      goods_spu_id = #{record.goodsSpuId,jdbcType=BIGINT},
      goods_sku = #{record.goodsSku,jdbcType=VARCHAR},
      goods_price = #{record.goodsPrice,jdbcType=DECIMAL},
      goods_weight = #{record.goodsWeight,jdbcType=DOUBLE},
      goods_volume = #{record.goodsVolume,jdbcType=DOUBLE},
      gs_code = #{record.gsCode,jdbcType=VARCHAR},
      goods_main_pic = #{record.goodsMainPic,jdbcType=VARCHAR},
      goods_small_pics = #{record.goodsSmallPics,jdbcType=VARCHAR},
      goods_class_id = #{record.goodsClassId,jdbcType=BIGINT},
      goods_brand_id = #{record.goodsBrandId,jdbcType=BIGINT},
      gs_unit = #{record.gsUnit,jdbcType=VARCHAR},
      goods_status = #{record.goodsStatus,jdbcType=VARCHAR},
      goods_seq = #{record.goodsSeq,jdbcType=INTEGER},
      is_deleted = #{record.isDeleted,jdbcType=TINYINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      create_by = #{record.createBy,jdbcType=VARCHAR},
      update_by = #{record.updateBy,jdbcType=VARCHAR},
      preferential_price = #{record.preferentialPrice,jdbcType=DECIMAL},
      automatic_replenishment = #{record.automaticReplenishment,jdbcType=INTEGER},
      sku_type = #{record.skuType,jdbcType=VARCHAR},
      shop_id = #{record.shopId,jdbcType=BIGINT},
      sales = #{record.sales,jdbcType=INTEGER},
      details = #{record.details,jdbcType=VARCHAR},
      details_img = #{record.detailsImg,jdbcType=VARCHAR},
      rejected_img = #{record.rejectedImg,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <resultMap id="BaseResultMap" type="com.xq.live.globalVoyage$.model.GoodsSku">
    <result column="id" jdbcType="BIGINT" property="id" />
    <result column="sku_code" jdbcType="VARCHAR" property="skuCode" />
    <result column="sku_name" jdbcType="VARCHAR" property="skuName" />
    <result column="sku_pic" jdbcType="VARCHAR" property="skuPic" />
    <result column="small_sku_pic" jdbcType="VARCHAR" property="smallSkuPic" />
    <result column="cost_price" jdbcType="DECIMAL" property="costPrice" />
    <result column="market_price" jdbcType="DECIMAL" property="marketPrice" />
    <result column="sell_price" jdbcType="DECIMAL" property="sellPrice" />
    <result column="other_marker_price" jdbcType="DECIMAL" property="otherMarkerPrice" />
    <result column="stock_num" jdbcType="INTEGER" property="stockNum" />
    <result column="waring_stock" jdbcType="INTEGER" property="waringStock" />
    <result column="real_weight" jdbcType="DECIMAL" property="realWeight" />
    <result column="spu_id" jdbcType="BIGINT" property="spuId" />
    <result column="delivery_template_id" jdbcType="BIGINT" property="deliveryTemplateId" />
    <result column="is_deleted" jdbcType="INTEGER" property="isDeleted" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="shop_id" jdbcType="BIGINT" property="shopId" />
    <result column="sell_num" jdbcType="INTEGER" property="sellNum" />
    <result column="unit" jdbcType="VARCHAR" property="unit" />
    <result column="mini_num" jdbcType="INTEGER" property="miniNum" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="send_type" jdbcType="INTEGER" property="sendType" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="single_type" jdbcType="INTEGER" property="singleType" />
    <result column="expiry_date" jdbcType="INTEGER" property="expiryDate" />
    <result column="sku_id" jdbcType="BIGINT" property="skuId" />
    <result column="piece" jdbcType="INTEGER" property="piece" />
    <result column="bulk" jdbcType="DECIMAL" property="bulk" />
    <result column="create_type" jdbcType="INTEGER" property="createType" />
    <result column="goods_sku_pics" jdbcType="VARCHAR" property="goodsSkuPics" />
    <result column="sort_num" jdbcType="INTEGER" property="sortNum" />
    <result column="singly_price" jdbcType="DECIMAL" property="singlyPrice" />
    <result column="auto_add_stock" jdbcType="INTEGER" property="autoAddStock" />
    <result column="audit_status" jdbcType="TINYINT" property="auditStatus" />
    <result column="use_sku_detail" jdbcType="INTEGER" property="useSkuDetail" />
    <result column="show_type" jdbcType="INTEGER" property="showType" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, sku_code, sku_name, sku_pic, small_sku_pic, cost_price, market_price, sell_price, 
    other_marker_price, stock_num, waring_stock, real_weight, spu_id, delivery_template_id, 
    is_deleted, status, shop_id, sell_num, unit, mini_num, create_time, update_time, 
    send_type, remark, single_type, expiry_date, sku_id, piece, bulk, create_type, goods_sku_pics, 
    sort_num, singly_price, auto_add_stock, audit_status, use_sku_detail, show_type
  </sql>
  <select id="selectByExample" parameterType="com.xq.live.globalVoyage$.model.GoodsSkuExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from goods_sku
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.xq.live.globalVoyage$.model.GoodsSkuExample">
    delete from goods_sku
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xq.live.globalVoyage$.model.GoodsSku">
    insert into goods_sku (id, sku_code, sku_name, 
      sku_pic, small_sku_pic, cost_price, 
      market_price, sell_price, other_marker_price, 
      stock_num, waring_stock, real_weight, 
      spu_id, delivery_template_id, is_deleted, 
      status, shop_id, sell_num, 
      unit, mini_num, create_time, 
      update_time, send_type, remark, 
      single_type, expiry_date, sku_id, 
      piece, bulk, create_type, 
      goods_sku_pics, sort_num, singly_price, 
      auto_add_stock, audit_status, use_sku_detail, 
      show_type)
    values (#{id,jdbcType=BIGINT}, #{skuCode,jdbcType=VARCHAR}, #{skuName,jdbcType=VARCHAR}, 
      #{skuPic,jdbcType=VARCHAR}, #{smallSkuPic,jdbcType=VARCHAR}, #{costPrice,jdbcType=DECIMAL}, 
      #{marketPrice,jdbcType=DECIMAL}, #{sellPrice,jdbcType=DECIMAL}, #{otherMarkerPrice,jdbcType=DECIMAL}, 
      #{stockNum,jdbcType=INTEGER}, #{waringStock,jdbcType=INTEGER}, #{realWeight,jdbcType=DECIMAL}, 
      #{spuId,jdbcType=BIGINT}, #{deliveryTemplateId,jdbcType=BIGINT}, #{isDeleted,jdbcType=INTEGER}, 
      #{status,jdbcType=INTEGER}, #{shopId,jdbcType=BIGINT}, #{sellNum,jdbcType=INTEGER}, 
      #{unit,jdbcType=VARCHAR}, #{miniNum,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{sendType,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}, 
      #{singleType,jdbcType=INTEGER}, #{expiryDate,jdbcType=INTEGER}, #{skuId,jdbcType=BIGINT}, 
      #{piece,jdbcType=INTEGER}, #{bulk,jdbcType=DECIMAL}, #{createType,jdbcType=INTEGER}, 
      #{goodsSkuPics,jdbcType=VARCHAR}, #{sortNum,jdbcType=INTEGER}, #{singlyPrice,jdbcType=DECIMAL}, 
      #{autoAddStock,jdbcType=INTEGER}, #{auditStatus,jdbcType=TINYINT}, #{useSkuDetail,jdbcType=INTEGER}, 
      #{showType,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.xq.live.globalVoyage$.model.GoodsSku">
    insert into goods_sku
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="skuCode != null">
        sku_code,
      </if>
      <if test="skuName != null">
        sku_name,
      </if>
      <if test="skuPic != null">
        sku_pic,
      </if>
      <if test="smallSkuPic != null">
        small_sku_pic,
      </if>
      <if test="costPrice != null">
        cost_price,
      </if>
      <if test="marketPrice != null">
        market_price,
      </if>
      <if test="sellPrice != null">
        sell_price,
      </if>
      <if test="otherMarkerPrice != null">
        other_marker_price,
      </if>
      <if test="stockNum != null">
        stock_num,
      </if>
      <if test="waringStock != null">
        waring_stock,
      </if>
      <if test="realWeight != null">
        real_weight,
      </if>
      <if test="spuId != null">
        spu_id,
      </if>
      <if test="deliveryTemplateId != null">
        delivery_template_id,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="shopId != null">
        shop_id,
      </if>
      <if test="sellNum != null">
        sell_num,
      </if>
      <if test="unit != null">
        unit,
      </if>
      <if test="miniNum != null">
        mini_num,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="sendType != null">
        send_type,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="singleType != null">
        single_type,
      </if>
      <if test="expiryDate != null">
        expiry_date,
      </if>
      <if test="skuId != null">
        sku_id,
      </if>
      <if test="piece != null">
        piece,
      </if>
      <if test="bulk != null">
        bulk,
      </if>
      <if test="createType != null">
        create_type,
      </if>
      <if test="goodsSkuPics != null">
        goods_sku_pics,
      </if>
      <if test="sortNum != null">
        sort_num,
      </if>
      <if test="singlyPrice != null">
        singly_price,
      </if>
      <if test="autoAddStock != null">
        auto_add_stock,
      </if>
      <if test="auditStatus != null">
        audit_status,
      </if>
      <if test="useSkuDetail != null">
        use_sku_detail,
      </if>
      <if test="showType != null">
        show_type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="skuCode != null">
        #{skuCode,jdbcType=VARCHAR},
      </if>
      <if test="skuName != null">
        #{skuName,jdbcType=VARCHAR},
      </if>
      <if test="skuPic != null">
        #{skuPic,jdbcType=VARCHAR},
      </if>
      <if test="smallSkuPic != null">
        #{smallSkuPic,jdbcType=VARCHAR},
      </if>
      <if test="costPrice != null">
        #{costPrice,jdbcType=DECIMAL},
      </if>
      <if test="marketPrice != null">
        #{marketPrice,jdbcType=DECIMAL},
      </if>
      <if test="sellPrice != null">
        #{sellPrice,jdbcType=DECIMAL},
      </if>
      <if test="otherMarkerPrice != null">
        #{otherMarkerPrice,jdbcType=DECIMAL},
      </if>
      <if test="stockNum != null">
        #{stockNum,jdbcType=INTEGER},
      </if>
      <if test="waringStock != null">
        #{waringStock,jdbcType=INTEGER},
      </if>
      <if test="realWeight != null">
        #{realWeight,jdbcType=DECIMAL},
      </if>
      <if test="spuId != null">
        #{spuId,jdbcType=BIGINT},
      </if>
      <if test="deliveryTemplateId != null">
        #{deliveryTemplateId,jdbcType=BIGINT},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="shopId != null">
        #{shopId,jdbcType=BIGINT},
      </if>
      <if test="sellNum != null">
        #{sellNum,jdbcType=INTEGER},
      </if>
      <if test="unit != null">
        #{unit,jdbcType=VARCHAR},
      </if>
      <if test="miniNum != null">
        #{miniNum,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sendType != null">
        #{sendType,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="singleType != null">
        #{singleType,jdbcType=INTEGER},
      </if>
      <if test="expiryDate != null">
        #{expiryDate,jdbcType=INTEGER},
      </if>
      <if test="skuId != null">
        #{skuId,jdbcType=BIGINT},
      </if>
      <if test="piece != null">
        #{piece,jdbcType=INTEGER},
      </if>
      <if test="bulk != null">
        #{bulk,jdbcType=DECIMAL},
      </if>
      <if test="createType != null">
        #{createType,jdbcType=INTEGER},
      </if>
      <if test="goodsSkuPics != null">
        #{goodsSkuPics,jdbcType=VARCHAR},
      </if>
      <if test="sortNum != null">
        #{sortNum,jdbcType=INTEGER},
      </if>
      <if test="singlyPrice != null">
        #{singlyPrice,jdbcType=DECIMAL},
      </if>
      <if test="autoAddStock != null">
        #{autoAddStock,jdbcType=INTEGER},
      </if>
      <if test="auditStatus != null">
        #{auditStatus,jdbcType=TINYINT},
      </if>
      <if test="useSkuDetail != null">
        #{useSkuDetail,jdbcType=INTEGER},
      </if>
      <if test="showType != null">
        #{showType,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xq.live.globalVoyage$.model.GoodsSkuExample" resultType="java.lang.Long">
    select count(*) from goods_sku
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update goods_sku
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.skuCode != null">
        sku_code = #{record.skuCode,jdbcType=VARCHAR},
      </if>
      <if test="record.skuName != null">
        sku_name = #{record.skuName,jdbcType=VARCHAR},
      </if>
      <if test="record.skuPic != null">
        sku_pic = #{record.skuPic,jdbcType=VARCHAR},
      </if>
      <if test="record.smallSkuPic != null">
        small_sku_pic = #{record.smallSkuPic,jdbcType=VARCHAR},
      </if>
      <if test="record.costPrice != null">
        cost_price = #{record.costPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.marketPrice != null">
        market_price = #{record.marketPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.sellPrice != null">
        sell_price = #{record.sellPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.otherMarkerPrice != null">
        other_marker_price = #{record.otherMarkerPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.stockNum != null">
        stock_num = #{record.stockNum,jdbcType=INTEGER},
      </if>
      <if test="record.waringStock != null">
        waring_stock = #{record.waringStock,jdbcType=INTEGER},
      </if>
      <if test="record.realWeight != null">
        real_weight = #{record.realWeight,jdbcType=DECIMAL},
      </if>
      <if test="record.spuId != null">
        spu_id = #{record.spuId,jdbcType=BIGINT},
      </if>
      <if test="record.deliveryTemplateId != null">
        delivery_template_id = #{record.deliveryTemplateId,jdbcType=BIGINT},
      </if>
      <if test="record.isDeleted != null">
        is_deleted = #{record.isDeleted,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.shopId != null">
        shop_id = #{record.shopId,jdbcType=BIGINT},
      </if>
      <if test="record.sellNum != null">
        sell_num = #{record.sellNum,jdbcType=INTEGER},
      </if>
      <if test="record.unit != null">
        unit = #{record.unit,jdbcType=VARCHAR},
      </if>
      <if test="record.miniNum != null">
        mini_num = #{record.miniNum,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.sendType != null">
        send_type = #{record.sendType,jdbcType=INTEGER},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.singleType != null">
        single_type = #{record.singleType,jdbcType=INTEGER},
      </if>
      <if test="record.expiryDate != null">
        expiry_date = #{record.expiryDate,jdbcType=INTEGER},
      </if>
      <if test="record.skuId != null">
        sku_id = #{record.skuId,jdbcType=BIGINT},
      </if>
      <if test="record.piece != null">
        piece = #{record.piece,jdbcType=INTEGER},
      </if>
      <if test="record.bulk != null">
        bulk = #{record.bulk,jdbcType=DECIMAL},
      </if>
      <if test="record.createType != null">
        create_type = #{record.createType,jdbcType=INTEGER},
      </if>
      <if test="record.goodsSkuPics != null">
        goods_sku_pics = #{record.goodsSkuPics,jdbcType=VARCHAR},
      </if>
      <if test="record.sortNum != null">
        sort_num = #{record.sortNum,jdbcType=INTEGER},
      </if>
      <if test="record.singlyPrice != null">
        singly_price = #{record.singlyPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.autoAddStock != null">
        auto_add_stock = #{record.autoAddStock,jdbcType=INTEGER},
      </if>
      <if test="record.auditStatus != null">
        audit_status = #{record.auditStatus,jdbcType=TINYINT},
      </if>
      <if test="record.useSkuDetail != null">
        use_sku_detail = #{record.useSkuDetail,jdbcType=INTEGER},
      </if>
      <if test="record.showType != null">
        show_type = #{record.showType,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update goods_sku
    set id = #{record.id,jdbcType=BIGINT},
      sku_code = #{record.skuCode,jdbcType=VARCHAR},
      sku_name = #{record.skuName,jdbcType=VARCHAR},
      sku_pic = #{record.skuPic,jdbcType=VARCHAR},
      small_sku_pic = #{record.smallSkuPic,jdbcType=VARCHAR},
      cost_price = #{record.costPrice,jdbcType=DECIMAL},
      market_price = #{record.marketPrice,jdbcType=DECIMAL},
      sell_price = #{record.sellPrice,jdbcType=DECIMAL},
      other_marker_price = #{record.otherMarkerPrice,jdbcType=DECIMAL},
      stock_num = #{record.stockNum,jdbcType=INTEGER},
      waring_stock = #{record.waringStock,jdbcType=INTEGER},
      real_weight = #{record.realWeight,jdbcType=DECIMAL},
      spu_id = #{record.spuId,jdbcType=BIGINT},
      delivery_template_id = #{record.deliveryTemplateId,jdbcType=BIGINT},
      is_deleted = #{record.isDeleted,jdbcType=INTEGER},
      status = #{record.status,jdbcType=INTEGER},
      shop_id = #{record.shopId,jdbcType=BIGINT},
      sell_num = #{record.sellNum,jdbcType=INTEGER},
      unit = #{record.unit,jdbcType=VARCHAR},
      mini_num = #{record.miniNum,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      send_type = #{record.sendType,jdbcType=INTEGER},
      remark = #{record.remark,jdbcType=VARCHAR},
      single_type = #{record.singleType,jdbcType=INTEGER},
      expiry_date = #{record.expiryDate,jdbcType=INTEGER},
      sku_id = #{record.skuId,jdbcType=BIGINT},
      piece = #{record.piece,jdbcType=INTEGER},
      bulk = #{record.bulk,jdbcType=DECIMAL},
      create_type = #{record.createType,jdbcType=INTEGER},
      goods_sku_pics = #{record.goodsSkuPics,jdbcType=VARCHAR},
      sort_num = #{record.sortNum,jdbcType=INTEGER},
      singly_price = #{record.singlyPrice,jdbcType=DECIMAL},
      auto_add_stock = #{record.autoAddStock,jdbcType=INTEGER},
      audit_status = #{record.auditStatus,jdbcType=TINYINT},
      use_sku_detail = #{record.useSkuDetail,jdbcType=INTEGER},
      show_type = #{record.showType,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <resultMap id="BaseResultMap" type="com.xq.live.globalVoyage$.model.GoodsSku">
    <result column="sku_id" jdbcType="BIGINT" property="skuId" />
    <result column="spu_id" jdbcType="BIGINT" property="spuId" />
    <result column="sku_name" jdbcType="VARCHAR" property="skuName" />
    <result column="package_type" jdbcType="VARCHAR" property="packageType" />
    <result column="stay_type" jdbcType="VARCHAR" property="stayType" />
    <result column="departure" jdbcType="VARCHAR" property="departure" />
    <result column="guide_service" jdbcType="VARCHAR" property="guideService" />
    <result column="entertainment" jdbcType="VARCHAR" property="entertainment" />
    <result column="traffic_type" jdbcType="VARCHAR" property="trafficType" />
    <result column="people_num" jdbcType="INTEGER" property="peopleNum" />
    <result column="meal" jdbcType="VARCHAR" property="meal" />
    <result column="place" jdbcType="VARCHAR" property="place" />
    <result column="times" jdbcType="TIMESTAMP" property="times" />
    <result column="clear_day" jdbcType="INTEGER" property="clearDay" />
    <result column="clear_time" jdbcType="TIME" property="clearTime" />
    <result column="include_project" jdbcType="VARCHAR" property="includeProject" />
    <result column="ticket_type" jdbcType="VARCHAR" property="ticketType" />
    <result column="is_coupon" jdbcType="TINYINT" property="isCoupon" />
    <result column="available_days" jdbcType="INTEGER" property="availableDays" />
    <result column="is_season" jdbcType="TINYINT" property="isSeason" />
    <result column="suitable_time" jdbcType="TIME" property="suitableTime" />
    <result column="price" jdbcType="DECIMAL" property="price" />
    <result column="upper_purchase" jdbcType="INTEGER" property="upperPurchase" />
    <result column="lower_purchase" jdbcType="INTEGER" property="lowerPurchase" />
    <result column="is_deleted" jdbcType="TINYINT" property="isDeleted" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="update_by" jdbcType="VARCHAR" property="updateBy" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    sku_id, spu_id, sku_name, package_type, stay_type, departure, guide_service, entertainment, 
    traffic_type, people_num, meal, place, times, clear_day, clear_time, include_project, 
    ticket_type, is_coupon, available_days, is_season, suitable_time, price, upper_purchase, 
    lower_purchase, is_deleted, create_time, update_time, create_by, update_by
  </sql>
  <select id="selectByExample" parameterType="com.xq.live.globalVoyage$.model.GoodsSkuExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from goods_sku
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.xq.live.globalVoyage$.model.GoodsSkuExample">
    delete from goods_sku
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xq.live.globalVoyage$.model.GoodsSku">
    insert into goods_sku (sku_id, spu_id, sku_name, 
      package_type, stay_type, departure, 
      guide_service, entertainment, traffic_type, 
      people_num, meal, place, 
      times, clear_day, clear_time, 
      include_project, ticket_type, is_coupon, 
      available_days, is_season, suitable_time, 
      price, upper_purchase, lower_purchase, 
      is_deleted, create_time, update_time, 
      create_by, update_by)
    values (#{skuId,jdbcType=BIGINT}, #{spuId,jdbcType=BIGINT}, #{skuName,jdbcType=VARCHAR}, 
      #{packageType,jdbcType=VARCHAR}, #{stayType,jdbcType=VARCHAR}, #{departure,jdbcType=VARCHAR}, 
      #{guideService,jdbcType=VARCHAR}, #{entertainment,jdbcType=VARCHAR}, #{trafficType,jdbcType=VARCHAR}, 
      #{peopleNum,jdbcType=INTEGER}, #{meal,jdbcType=VARCHAR}, #{place,jdbcType=VARCHAR}, 
      #{times,jdbcType=TIMESTAMP}, #{clearDay,jdbcType=INTEGER}, #{clearTime,jdbcType=TIME}, 
      #{includeProject,jdbcType=VARCHAR}, #{ticketType,jdbcType=VARCHAR}, #{isCoupon,jdbcType=TINYINT}, 
      #{availableDays,jdbcType=INTEGER}, #{isSeason,jdbcType=TINYINT}, #{suitableTime,jdbcType=TIME}, 
      #{price,jdbcType=DECIMAL}, #{upperPurchase,jdbcType=INTEGER}, #{lowerPurchase,jdbcType=INTEGER}, 
      #{isDeleted,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{createBy,jdbcType=VARCHAR}, #{updateBy,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.xq.live.globalVoyage$.model.GoodsSku">
    insert into goods_sku
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="skuId != null">
        sku_id,
      </if>
      <if test="spuId != null">
        spu_id,
      </if>
      <if test="skuName != null">
        sku_name,
      </if>
      <if test="packageType != null">
        package_type,
      </if>
      <if test="stayType != null">
        stay_type,
      </if>
      <if test="departure != null">
        departure,
      </if>
      <if test="guideService != null">
        guide_service,
      </if>
      <if test="entertainment != null">
        entertainment,
      </if>
      <if test="trafficType != null">
        traffic_type,
      </if>
      <if test="peopleNum != null">
        people_num,
      </if>
      <if test="meal != null">
        meal,
      </if>
      <if test="place != null">
        place,
      </if>
      <if test="times != null">
        times,
      </if>
      <if test="clearDay != null">
        clear_day,
      </if>
      <if test="clearTime != null">
        clear_time,
      </if>
      <if test="includeProject != null">
        include_project,
      </if>
      <if test="ticketType != null">
        ticket_type,
      </if>
      <if test="isCoupon != null">
        is_coupon,
      </if>
      <if test="availableDays != null">
        available_days,
      </if>
      <if test="isSeason != null">
        is_season,
      </if>
      <if test="suitableTime != null">
        suitable_time,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="upperPurchase != null">
        upper_purchase,
      </if>
      <if test="lowerPurchase != null">
        lower_purchase,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="updateBy != null">
        update_by,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="skuId != null">
        #{skuId,jdbcType=BIGINT},
      </if>
      <if test="spuId != null">
        #{spuId,jdbcType=BIGINT},
      </if>
      <if test="skuName != null">
        #{skuName,jdbcType=VARCHAR},
      </if>
      <if test="packageType != null">
        #{packageType,jdbcType=VARCHAR},
      </if>
      <if test="stayType != null">
        #{stayType,jdbcType=VARCHAR},
      </if>
      <if test="departure != null">
        #{departure,jdbcType=VARCHAR},
      </if>
      <if test="guideService != null">
        #{guideService,jdbcType=VARCHAR},
      </if>
      <if test="entertainment != null">
        #{entertainment,jdbcType=VARCHAR},
      </if>
      <if test="trafficType != null">
        #{trafficType,jdbcType=VARCHAR},
      </if>
      <if test="peopleNum != null">
        #{peopleNum,jdbcType=INTEGER},
      </if>
      <if test="meal != null">
        #{meal,jdbcType=VARCHAR},
      </if>
      <if test="place != null">
        #{place,jdbcType=VARCHAR},
      </if>
      <if test="times != null">
        #{times,jdbcType=TIMESTAMP},
      </if>
      <if test="clearDay != null">
        #{clearDay,jdbcType=INTEGER},
      </if>
      <if test="clearTime != null">
        #{clearTime,jdbcType=TIME},
      </if>
      <if test="includeProject != null">
        #{includeProject,jdbcType=VARCHAR},
      </if>
      <if test="ticketType != null">
        #{ticketType,jdbcType=VARCHAR},
      </if>
      <if test="isCoupon != null">
        #{isCoupon,jdbcType=TINYINT},
      </if>
      <if test="availableDays != null">
        #{availableDays,jdbcType=INTEGER},
      </if>
      <if test="isSeason != null">
        #{isSeason,jdbcType=TINYINT},
      </if>
      <if test="suitableTime != null">
        #{suitableTime,jdbcType=TIME},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="upperPurchase != null">
        #{upperPurchase,jdbcType=INTEGER},
      </if>
      <if test="lowerPurchase != null">
        #{lowerPurchase,jdbcType=INTEGER},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xq.live.globalVoyage$.model.GoodsSkuExample" resultType="java.lang.Long">
    select count(*) from goods_sku
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update goods_sku
    <set>
      <if test="record.skuId != null">
        sku_id = #{record.skuId,jdbcType=BIGINT},
      </if>
      <if test="record.spuId != null">
        spu_id = #{record.spuId,jdbcType=BIGINT},
      </if>
      <if test="record.skuName != null">
        sku_name = #{record.skuName,jdbcType=VARCHAR},
      </if>
      <if test="record.packageType != null">
        package_type = #{record.packageType,jdbcType=VARCHAR},
      </if>
      <if test="record.stayType != null">
        stay_type = #{record.stayType,jdbcType=VARCHAR},
      </if>
      <if test="record.departure != null">
        departure = #{record.departure,jdbcType=VARCHAR},
      </if>
      <if test="record.guideService != null">
        guide_service = #{record.guideService,jdbcType=VARCHAR},
      </if>
      <if test="record.entertainment != null">
        entertainment = #{record.entertainment,jdbcType=VARCHAR},
      </if>
      <if test="record.trafficType != null">
        traffic_type = #{record.trafficType,jdbcType=VARCHAR},
      </if>
      <if test="record.peopleNum != null">
        people_num = #{record.peopleNum,jdbcType=INTEGER},
      </if>
      <if test="record.meal != null">
        meal = #{record.meal,jdbcType=VARCHAR},
      </if>
      <if test="record.place != null">
        place = #{record.place,jdbcType=VARCHAR},
      </if>
      <if test="record.times != null">
        times = #{record.times,jdbcType=TIMESTAMP},
      </if>
      <if test="record.clearDay != null">
        clear_day = #{record.clearDay,jdbcType=INTEGER},
      </if>
      <if test="record.clearTime != null">
        clear_time = #{record.clearTime,jdbcType=TIME},
      </if>
      <if test="record.includeProject != null">
        include_project = #{record.includeProject,jdbcType=VARCHAR},
      </if>
      <if test="record.ticketType != null">
        ticket_type = #{record.ticketType,jdbcType=VARCHAR},
      </if>
      <if test="record.isCoupon != null">
        is_coupon = #{record.isCoupon,jdbcType=TINYINT},
      </if>
      <if test="record.availableDays != null">
        available_days = #{record.availableDays,jdbcType=INTEGER},
      </if>
      <if test="record.isSeason != null">
        is_season = #{record.isSeason,jdbcType=TINYINT},
      </if>
      <if test="record.suitableTime != null">
        suitable_time = #{record.suitableTime,jdbcType=TIME},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=DECIMAL},
      </if>
      <if test="record.upperPurchase != null">
        upper_purchase = #{record.upperPurchase,jdbcType=INTEGER},
      </if>
      <if test="record.lowerPurchase != null">
        lower_purchase = #{record.lowerPurchase,jdbcType=INTEGER},
      </if>
      <if test="record.isDeleted != null">
        is_deleted = #{record.isDeleted,jdbcType=TINYINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createBy != null">
        create_by = #{record.createBy,jdbcType=VARCHAR},
      </if>
      <if test="record.updateBy != null">
        update_by = #{record.updateBy,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update goods_sku
    set sku_id = #{record.skuId,jdbcType=BIGINT},
      spu_id = #{record.spuId,jdbcType=BIGINT},
      sku_name = #{record.skuName,jdbcType=VARCHAR},
      package_type = #{record.packageType,jdbcType=VARCHAR},
      stay_type = #{record.stayType,jdbcType=VARCHAR},
      departure = #{record.departure,jdbcType=VARCHAR},
      guide_service = #{record.guideService,jdbcType=VARCHAR},
      entertainment = #{record.entertainment,jdbcType=VARCHAR},
      traffic_type = #{record.trafficType,jdbcType=VARCHAR},
      people_num = #{record.peopleNum,jdbcType=INTEGER},
      meal = #{record.meal,jdbcType=VARCHAR},
      place = #{record.place,jdbcType=VARCHAR},
      times = #{record.times,jdbcType=TIMESTAMP},
      clear_day = #{record.clearDay,jdbcType=INTEGER},
      clear_time = #{record.clearTime,jdbcType=TIME},
      include_project = #{record.includeProject,jdbcType=VARCHAR},
      ticket_type = #{record.ticketType,jdbcType=VARCHAR},
      is_coupon = #{record.isCoupon,jdbcType=TINYINT},
      available_days = #{record.availableDays,jdbcType=INTEGER},
      is_season = #{record.isSeason,jdbcType=TINYINT},
      suitable_time = #{record.suitableTime,jdbcType=TIME},
      price = #{record.price,jdbcType=DECIMAL},
      upper_purchase = #{record.upperPurchase,jdbcType=INTEGER},
      lower_purchase = #{record.lowerPurchase,jdbcType=INTEGER},
      is_deleted = #{record.isDeleted,jdbcType=TINYINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      create_by = #{record.createBy,jdbcType=VARCHAR},
      update_by = #{record.updateBy,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <resultMap id="BaseResultMap" type="com.xq.live.globalVoyage$.model.GoodsSku">
    <result column="goods_id" jdbcType="BIGINT" property="goodsId" />
    <result column="goods_name" jdbcType="VARCHAR" property="goodsName" />
    <result column="goods_spu_id" jdbcType="BIGINT" property="goodsSpuId" />
    <result column="goods_sku" jdbcType="VARCHAR" property="goodsSku" />
    <result column="goods_price" jdbcType="DECIMAL" property="goodsPrice" />
    <result column="goods_weight" jdbcType="DOUBLE" property="goodsWeight" />
    <result column="goods_volume" jdbcType="DOUBLE" property="goodsVolume" />
    <result column="gs_code" jdbcType="VARCHAR" property="gsCode" />
    <result column="goods_class_id" jdbcType="BIGINT" property="goodsClassId" />
    <result column="goods_brand_id" jdbcType="BIGINT" property="goodsBrandId" />
    <result column="gs_unit" jdbcType="VARCHAR" property="gsUnit" />
    <result column="goods_status" jdbcType="VARCHAR" property="goodsStatus" />
    <result column="goods_seq" jdbcType="INTEGER" property="goodsSeq" />
    <result column="is_deleted" jdbcType="TINYINT" property="isDeleted" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="update_by" jdbcType="VARCHAR" property="updateBy" />
    <result column="preferential_price" jdbcType="DECIMAL" property="preferentialPrice" />
    <result column="automatic_replenishment" jdbcType="INTEGER" property="automaticReplenishment" />
    <result column="sku_type" jdbcType="VARCHAR" property="skuType" />
    <result column="shop_id" jdbcType="BIGINT" property="shopId" />
    <result column="sales" jdbcType="INTEGER" property="sales" />
    <result column="details" jdbcType="VARCHAR" property="details" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.xq.live.globalVoyage$.model.GoodsSkuWithBLOBs">
    <result column="goods_main_pic" jdbcType="LONGVARCHAR" property="goodsMainPic" />
    <result column="goods_small_pics" jdbcType="LONGVARCHAR" property="goodsSmallPics" />
    <result column="goods_specs" jdbcType="LONGVARCHAR" property="goodsSpecs" />
    <result column="goods_attrs" jdbcType="LONGVARCHAR" property="goodsAttrs" />
    <result column="remark" jdbcType="LONGVARCHAR" property="remark" />
    <result column="details_img" jdbcType="LONGVARCHAR" property="detailsImg" />
    <result column="rejected_img" jdbcType="LONGVARCHAR" property="rejectedImg" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    goods_id, goods_name, goods_spu_id, goods_sku, goods_price, goods_weight, goods_volume, 
    gs_code, goods_class_id, goods_brand_id, gs_unit, goods_status, goods_seq, is_deleted, 
    create_time, update_time, create_by, update_by, preferential_price, automatic_replenishment, 
    sku_type, shop_id, sales, details
  </sql>
  <sql id="Blob_Column_List">
    goods_main_pic, goods_small_pics, goods_specs, goods_attrs, remark, details_img, 
    rejected_img
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.xq.live.globalVoyage$.model.GoodsSkuExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from goods_sku
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.xq.live.globalVoyage$.model.GoodsSkuExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from goods_sku
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.xq.live.globalVoyage$.model.GoodsSkuExample">
    delete from goods_sku
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xq.live.globalVoyage$.model.GoodsSkuWithBLOBs">
    insert into goods_sku (goods_id, goods_name, goods_spu_id, 
      goods_sku, goods_price, goods_weight, 
      goods_volume, gs_code, goods_class_id, 
      goods_brand_id, gs_unit, goods_status, 
      goods_seq, is_deleted, create_time, 
      update_time, create_by, update_by, 
      preferential_price, automatic_replenishment, 
      sku_type, shop_id, sales, 
      details, goods_main_pic, goods_small_pics, 
      goods_specs, goods_attrs, remark, 
      details_img, rejected_img)
    values (#{goodsId,jdbcType=BIGINT}, #{goodsName,jdbcType=VARCHAR}, #{goodsSpuId,jdbcType=BIGINT}, 
      #{goodsSku,jdbcType=VARCHAR}, #{goodsPrice,jdbcType=DECIMAL}, #{goodsWeight,jdbcType=DOUBLE}, 
      #{goodsVolume,jdbcType=DOUBLE}, #{gsCode,jdbcType=VARCHAR}, #{goodsClassId,jdbcType=BIGINT}, 
      #{goodsBrandId,jdbcType=BIGINT}, #{gsUnit,jdbcType=VARCHAR}, #{goodsStatus,jdbcType=VARCHAR}, 
      #{goodsSeq,jdbcType=INTEGER}, #{isDeleted,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{createBy,jdbcType=VARCHAR}, #{updateBy,jdbcType=VARCHAR}, 
      #{preferentialPrice,jdbcType=DECIMAL}, #{automaticReplenishment,jdbcType=INTEGER}, 
      #{skuType,jdbcType=VARCHAR}, #{shopId,jdbcType=BIGINT}, #{sales,jdbcType=INTEGER}, 
      #{details,jdbcType=VARCHAR}, #{goodsMainPic,jdbcType=LONGVARCHAR}, #{goodsSmallPics,jdbcType=LONGVARCHAR}, 
      #{goodsSpecs,jdbcType=LONGVARCHAR}, #{goodsAttrs,jdbcType=LONGVARCHAR}, #{remark,jdbcType=LONGVARCHAR}, 
      #{detailsImg,jdbcType=LONGVARCHAR}, #{rejectedImg,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.xq.live.globalVoyage$.model.GoodsSkuWithBLOBs">
    insert into goods_sku
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="goodsId != null">
        goods_id,
      </if>
      <if test="goodsName != null">
        goods_name,
      </if>
      <if test="goodsSpuId != null">
        goods_spu_id,
      </if>
      <if test="goodsSku != null">
        goods_sku,
      </if>
      <if test="goodsPrice != null">
        goods_price,
      </if>
      <if test="goodsWeight != null">
        goods_weight,
      </if>
      <if test="goodsVolume != null">
        goods_volume,
      </if>
      <if test="gsCode != null">
        gs_code,
      </if>
      <if test="goodsClassId != null">
        goods_class_id,
      </if>
      <if test="goodsBrandId != null">
        goods_brand_id,
      </if>
      <if test="gsUnit != null">
        gs_unit,
      </if>
      <if test="goodsStatus != null">
        goods_status,
      </if>
      <if test="goodsSeq != null">
        goods_seq,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="updateBy != null">
        update_by,
      </if>
      <if test="preferentialPrice != null">
        preferential_price,
      </if>
      <if test="automaticReplenishment != null">
        automatic_replenishment,
      </if>
      <if test="skuType != null">
        sku_type,
      </if>
      <if test="shopId != null">
        shop_id,
      </if>
      <if test="sales != null">
        sales,
      </if>
      <if test="details != null">
        details,
      </if>
      <if test="goodsMainPic != null">
        goods_main_pic,
      </if>
      <if test="goodsSmallPics != null">
        goods_small_pics,
      </if>
      <if test="goodsSpecs != null">
        goods_specs,
      </if>
      <if test="goodsAttrs != null">
        goods_attrs,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="detailsImg != null">
        details_img,
      </if>
      <if test="rejectedImg != null">
        rejected_img,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="goodsId != null">
        #{goodsId,jdbcType=BIGINT},
      </if>
      <if test="goodsName != null">
        #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="goodsSpuId != null">
        #{goodsSpuId,jdbcType=BIGINT},
      </if>
      <if test="goodsSku != null">
        #{goodsSku,jdbcType=VARCHAR},
      </if>
      <if test="goodsPrice != null">
        #{goodsPrice,jdbcType=DECIMAL},
      </if>
      <if test="goodsWeight != null">
        #{goodsWeight,jdbcType=DOUBLE},
      </if>
      <if test="goodsVolume != null">
        #{goodsVolume,jdbcType=DOUBLE},
      </if>
      <if test="gsCode != null">
        #{gsCode,jdbcType=VARCHAR},
      </if>
      <if test="goodsClassId != null">
        #{goodsClassId,jdbcType=BIGINT},
      </if>
      <if test="goodsBrandId != null">
        #{goodsBrandId,jdbcType=BIGINT},
      </if>
      <if test="gsUnit != null">
        #{gsUnit,jdbcType=VARCHAR},
      </if>
      <if test="goodsStatus != null">
        #{goodsStatus,jdbcType=VARCHAR},
      </if>
      <if test="goodsSeq != null">
        #{goodsSeq,jdbcType=INTEGER},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="preferentialPrice != null">
        #{preferentialPrice,jdbcType=DECIMAL},
      </if>
      <if test="automaticReplenishment != null">
        #{automaticReplenishment,jdbcType=INTEGER},
      </if>
      <if test="skuType != null">
        #{skuType,jdbcType=VARCHAR},
      </if>
      <if test="shopId != null">
        #{shopId,jdbcType=BIGINT},
      </if>
      <if test="sales != null">
        #{sales,jdbcType=INTEGER},
      </if>
      <if test="details != null">
        #{details,jdbcType=VARCHAR},
      </if>
      <if test="goodsMainPic != null">
        #{goodsMainPic,jdbcType=LONGVARCHAR},
      </if>
      <if test="goodsSmallPics != null">
        #{goodsSmallPics,jdbcType=LONGVARCHAR},
      </if>
      <if test="goodsSpecs != null">
        #{goodsSpecs,jdbcType=LONGVARCHAR},
      </if>
      <if test="goodsAttrs != null">
        #{goodsAttrs,jdbcType=LONGVARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=LONGVARCHAR},
      </if>
      <if test="detailsImg != null">
        #{detailsImg,jdbcType=LONGVARCHAR},
      </if>
      <if test="rejectedImg != null">
        #{rejectedImg,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xq.live.globalVoyage$.model.GoodsSkuExample" resultType="java.lang.Long">
    select count(*) from goods_sku
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update goods_sku
    <set>
      <if test="record.goodsId != null">
        goods_id = #{record.goodsId,jdbcType=BIGINT},
      </if>
      <if test="record.goodsName != null">
        goods_name = #{record.goodsName,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsSpuId != null">
        goods_spu_id = #{record.goodsSpuId,jdbcType=BIGINT},
      </if>
      <if test="record.goodsSku != null">
        goods_sku = #{record.goodsSku,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsPrice != null">
        goods_price = #{record.goodsPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.goodsWeight != null">
        goods_weight = #{record.goodsWeight,jdbcType=DOUBLE},
      </if>
      <if test="record.goodsVolume != null">
        goods_volume = #{record.goodsVolume,jdbcType=DOUBLE},
      </if>
      <if test="record.gsCode != null">
        gs_code = #{record.gsCode,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsClassId != null">
        goods_class_id = #{record.goodsClassId,jdbcType=BIGINT},
      </if>
      <if test="record.goodsBrandId != null">
        goods_brand_id = #{record.goodsBrandId,jdbcType=BIGINT},
      </if>
      <if test="record.gsUnit != null">
        gs_unit = #{record.gsUnit,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsStatus != null">
        goods_status = #{record.goodsStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsSeq != null">
        goods_seq = #{record.goodsSeq,jdbcType=INTEGER},
      </if>
      <if test="record.isDeleted != null">
        is_deleted = #{record.isDeleted,jdbcType=TINYINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createBy != null">
        create_by = #{record.createBy,jdbcType=VARCHAR},
      </if>
      <if test="record.updateBy != null">
        update_by = #{record.updateBy,jdbcType=VARCHAR},
      </if>
      <if test="record.preferentialPrice != null">
        preferential_price = #{record.preferentialPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.automaticReplenishment != null">
        automatic_replenishment = #{record.automaticReplenishment,jdbcType=INTEGER},
      </if>
      <if test="record.skuType != null">
        sku_type = #{record.skuType,jdbcType=VARCHAR},
      </if>
      <if test="record.shopId != null">
        shop_id = #{record.shopId,jdbcType=BIGINT},
      </if>
      <if test="record.sales != null">
        sales = #{record.sales,jdbcType=INTEGER},
      </if>
      <if test="record.details != null">
        details = #{record.details,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsMainPic != null">
        goods_main_pic = #{record.goodsMainPic,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.goodsSmallPics != null">
        goods_small_pics = #{record.goodsSmallPics,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.goodsSpecs != null">
        goods_specs = #{record.goodsSpecs,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.goodsAttrs != null">
        goods_attrs = #{record.goodsAttrs,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.detailsImg != null">
        details_img = #{record.detailsImg,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.rejectedImg != null">
        rejected_img = #{record.rejectedImg,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update goods_sku
    set goods_id = #{record.goodsId,jdbcType=BIGINT},
      goods_name = #{record.goodsName,jdbcType=VARCHAR},
      goods_spu_id = #{record.goodsSpuId,jdbcType=BIGINT},
      goods_sku = #{record.goodsSku,jdbcType=VARCHAR},
      goods_price = #{record.goodsPrice,jdbcType=DECIMAL},
      goods_weight = #{record.goodsWeight,jdbcType=DOUBLE},
      goods_volume = #{record.goodsVolume,jdbcType=DOUBLE},
      gs_code = #{record.gsCode,jdbcType=VARCHAR},
      goods_class_id = #{record.goodsClassId,jdbcType=BIGINT},
      goods_brand_id = #{record.goodsBrandId,jdbcType=BIGINT},
      gs_unit = #{record.gsUnit,jdbcType=VARCHAR},
      goods_status = #{record.goodsStatus,jdbcType=VARCHAR},
      goods_seq = #{record.goodsSeq,jdbcType=INTEGER},
      is_deleted = #{record.isDeleted,jdbcType=TINYINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      create_by = #{record.createBy,jdbcType=VARCHAR},
      update_by = #{record.updateBy,jdbcType=VARCHAR},
      preferential_price = #{record.preferentialPrice,jdbcType=DECIMAL},
      automatic_replenishment = #{record.automaticReplenishment,jdbcType=INTEGER},
      sku_type = #{record.skuType,jdbcType=VARCHAR},
      shop_id = #{record.shopId,jdbcType=BIGINT},
      sales = #{record.sales,jdbcType=INTEGER},
      details = #{record.details,jdbcType=VARCHAR},
      goods_main_pic = #{record.goodsMainPic,jdbcType=LONGVARCHAR},
      goods_small_pics = #{record.goodsSmallPics,jdbcType=LONGVARCHAR},
      goods_specs = #{record.goodsSpecs,jdbcType=LONGVARCHAR},
      goods_attrs = #{record.goodsAttrs,jdbcType=LONGVARCHAR},
      remark = #{record.remark,jdbcType=LONGVARCHAR},
      details_img = #{record.detailsImg,jdbcType=LONGVARCHAR},
      rejected_img = #{record.rejectedImg,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update goods_sku
    set goods_id = #{record.goodsId,jdbcType=BIGINT},
      goods_name = #{record.goodsName,jdbcType=VARCHAR},
      goods_spu_id = #{record.goodsSpuId,jdbcType=BIGINT},
      goods_sku = #{record.goodsSku,jdbcType=VARCHAR},
      goods_price = #{record.goodsPrice,jdbcType=DECIMAL},
      goods_weight = #{record.goodsWeight,jdbcType=DOUBLE},
      goods_volume = #{record.goodsVolume,jdbcType=DOUBLE},
      gs_code = #{record.gsCode,jdbcType=VARCHAR},
      goods_class_id = #{record.goodsClassId,jdbcType=BIGINT},
      goods_brand_id = #{record.goodsBrandId,jdbcType=BIGINT},
      gs_unit = #{record.gsUnit,jdbcType=VARCHAR},
      goods_status = #{record.goodsStatus,jdbcType=VARCHAR},
      goods_seq = #{record.goodsSeq,jdbcType=INTEGER},
      is_deleted = #{record.isDeleted,jdbcType=TINYINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      create_by = #{record.createBy,jdbcType=VARCHAR},
      update_by = #{record.updateBy,jdbcType=VARCHAR},
      preferential_price = #{record.preferentialPrice,jdbcType=DECIMAL},
      automatic_replenishment = #{record.automaticReplenishment,jdbcType=INTEGER},
      sku_type = #{record.skuType,jdbcType=VARCHAR},
      shop_id = #{record.shopId,jdbcType=BIGINT},
      sales = #{record.sales,jdbcType=INTEGER},
      details = #{record.details,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <resultMap id="BaseResultMap" type="com.xq.live.globalVoyage$.model.GoodsSku">
    <result column="goods_id" jdbcType="BIGINT" property="goodsId" />
    <result column="goods_name" jdbcType="VARCHAR" property="goodsName" />
    <result column="goods_spu_id" jdbcType="BIGINT" property="goodsSpuId" />
    <result column="goods_sku" jdbcType="VARCHAR" property="goodsSku" />
    <result column="goods_price" jdbcType="DECIMAL" property="goodsPrice" />
    <result column="goods_weight" jdbcType="DOUBLE" property="goodsWeight" />
    <result column="goods_volume" jdbcType="DOUBLE" property="goodsVolume" />
    <result column="gs_code" jdbcType="VARCHAR" property="gsCode" />
    <result column="goods_main_pic" jdbcType="VARCHAR" property="goodsMainPic" />
    <result column="goods_small_pics" jdbcType="VARCHAR" property="goodsSmallPics" />
    <result column="goods_class_id" jdbcType="BIGINT" property="goodsClassId" />
    <result column="goods_brand_id" jdbcType="BIGINT" property="goodsBrandId" />
    <result column="gs_unit" jdbcType="VARCHAR" property="gsUnit" />
    <result column="goods_status" jdbcType="VARCHAR" property="goodsStatus" />
    <result column="goods_seq" jdbcType="INTEGER" property="goodsSeq" />
    <result column="is_deleted" jdbcType="TINYINT" property="isDeleted" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="update_by" jdbcType="VARCHAR" property="updateBy" />
    <result column="preferential_price" jdbcType="DECIMAL" property="preferentialPrice" />
    <result column="automatic_replenishment" jdbcType="INTEGER" property="automaticReplenishment" />
    <result column="sku_type" jdbcType="VARCHAR" property="skuType" />
    <result column="shop_id" jdbcType="BIGINT" property="shopId" />
    <result column="sales" jdbcType="INTEGER" property="sales" />
    <result column="details" jdbcType="VARCHAR" property="details" />
    <result column="details_img" jdbcType="VARCHAR" property="detailsImg" />
    <result column="rejected_img" jdbcType="VARCHAR" property="rejectedImg" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.xq.live.globalVoyage$.model.GoodsSkuWithBLOBs">
    <result column="goods_specs" jdbcType="LONGVARCHAR" property="goodsSpecs" />
    <result column="goods_attrs" jdbcType="LONGVARCHAR" property="goodsAttrs" />
    <result column="remark" jdbcType="LONGVARCHAR" property="remark" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    goods_id, goods_name, goods_spu_id, goods_sku, goods_price, goods_weight, goods_volume, 
    gs_code, goods_main_pic, goods_small_pics, goods_class_id, goods_brand_id, gs_unit, 
    goods_status, goods_seq, is_deleted, create_time, update_time, create_by, update_by, 
    preferential_price, automatic_replenishment, sku_type, shop_id, sales, details, details_img, 
    rejected_img
  </sql>
  <sql id="Blob_Column_List">
    goods_specs, goods_attrs, remark
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.xq.live.globalVoyage$.model.GoodsSkuExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from goods_sku
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.xq.live.globalVoyage$.model.GoodsSkuExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from goods_sku
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.xq.live.globalVoyage$.model.GoodsSkuExample">
    delete from goods_sku
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xq.live.globalVoyage$.model.GoodsSkuWithBLOBs">
    insert into goods_sku (goods_id, goods_name, goods_spu_id, 
      goods_sku, goods_price, goods_weight, 
      goods_volume, gs_code, goods_main_pic, 
      goods_small_pics, goods_class_id, goods_brand_id, 
      gs_unit, goods_status, goods_seq, 
      is_deleted, create_time, update_time, 
      create_by, update_by, preferential_price, 
      automatic_replenishment, sku_type, shop_id, 
      sales, details, details_img, 
      rejected_img, goods_specs, goods_attrs, 
      remark)
    values (#{goodsId,jdbcType=BIGINT}, #{goodsName,jdbcType=VARCHAR}, #{goodsSpuId,jdbcType=BIGINT}, 
      #{goodsSku,jdbcType=VARCHAR}, #{goodsPrice,jdbcType=DECIMAL}, #{goodsWeight,jdbcType=DOUBLE}, 
      #{goodsVolume,jdbcType=DOUBLE}, #{gsCode,jdbcType=VARCHAR}, #{goodsMainPic,jdbcType=VARCHAR}, 
      #{goodsSmallPics,jdbcType=VARCHAR}, #{goodsClassId,jdbcType=BIGINT}, #{goodsBrandId,jdbcType=BIGINT}, 
      #{gsUnit,jdbcType=VARCHAR}, #{goodsStatus,jdbcType=VARCHAR}, #{goodsSeq,jdbcType=INTEGER}, 
      #{isDeleted,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{createBy,jdbcType=VARCHAR}, #{updateBy,jdbcType=VARCHAR}, #{preferentialPrice,jdbcType=DECIMAL}, 
      #{automaticReplenishment,jdbcType=INTEGER}, #{skuType,jdbcType=VARCHAR}, #{shopId,jdbcType=BIGINT}, 
      #{sales,jdbcType=INTEGER}, #{details,jdbcType=VARCHAR}, #{detailsImg,jdbcType=VARCHAR}, 
      #{rejectedImg,jdbcType=VARCHAR}, #{goodsSpecs,jdbcType=LONGVARCHAR}, #{goodsAttrs,jdbcType=LONGVARCHAR}, 
      #{remark,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.xq.live.globalVoyage$.model.GoodsSkuWithBLOBs">
    insert into goods_sku
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="goodsId != null">
        goods_id,
      </if>
      <if test="goodsName != null">
        goods_name,
      </if>
      <if test="goodsSpuId != null">
        goods_spu_id,
      </if>
      <if test="goodsSku != null">
        goods_sku,
      </if>
      <if test="goodsPrice != null">
        goods_price,
      </if>
      <if test="goodsWeight != null">
        goods_weight,
      </if>
      <if test="goodsVolume != null">
        goods_volume,
      </if>
      <if test="gsCode != null">
        gs_code,
      </if>
      <if test="goodsMainPic != null">
        goods_main_pic,
      </if>
      <if test="goodsSmallPics != null">
        goods_small_pics,
      </if>
      <if test="goodsClassId != null">
        goods_class_id,
      </if>
      <if test="goodsBrandId != null">
        goods_brand_id,
      </if>
      <if test="gsUnit != null">
        gs_unit,
      </if>
      <if test="goodsStatus != null">
        goods_status,
      </if>
      <if test="goodsSeq != null">
        goods_seq,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="updateBy != null">
        update_by,
      </if>
      <if test="preferentialPrice != null">
        preferential_price,
      </if>
      <if test="automaticReplenishment != null">
        automatic_replenishment,
      </if>
      <if test="skuType != null">
        sku_type,
      </if>
      <if test="shopId != null">
        shop_id,
      </if>
      <if test="sales != null">
        sales,
      </if>
      <if test="details != null">
        details,
      </if>
      <if test="detailsImg != null">
        details_img,
      </if>
      <if test="rejectedImg != null">
        rejected_img,
      </if>
      <if test="goodsSpecs != null">
        goods_specs,
      </if>
      <if test="goodsAttrs != null">
        goods_attrs,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="goodsId != null">
        #{goodsId,jdbcType=BIGINT},
      </if>
      <if test="goodsName != null">
        #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="goodsSpuId != null">
        #{goodsSpuId,jdbcType=BIGINT},
      </if>
      <if test="goodsSku != null">
        #{goodsSku,jdbcType=VARCHAR},
      </if>
      <if test="goodsPrice != null">
        #{goodsPrice,jdbcType=DECIMAL},
      </if>
      <if test="goodsWeight != null">
        #{goodsWeight,jdbcType=DOUBLE},
      </if>
      <if test="goodsVolume != null">
        #{goodsVolume,jdbcType=DOUBLE},
      </if>
      <if test="gsCode != null">
        #{gsCode,jdbcType=VARCHAR},
      </if>
      <if test="goodsMainPic != null">
        #{goodsMainPic,jdbcType=VARCHAR},
      </if>
      <if test="goodsSmallPics != null">
        #{goodsSmallPics,jdbcType=VARCHAR},
      </if>
      <if test="goodsClassId != null">
        #{goodsClassId,jdbcType=BIGINT},
      </if>
      <if test="goodsBrandId != null">
        #{goodsBrandId,jdbcType=BIGINT},
      </if>
      <if test="gsUnit != null">
        #{gsUnit,jdbcType=VARCHAR},
      </if>
      <if test="goodsStatus != null">
        #{goodsStatus,jdbcType=VARCHAR},
      </if>
      <if test="goodsSeq != null">
        #{goodsSeq,jdbcType=INTEGER},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="preferentialPrice != null">
        #{preferentialPrice,jdbcType=DECIMAL},
      </if>
      <if test="automaticReplenishment != null">
        #{automaticReplenishment,jdbcType=INTEGER},
      </if>
      <if test="skuType != null">
        #{skuType,jdbcType=VARCHAR},
      </if>
      <if test="shopId != null">
        #{shopId,jdbcType=BIGINT},
      </if>
      <if test="sales != null">
        #{sales,jdbcType=INTEGER},
      </if>
      <if test="details != null">
        #{details,jdbcType=VARCHAR},
      </if>
      <if test="detailsImg != null">
        #{detailsImg,jdbcType=VARCHAR},
      </if>
      <if test="rejectedImg != null">
        #{rejectedImg,jdbcType=VARCHAR},
      </if>
      <if test="goodsSpecs != null">
        #{goodsSpecs,jdbcType=LONGVARCHAR},
      </if>
      <if test="goodsAttrs != null">
        #{goodsAttrs,jdbcType=LONGVARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xq.live.globalVoyage$.model.GoodsSkuExample" resultType="java.lang.Long">
    select count(*) from goods_sku
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update goods_sku
    <set>
      <if test="record.goodsId != null">
        goods_id = #{record.goodsId,jdbcType=BIGINT},
      </if>
      <if test="record.goodsName != null">
        goods_name = #{record.goodsName,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsSpuId != null">
        goods_spu_id = #{record.goodsSpuId,jdbcType=BIGINT},
      </if>
      <if test="record.goodsSku != null">
        goods_sku = #{record.goodsSku,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsPrice != null">
        goods_price = #{record.goodsPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.goodsWeight != null">
        goods_weight = #{record.goodsWeight,jdbcType=DOUBLE},
      </if>
      <if test="record.goodsVolume != null">
        goods_volume = #{record.goodsVolume,jdbcType=DOUBLE},
      </if>
      <if test="record.gsCode != null">
        gs_code = #{record.gsCode,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsMainPic != null">
        goods_main_pic = #{record.goodsMainPic,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsSmallPics != null">
        goods_small_pics = #{record.goodsSmallPics,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsClassId != null">
        goods_class_id = #{record.goodsClassId,jdbcType=BIGINT},
      </if>
      <if test="record.goodsBrandId != null">
        goods_brand_id = #{record.goodsBrandId,jdbcType=BIGINT},
      </if>
      <if test="record.gsUnit != null">
        gs_unit = #{record.gsUnit,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsStatus != null">
        goods_status = #{record.goodsStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsSeq != null">
        goods_seq = #{record.goodsSeq,jdbcType=INTEGER},
      </if>
      <if test="record.isDeleted != null">
        is_deleted = #{record.isDeleted,jdbcType=TINYINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createBy != null">
        create_by = #{record.createBy,jdbcType=VARCHAR},
      </if>
      <if test="record.updateBy != null">
        update_by = #{record.updateBy,jdbcType=VARCHAR},
      </if>
      <if test="record.preferentialPrice != null">
        preferential_price = #{record.preferentialPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.automaticReplenishment != null">
        automatic_replenishment = #{record.automaticReplenishment,jdbcType=INTEGER},
      </if>
      <if test="record.skuType != null">
        sku_type = #{record.skuType,jdbcType=VARCHAR},
      </if>
      <if test="record.shopId != null">
        shop_id = #{record.shopId,jdbcType=BIGINT},
      </if>
      <if test="record.sales != null">
        sales = #{record.sales,jdbcType=INTEGER},
      </if>
      <if test="record.details != null">
        details = #{record.details,jdbcType=VARCHAR},
      </if>
      <if test="record.detailsImg != null">
        details_img = #{record.detailsImg,jdbcType=VARCHAR},
      </if>
      <if test="record.rejectedImg != null">
        rejected_img = #{record.rejectedImg,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsSpecs != null">
        goods_specs = #{record.goodsSpecs,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.goodsAttrs != null">
        goods_attrs = #{record.goodsAttrs,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update goods_sku
    set goods_id = #{record.goodsId,jdbcType=BIGINT},
      goods_name = #{record.goodsName,jdbcType=VARCHAR},
      goods_spu_id = #{record.goodsSpuId,jdbcType=BIGINT},
      goods_sku = #{record.goodsSku,jdbcType=VARCHAR},
      goods_price = #{record.goodsPrice,jdbcType=DECIMAL},
      goods_weight = #{record.goodsWeight,jdbcType=DOUBLE},
      goods_volume = #{record.goodsVolume,jdbcType=DOUBLE},
      gs_code = #{record.gsCode,jdbcType=VARCHAR},
      goods_main_pic = #{record.goodsMainPic,jdbcType=VARCHAR},
      goods_small_pics = #{record.goodsSmallPics,jdbcType=VARCHAR},
      goods_class_id = #{record.goodsClassId,jdbcType=BIGINT},
      goods_brand_id = #{record.goodsBrandId,jdbcType=BIGINT},
      gs_unit = #{record.gsUnit,jdbcType=VARCHAR},
      goods_status = #{record.goodsStatus,jdbcType=VARCHAR},
      goods_seq = #{record.goodsSeq,jdbcType=INTEGER},
      is_deleted = #{record.isDeleted,jdbcType=TINYINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      create_by = #{record.createBy,jdbcType=VARCHAR},
      update_by = #{record.updateBy,jdbcType=VARCHAR},
      preferential_price = #{record.preferentialPrice,jdbcType=DECIMAL},
      automatic_replenishment = #{record.automaticReplenishment,jdbcType=INTEGER},
      sku_type = #{record.skuType,jdbcType=VARCHAR},
      shop_id = #{record.shopId,jdbcType=BIGINT},
      sales = #{record.sales,jdbcType=INTEGER},
      details = #{record.details,jdbcType=VARCHAR},
      details_img = #{record.detailsImg,jdbcType=VARCHAR},
      rejected_img = #{record.rejectedImg,jdbcType=VARCHAR},
      goods_specs = #{record.goodsSpecs,jdbcType=LONGVARCHAR},
      goods_attrs = #{record.goodsAttrs,jdbcType=LONGVARCHAR},
      remark = #{record.remark,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update goods_sku
    set goods_id = #{record.goodsId,jdbcType=BIGINT},
      goods_name = #{record.goodsName,jdbcType=VARCHAR},
      goods_spu_id = #{record.goodsSpuId,jdbcType=BIGINT},
      goods_sku = #{record.goodsSku,jdbcType=VARCHAR},
      goods_price = #{record.goodsPrice,jdbcType=DECIMAL},
      goods_weight = #{record.goodsWeight,jdbcType=DOUBLE},
      goods_volume = #{record.goodsVolume,jdbcType=DOUBLE},
      gs_code = #{record.gsCode,jdbcType=VARCHAR},
      goods_main_pic = #{record.goodsMainPic,jdbcType=VARCHAR},
      goods_small_pics = #{record.goodsSmallPics,jdbcType=VARCHAR},
      goods_class_id = #{record.goodsClassId,jdbcType=BIGINT},
      goods_brand_id = #{record.goodsBrandId,jdbcType=BIGINT},
      gs_unit = #{record.gsUnit,jdbcType=VARCHAR},
      goods_status = #{record.goodsStatus,jdbcType=VARCHAR},
      goods_seq = #{record.goodsSeq,jdbcType=INTEGER},
      is_deleted = #{record.isDeleted,jdbcType=TINYINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      create_by = #{record.createBy,jdbcType=VARCHAR},
      update_by = #{record.updateBy,jdbcType=VARCHAR},
      preferential_price = #{record.preferentialPrice,jdbcType=DECIMAL},
      automatic_replenishment = #{record.automaticReplenishment,jdbcType=INTEGER},
      sku_type = #{record.skuType,jdbcType=VARCHAR},
      shop_id = #{record.shopId,jdbcType=BIGINT},
      sales = #{record.sales,jdbcType=INTEGER},
      details = #{record.details,jdbcType=VARCHAR},
      details_img = #{record.detailsImg,jdbcType=VARCHAR},
      rejected_img = #{record.rejectedImg,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <resultMap id="BaseResultMap" type="com.xq.live.globalVoyage$.model.GoodsSku">
    <result column="id" jdbcType="BIGINT" property="id" />
    <result column="sku_code" jdbcType="VARCHAR" property="skuCode" />
    <result column="sku_name" jdbcType="VARCHAR" property="skuName" />
    <result column="sku_pic" jdbcType="VARCHAR" property="skuPic" />
    <result column="small_sku_pic" jdbcType="VARCHAR" property="smallSkuPic" />
    <result column="cost_price" jdbcType="DECIMAL" property="costPrice" />
    <result column="market_price" jdbcType="DECIMAL" property="marketPrice" />
    <result column="sell_price" jdbcType="DECIMAL" property="sellPrice" />
    <result column="other_marker_price" jdbcType="DECIMAL" property="otherMarkerPrice" />
    <result column="stock_num" jdbcType="INTEGER" property="stockNum" />
    <result column="waring_stock" jdbcType="INTEGER" property="waringStock" />
    <result column="real_weight" jdbcType="DECIMAL" property="realWeight" />
    <result column="spu_id" jdbcType="BIGINT" property="spuId" />
    <result column="delivery_template_id" jdbcType="BIGINT" property="deliveryTemplateId" />
    <result column="is_deleted" jdbcType="INTEGER" property="isDeleted" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="shop_id" jdbcType="BIGINT" property="shopId" />
    <result column="sell_num" jdbcType="INTEGER" property="sellNum" />
    <result column="unit" jdbcType="VARCHAR" property="unit" />
    <result column="mini_num" jdbcType="INTEGER" property="miniNum" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="send_type" jdbcType="INTEGER" property="sendType" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="single_type" jdbcType="INTEGER" property="singleType" />
    <result column="expiry_date" jdbcType="INTEGER" property="expiryDate" />
    <result column="sku_id" jdbcType="BIGINT" property="skuId" />
    <result column="piece" jdbcType="INTEGER" property="piece" />
    <result column="bulk" jdbcType="DECIMAL" property="bulk" />
    <result column="create_type" jdbcType="INTEGER" property="createType" />
    <result column="goods_sku_pics" jdbcType="VARCHAR" property="goodsSkuPics" />
    <result column="sort_num" jdbcType="INTEGER" property="sortNum" />
    <result column="singly_price" jdbcType="DECIMAL" property="singlyPrice" />
    <result column="auto_add_stock" jdbcType="INTEGER" property="autoAddStock" />
    <result column="audit_status" jdbcType="TINYINT" property="auditStatus" />
    <result column="use_sku_detail" jdbcType="INTEGER" property="useSkuDetail" />
    <result column="show_type" jdbcType="INTEGER" property="showType" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, sku_code, sku_name, sku_pic, small_sku_pic, cost_price, market_price, sell_price, 
    other_marker_price, stock_num, waring_stock, real_weight, spu_id, delivery_template_id, 
    is_deleted, status, shop_id, sell_num, unit, mini_num, create_time, update_time, 
    send_type, remark, single_type, expiry_date, sku_id, piece, bulk, create_type, goods_sku_pics, 
    sort_num, singly_price, auto_add_stock, audit_status, use_sku_detail, show_type
  </sql>
  <select id="selectByExample" parameterType="com.xq.live.globalVoyage$.model.GoodsSkuExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from goods_sku
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.xq.live.globalVoyage$.model.GoodsSkuExample">
    delete from goods_sku
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xq.live.globalVoyage$.model.GoodsSku">
    insert into goods_sku (id, sku_code, sku_name, 
      sku_pic, small_sku_pic, cost_price, 
      market_price, sell_price, other_marker_price, 
      stock_num, waring_stock, real_weight, 
      spu_id, delivery_template_id, is_deleted, 
      status, shop_id, sell_num, 
      unit, mini_num, create_time, 
      update_time, send_type, remark, 
      single_type, expiry_date, sku_id, 
      piece, bulk, create_type, 
      goods_sku_pics, sort_num, singly_price, 
      auto_add_stock, audit_status, use_sku_detail, 
      show_type)
    values (#{id,jdbcType=BIGINT}, #{skuCode,jdbcType=VARCHAR}, #{skuName,jdbcType=VARCHAR}, 
      #{skuPic,jdbcType=VARCHAR}, #{smallSkuPic,jdbcType=VARCHAR}, #{costPrice,jdbcType=DECIMAL}, 
      #{marketPrice,jdbcType=DECIMAL}, #{sellPrice,jdbcType=DECIMAL}, #{otherMarkerPrice,jdbcType=DECIMAL}, 
      #{stockNum,jdbcType=INTEGER}, #{waringStock,jdbcType=INTEGER}, #{realWeight,jdbcType=DECIMAL}, 
      #{spuId,jdbcType=BIGINT}, #{deliveryTemplateId,jdbcType=BIGINT}, #{isDeleted,jdbcType=INTEGER}, 
      #{status,jdbcType=INTEGER}, #{shopId,jdbcType=BIGINT}, #{sellNum,jdbcType=INTEGER}, 
      #{unit,jdbcType=VARCHAR}, #{miniNum,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{sendType,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}, 
      #{singleType,jdbcType=INTEGER}, #{expiryDate,jdbcType=INTEGER}, #{skuId,jdbcType=BIGINT}, 
      #{piece,jdbcType=INTEGER}, #{bulk,jdbcType=DECIMAL}, #{createType,jdbcType=INTEGER}, 
      #{goodsSkuPics,jdbcType=VARCHAR}, #{sortNum,jdbcType=INTEGER}, #{singlyPrice,jdbcType=DECIMAL}, 
      #{autoAddStock,jdbcType=INTEGER}, #{auditStatus,jdbcType=TINYINT}, #{useSkuDetail,jdbcType=INTEGER}, 
      #{showType,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.xq.live.globalVoyage$.model.GoodsSku">
    insert into goods_sku
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="skuCode != null">
        sku_code,
      </if>
      <if test="skuName != null">
        sku_name,
      </if>
      <if test="skuPic != null">
        sku_pic,
      </if>
      <if test="smallSkuPic != null">
        small_sku_pic,
      </if>
      <if test="costPrice != null">
        cost_price,
      </if>
      <if test="marketPrice != null">
        market_price,
      </if>
      <if test="sellPrice != null">
        sell_price,
      </if>
      <if test="otherMarkerPrice != null">
        other_marker_price,
      </if>
      <if test="stockNum != null">
        stock_num,
      </if>
      <if test="waringStock != null">
        waring_stock,
      </if>
      <if test="realWeight != null">
        real_weight,
      </if>
      <if test="spuId != null">
        spu_id,
      </if>
      <if test="deliveryTemplateId != null">
        delivery_template_id,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="shopId != null">
        shop_id,
      </if>
      <if test="sellNum != null">
        sell_num,
      </if>
      <if test="unit != null">
        unit,
      </if>
      <if test="miniNum != null">
        mini_num,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="sendType != null">
        send_type,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="singleType != null">
        single_type,
      </if>
      <if test="expiryDate != null">
        expiry_date,
      </if>
      <if test="skuId != null">
        sku_id,
      </if>
      <if test="piece != null">
        piece,
      </if>
      <if test="bulk != null">
        bulk,
      </if>
      <if test="createType != null">
        create_type,
      </if>
      <if test="goodsSkuPics != null">
        goods_sku_pics,
      </if>
      <if test="sortNum != null">
        sort_num,
      </if>
      <if test="singlyPrice != null">
        singly_price,
      </if>
      <if test="autoAddStock != null">
        auto_add_stock,
      </if>
      <if test="auditStatus != null">
        audit_status,
      </if>
      <if test="useSkuDetail != null">
        use_sku_detail,
      </if>
      <if test="showType != null">
        show_type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="skuCode != null">
        #{skuCode,jdbcType=VARCHAR},
      </if>
      <if test="skuName != null">
        #{skuName,jdbcType=VARCHAR},
      </if>
      <if test="skuPic != null">
        #{skuPic,jdbcType=VARCHAR},
      </if>
      <if test="smallSkuPic != null">
        #{smallSkuPic,jdbcType=VARCHAR},
      </if>
      <if test="costPrice != null">
        #{costPrice,jdbcType=DECIMAL},
      </if>
      <if test="marketPrice != null">
        #{marketPrice,jdbcType=DECIMAL},
      </if>
      <if test="sellPrice != null">
        #{sellPrice,jdbcType=DECIMAL},
      </if>
      <if test="otherMarkerPrice != null">
        #{otherMarkerPrice,jdbcType=DECIMAL},
      </if>
      <if test="stockNum != null">
        #{stockNum,jdbcType=INTEGER},
      </if>
      <if test="waringStock != null">
        #{waringStock,jdbcType=INTEGER},
      </if>
      <if test="realWeight != null">
        #{realWeight,jdbcType=DECIMAL},
      </if>
      <if test="spuId != null">
        #{spuId,jdbcType=BIGINT},
      </if>
      <if test="deliveryTemplateId != null">
        #{deliveryTemplateId,jdbcType=BIGINT},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="shopId != null">
        #{shopId,jdbcType=BIGINT},
      </if>
      <if test="sellNum != null">
        #{sellNum,jdbcType=INTEGER},
      </if>
      <if test="unit != null">
        #{unit,jdbcType=VARCHAR},
      </if>
      <if test="miniNum != null">
        #{miniNum,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sendType != null">
        #{sendType,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="singleType != null">
        #{singleType,jdbcType=INTEGER},
      </if>
      <if test="expiryDate != null">
        #{expiryDate,jdbcType=INTEGER},
      </if>
      <if test="skuId != null">
        #{skuId,jdbcType=BIGINT},
      </if>
      <if test="piece != null">
        #{piece,jdbcType=INTEGER},
      </if>
      <if test="bulk != null">
        #{bulk,jdbcType=DECIMAL},
      </if>
      <if test="createType != null">
        #{createType,jdbcType=INTEGER},
      </if>
      <if test="goodsSkuPics != null">
        #{goodsSkuPics,jdbcType=VARCHAR},
      </if>
      <if test="sortNum != null">
        #{sortNum,jdbcType=INTEGER},
      </if>
      <if test="singlyPrice != null">
        #{singlyPrice,jdbcType=DECIMAL},
      </if>
      <if test="autoAddStock != null">
        #{autoAddStock,jdbcType=INTEGER},
      </if>
      <if test="auditStatus != null">
        #{auditStatus,jdbcType=TINYINT},
      </if>
      <if test="useSkuDetail != null">
        #{useSkuDetail,jdbcType=INTEGER},
      </if>
      <if test="showType != null">
        #{showType,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xq.live.globalVoyage$.model.GoodsSkuExample" resultType="java.lang.Long">
    select count(*) from goods_sku
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update goods_sku
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.skuCode != null">
        sku_code = #{record.skuCode,jdbcType=VARCHAR},
      </if>
      <if test="record.skuName != null">
        sku_name = #{record.skuName,jdbcType=VARCHAR},
      </if>
      <if test="record.skuPic != null">
        sku_pic = #{record.skuPic,jdbcType=VARCHAR},
      </if>
      <if test="record.smallSkuPic != null">
        small_sku_pic = #{record.smallSkuPic,jdbcType=VARCHAR},
      </if>
      <if test="record.costPrice != null">
        cost_price = #{record.costPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.marketPrice != null">
        market_price = #{record.marketPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.sellPrice != null">
        sell_price = #{record.sellPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.otherMarkerPrice != null">
        other_marker_price = #{record.otherMarkerPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.stockNum != null">
        stock_num = #{record.stockNum,jdbcType=INTEGER},
      </if>
      <if test="record.waringStock != null">
        waring_stock = #{record.waringStock,jdbcType=INTEGER},
      </if>
      <if test="record.realWeight != null">
        real_weight = #{record.realWeight,jdbcType=DECIMAL},
      </if>
      <if test="record.spuId != null">
        spu_id = #{record.spuId,jdbcType=BIGINT},
      </if>
      <if test="record.deliveryTemplateId != null">
        delivery_template_id = #{record.deliveryTemplateId,jdbcType=BIGINT},
      </if>
      <if test="record.isDeleted != null">
        is_deleted = #{record.isDeleted,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.shopId != null">
        shop_id = #{record.shopId,jdbcType=BIGINT},
      </if>
      <if test="record.sellNum != null">
        sell_num = #{record.sellNum,jdbcType=INTEGER},
      </if>
      <if test="record.unit != null">
        unit = #{record.unit,jdbcType=VARCHAR},
      </if>
      <if test="record.miniNum != null">
        mini_num = #{record.miniNum,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.sendType != null">
        send_type = #{record.sendType,jdbcType=INTEGER},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.singleType != null">
        single_type = #{record.singleType,jdbcType=INTEGER},
      </if>
      <if test="record.expiryDate != null">
        expiry_date = #{record.expiryDate,jdbcType=INTEGER},
      </if>
      <if test="record.skuId != null">
        sku_id = #{record.skuId,jdbcType=BIGINT},
      </if>
      <if test="record.piece != null">
        piece = #{record.piece,jdbcType=INTEGER},
      </if>
      <if test="record.bulk != null">
        bulk = #{record.bulk,jdbcType=DECIMAL},
      </if>
      <if test="record.createType != null">
        create_type = #{record.createType,jdbcType=INTEGER},
      </if>
      <if test="record.goodsSkuPics != null">
        goods_sku_pics = #{record.goodsSkuPics,jdbcType=VARCHAR},
      </if>
      <if test="record.sortNum != null">
        sort_num = #{record.sortNum,jdbcType=INTEGER},
      </if>
      <if test="record.singlyPrice != null">
        singly_price = #{record.singlyPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.autoAddStock != null">
        auto_add_stock = #{record.autoAddStock,jdbcType=INTEGER},
      </if>
      <if test="record.auditStatus != null">
        audit_status = #{record.auditStatus,jdbcType=TINYINT},
      </if>
      <if test="record.useSkuDetail != null">
        use_sku_detail = #{record.useSkuDetail,jdbcType=INTEGER},
      </if>
      <if test="record.showType != null">
        show_type = #{record.showType,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update goods_sku
    set id = #{record.id,jdbcType=BIGINT},
      sku_code = #{record.skuCode,jdbcType=VARCHAR},
      sku_name = #{record.skuName,jdbcType=VARCHAR},
      sku_pic = #{record.skuPic,jdbcType=VARCHAR},
      small_sku_pic = #{record.smallSkuPic,jdbcType=VARCHAR},
      cost_price = #{record.costPrice,jdbcType=DECIMAL},
      market_price = #{record.marketPrice,jdbcType=DECIMAL},
      sell_price = #{record.sellPrice,jdbcType=DECIMAL},
      other_marker_price = #{record.otherMarkerPrice,jdbcType=DECIMAL},
      stock_num = #{record.stockNum,jdbcType=INTEGER},
      waring_stock = #{record.waringStock,jdbcType=INTEGER},
      real_weight = #{record.realWeight,jdbcType=DECIMAL},
      spu_id = #{record.spuId,jdbcType=BIGINT},
      delivery_template_id = #{record.deliveryTemplateId,jdbcType=BIGINT},
      is_deleted = #{record.isDeleted,jdbcType=INTEGER},
      status = #{record.status,jdbcType=INTEGER},
      shop_id = #{record.shopId,jdbcType=BIGINT},
      sell_num = #{record.sellNum,jdbcType=INTEGER},
      unit = #{record.unit,jdbcType=VARCHAR},
      mini_num = #{record.miniNum,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      send_type = #{record.sendType,jdbcType=INTEGER},
      remark = #{record.remark,jdbcType=VARCHAR},
      single_type = #{record.singleType,jdbcType=INTEGER},
      expiry_date = #{record.expiryDate,jdbcType=INTEGER},
      sku_id = #{record.skuId,jdbcType=BIGINT},
      piece = #{record.piece,jdbcType=INTEGER},
      bulk = #{record.bulk,jdbcType=DECIMAL},
      create_type = #{record.createType,jdbcType=INTEGER},
      goods_sku_pics = #{record.goodsSkuPics,jdbcType=VARCHAR},
      sort_num = #{record.sortNum,jdbcType=INTEGER},
      singly_price = #{record.singlyPrice,jdbcType=DECIMAL},
      auto_add_stock = #{record.autoAddStock,jdbcType=INTEGER},
      audit_status = #{record.auditStatus,jdbcType=TINYINT},
      use_sku_detail = #{record.useSkuDetail,jdbcType=INTEGER},
      show_type = #{record.showType,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <resultMap id="BaseResultMap" type="com.xq.live.globalVoyage$.model.GoodsSku">
    <result column="sku_id" jdbcType="BIGINT" property="skuId" />
    <result column="spu_id" jdbcType="BIGINT" property="spuId" />
    <result column="sku_name" jdbcType="VARCHAR" property="skuName" />
    <result column="package_type" jdbcType="VARCHAR" property="packageType" />
    <result column="stay_type" jdbcType="VARCHAR" property="stayType" />
    <result column="departure" jdbcType="VARCHAR" property="departure" />
    <result column="guide_service" jdbcType="VARCHAR" property="guideService" />
    <result column="entertainment" jdbcType="VARCHAR" property="entertainment" />
    <result column="traffic_type" jdbcType="VARCHAR" property="trafficType" />
    <result column="people_num" jdbcType="INTEGER" property="peopleNum" />
    <result column="meal" jdbcType="VARCHAR" property="meal" />
    <result column="place" jdbcType="VARCHAR" property="place" />
    <result column="times" jdbcType="TIMESTAMP" property="times" />
    <result column="clear_day" jdbcType="INTEGER" property="clearDay" />
    <result column="clear_time" jdbcType="TIME" property="clearTime" />
    <result column="include_project" jdbcType="VARCHAR" property="includeProject" />
    <result column="ticket_type" jdbcType="VARCHAR" property="ticketType" />
    <result column="is_coupon" jdbcType="TINYINT" property="isCoupon" />
    <result column="available_days" jdbcType="INTEGER" property="availableDays" />
    <result column="is_season" jdbcType="TINYINT" property="isSeason" />
    <result column="suitable_time" jdbcType="TIME" property="suitableTime" />
    <result column="price" jdbcType="DECIMAL" property="price" />
    <result column="upper_purchase" jdbcType="INTEGER" property="upperPurchase" />
    <result column="lower_purchase" jdbcType="INTEGER" property="lowerPurchase" />
    <result column="is_deleted" jdbcType="TINYINT" property="isDeleted" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="update_by" jdbcType="VARCHAR" property="updateBy" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    sku_id, spu_id, sku_name, package_type, stay_type, departure, guide_service, entertainment, 
    traffic_type, people_num, meal, place, times, clear_day, clear_time, include_project, 
    ticket_type, is_coupon, available_days, is_season, suitable_time, price, upper_purchase, 
    lower_purchase, is_deleted, create_time, update_time, create_by, update_by
  </sql>
  <select id="selectByExample" parameterType="com.xq.live.globalVoyage$.model.GoodsSkuExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from goods_sku
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.xq.live.globalVoyage$.model.GoodsSkuExample">
    delete from goods_sku
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xq.live.globalVoyage$.model.GoodsSku">
    insert into goods_sku (sku_id, spu_id, sku_name, 
      package_type, stay_type, departure, 
      guide_service, entertainment, traffic_type, 
      people_num, meal, place, 
      times, clear_day, clear_time, 
      include_project, ticket_type, is_coupon, 
      available_days, is_season, suitable_time, 
      price, upper_purchase, lower_purchase, 
      is_deleted, create_time, update_time, 
      create_by, update_by)
    values (#{skuId,jdbcType=BIGINT}, #{spuId,jdbcType=BIGINT}, #{skuName,jdbcType=VARCHAR}, 
      #{packageType,jdbcType=VARCHAR}, #{stayType,jdbcType=VARCHAR}, #{departure,jdbcType=VARCHAR}, 
      #{guideService,jdbcType=VARCHAR}, #{entertainment,jdbcType=VARCHAR}, #{trafficType,jdbcType=VARCHAR}, 
      #{peopleNum,jdbcType=INTEGER}, #{meal,jdbcType=VARCHAR}, #{place,jdbcType=VARCHAR}, 
      #{times,jdbcType=TIMESTAMP}, #{clearDay,jdbcType=INTEGER}, #{clearTime,jdbcType=TIME}, 
      #{includeProject,jdbcType=VARCHAR}, #{ticketType,jdbcType=VARCHAR}, #{isCoupon,jdbcType=TINYINT}, 
      #{availableDays,jdbcType=INTEGER}, #{isSeason,jdbcType=TINYINT}, #{suitableTime,jdbcType=TIME}, 
      #{price,jdbcType=DECIMAL}, #{upperPurchase,jdbcType=INTEGER}, #{lowerPurchase,jdbcType=INTEGER}, 
      #{isDeleted,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{createBy,jdbcType=VARCHAR}, #{updateBy,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.xq.live.globalVoyage$.model.GoodsSku">
    insert into goods_sku
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="skuId != null">
        sku_id,
      </if>
      <if test="spuId != null">
        spu_id,
      </if>
      <if test="skuName != null">
        sku_name,
      </if>
      <if test="packageType != null">
        package_type,
      </if>
      <if test="stayType != null">
        stay_type,
      </if>
      <if test="departure != null">
        departure,
      </if>
      <if test="guideService != null">
        guide_service,
      </if>
      <if test="entertainment != null">
        entertainment,
      </if>
      <if test="trafficType != null">
        traffic_type,
      </if>
      <if test="peopleNum != null">
        people_num,
      </if>
      <if test="meal != null">
        meal,
      </if>
      <if test="place != null">
        place,
      </if>
      <if test="times != null">
        times,
      </if>
      <if test="clearDay != null">
        clear_day,
      </if>
      <if test="clearTime != null">
        clear_time,
      </if>
      <if test="includeProject != null">
        include_project,
      </if>
      <if test="ticketType != null">
        ticket_type,
      </if>
      <if test="isCoupon != null">
        is_coupon,
      </if>
      <if test="availableDays != null">
        available_days,
      </if>
      <if test="isSeason != null">
        is_season,
      </if>
      <if test="suitableTime != null">
        suitable_time,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="upperPurchase != null">
        upper_purchase,
      </if>
      <if test="lowerPurchase != null">
        lower_purchase,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="updateBy != null">
        update_by,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="skuId != null">
        #{skuId,jdbcType=BIGINT},
      </if>
      <if test="spuId != null">
        #{spuId,jdbcType=BIGINT},
      </if>
      <if test="skuName != null">
        #{skuName,jdbcType=VARCHAR},
      </if>
      <if test="packageType != null">
        #{packageType,jdbcType=VARCHAR},
      </if>
      <if test="stayType != null">
        #{stayType,jdbcType=VARCHAR},
      </if>
      <if test="departure != null">
        #{departure,jdbcType=VARCHAR},
      </if>
      <if test="guideService != null">
        #{guideService,jdbcType=VARCHAR},
      </if>
      <if test="entertainment != null">
        #{entertainment,jdbcType=VARCHAR},
      </if>
      <if test="trafficType != null">
        #{trafficType,jdbcType=VARCHAR},
      </if>
      <if test="peopleNum != null">
        #{peopleNum,jdbcType=INTEGER},
      </if>
      <if test="meal != null">
        #{meal,jdbcType=VARCHAR},
      </if>
      <if test="place != null">
        #{place,jdbcType=VARCHAR},
      </if>
      <if test="times != null">
        #{times,jdbcType=TIMESTAMP},
      </if>
      <if test="clearDay != null">
        #{clearDay,jdbcType=INTEGER},
      </if>
      <if test="clearTime != null">
        #{clearTime,jdbcType=TIME},
      </if>
      <if test="includeProject != null">
        #{includeProject,jdbcType=VARCHAR},
      </if>
      <if test="ticketType != null">
        #{ticketType,jdbcType=VARCHAR},
      </if>
      <if test="isCoupon != null">
        #{isCoupon,jdbcType=TINYINT},
      </if>
      <if test="availableDays != null">
        #{availableDays,jdbcType=INTEGER},
      </if>
      <if test="isSeason != null">
        #{isSeason,jdbcType=TINYINT},
      </if>
      <if test="suitableTime != null">
        #{suitableTime,jdbcType=TIME},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="upperPurchase != null">
        #{upperPurchase,jdbcType=INTEGER},
      </if>
      <if test="lowerPurchase != null">
        #{lowerPurchase,jdbcType=INTEGER},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xq.live.globalVoyage$.model.GoodsSkuExample" resultType="java.lang.Long">
    select count(*) from goods_sku
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update goods_sku
    <set>
      <if test="record.skuId != null">
        sku_id = #{record.skuId,jdbcType=BIGINT},
      </if>
      <if test="record.spuId != null">
        spu_id = #{record.spuId,jdbcType=BIGINT},
      </if>
      <if test="record.skuName != null">
        sku_name = #{record.skuName,jdbcType=VARCHAR},
      </if>
      <if test="record.packageType != null">
        package_type = #{record.packageType,jdbcType=VARCHAR},
      </if>
      <if test="record.stayType != null">
        stay_type = #{record.stayType,jdbcType=VARCHAR},
      </if>
      <if test="record.departure != null">
        departure = #{record.departure,jdbcType=VARCHAR},
      </if>
      <if test="record.guideService != null">
        guide_service = #{record.guideService,jdbcType=VARCHAR},
      </if>
      <if test="record.entertainment != null">
        entertainment = #{record.entertainment,jdbcType=VARCHAR},
      </if>
      <if test="record.trafficType != null">
        traffic_type = #{record.trafficType,jdbcType=VARCHAR},
      </if>
      <if test="record.peopleNum != null">
        people_num = #{record.peopleNum,jdbcType=INTEGER},
      </if>
      <if test="record.meal != null">
        meal = #{record.meal,jdbcType=VARCHAR},
      </if>
      <if test="record.place != null">
        place = #{record.place,jdbcType=VARCHAR},
      </if>
      <if test="record.times != null">
        times = #{record.times,jdbcType=TIMESTAMP},
      </if>
      <if test="record.clearDay != null">
        clear_day = #{record.clearDay,jdbcType=INTEGER},
      </if>
      <if test="record.clearTime != null">
        clear_time = #{record.clearTime,jdbcType=TIME},
      </if>
      <if test="record.includeProject != null">
        include_project = #{record.includeProject,jdbcType=VARCHAR},
      </if>
      <if test="record.ticketType != null">
        ticket_type = #{record.ticketType,jdbcType=VARCHAR},
      </if>
      <if test="record.isCoupon != null">
        is_coupon = #{record.isCoupon,jdbcType=TINYINT},
      </if>
      <if test="record.availableDays != null">
        available_days = #{record.availableDays,jdbcType=INTEGER},
      </if>
      <if test="record.isSeason != null">
        is_season = #{record.isSeason,jdbcType=TINYINT},
      </if>
      <if test="record.suitableTime != null">
        suitable_time = #{record.suitableTime,jdbcType=TIME},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=DECIMAL},
      </if>
      <if test="record.upperPurchase != null">
        upper_purchase = #{record.upperPurchase,jdbcType=INTEGER},
      </if>
      <if test="record.lowerPurchase != null">
        lower_purchase = #{record.lowerPurchase,jdbcType=INTEGER},
      </if>
      <if test="record.isDeleted != null">
        is_deleted = #{record.isDeleted,jdbcType=TINYINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createBy != null">
        create_by = #{record.createBy,jdbcType=VARCHAR},
      </if>
      <if test="record.updateBy != null">
        update_by = #{record.updateBy,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update goods_sku
    set sku_id = #{record.skuId,jdbcType=BIGINT},
      spu_id = #{record.spuId,jdbcType=BIGINT},
      sku_name = #{record.skuName,jdbcType=VARCHAR},
      package_type = #{record.packageType,jdbcType=VARCHAR},
      stay_type = #{record.stayType,jdbcType=VARCHAR},
      departure = #{record.departure,jdbcType=VARCHAR},
      guide_service = #{record.guideService,jdbcType=VARCHAR},
      entertainment = #{record.entertainment,jdbcType=VARCHAR},
      traffic_type = #{record.trafficType,jdbcType=VARCHAR},
      people_num = #{record.peopleNum,jdbcType=INTEGER},
      meal = #{record.meal,jdbcType=VARCHAR},
      place = #{record.place,jdbcType=VARCHAR},
      times = #{record.times,jdbcType=TIMESTAMP},
      clear_day = #{record.clearDay,jdbcType=INTEGER},
      clear_time = #{record.clearTime,jdbcType=TIME},
      include_project = #{record.includeProject,jdbcType=VARCHAR},
      ticket_type = #{record.ticketType,jdbcType=VARCHAR},
      is_coupon = #{record.isCoupon,jdbcType=TINYINT},
      available_days = #{record.availableDays,jdbcType=INTEGER},
      is_season = #{record.isSeason,jdbcType=TINYINT},
      suitable_time = #{record.suitableTime,jdbcType=TIME},
      price = #{record.price,jdbcType=DECIMAL},
      upper_purchase = #{record.upperPurchase,jdbcType=INTEGER},
      lower_purchase = #{record.lowerPurchase,jdbcType=INTEGER},
      is_deleted = #{record.isDeleted,jdbcType=TINYINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      create_by = #{record.createBy,jdbcType=VARCHAR},
      update_by = #{record.updateBy,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>