<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xq.live.globalVoyage$.dao.PayRefundLogMapper">
  <resultMap id="BaseResultMap" type="com.xq.live.globalVoyage$.model.PayRefundLog">
    <result column="id" jdbcType="BIGINT" property="id" />
    <result column="transaction_id" jdbcType="VARCHAR" property="transactionId" />
    <result column="out_trade_no" jdbcType="VARCHAR" property="outTradeNo" />
    <result column="refund_id" jdbcType="VARCHAR" property="refundId" />
    <result column="out_refund_no" jdbcType="VARCHAR" property="outRefundNo" />
    <result column="total_fee" jdbcType="DECIMAL" property="totalFee" />
    <result column="refund_fee" jdbcType="DECIMAL" property="refundFee" />
    <result column="settlement_refund_fee" jdbcType="DECIMAL" property="settlementRefundFee" />
    <result column="refund_status" jdbcType="VARCHAR" property="refundStatus" />
    <result column="refund_recv_accout" jdbcType="VARCHAR" property="refundRecvAccout" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, transaction_id, out_trade_no, refund_id, out_refund_no, total_fee, refund_fee, 
    settlement_refund_fee, refund_status, refund_recv_accout, create_time
  </sql>
  <select id="selectByExample" parameterType="com.xq.live.globalVoyage$.model.PayRefundLogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from pay_refund_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.xq.live.globalVoyage$.model.PayRefundLogExample">
    delete from pay_refund_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xq.live.globalVoyage$.model.PayRefundLog">
    insert into pay_refund_log (id, transaction_id, out_trade_no, 
      refund_id, out_refund_no, total_fee, 
      refund_fee, settlement_refund_fee, refund_status, 
      refund_recv_accout, create_time)
    values (#{id,jdbcType=BIGINT}, #{transactionId,jdbcType=VARCHAR}, #{outTradeNo,jdbcType=VARCHAR}, 
      #{refundId,jdbcType=VARCHAR}, #{outRefundNo,jdbcType=VARCHAR}, #{totalFee,jdbcType=DECIMAL}, 
      #{refundFee,jdbcType=DECIMAL}, #{settlementRefundFee,jdbcType=DECIMAL}, #{refundStatus,jdbcType=VARCHAR}, 
      #{refundRecvAccout,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.xq.live.globalVoyage$.model.PayRefundLog">
    insert into pay_refund_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="transactionId != null">
        transaction_id,
      </if>
      <if test="outTradeNo != null">
        out_trade_no,
      </if>
      <if test="refundId != null">
        refund_id,
      </if>
      <if test="outRefundNo != null">
        out_refund_no,
      </if>
      <if test="totalFee != null">
        total_fee,
      </if>
      <if test="refundFee != null">
        refund_fee,
      </if>
      <if test="settlementRefundFee != null">
        settlement_refund_fee,
      </if>
      <if test="refundStatus != null">
        refund_status,
      </if>
      <if test="refundRecvAccout != null">
        refund_recv_accout,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="transactionId != null">
        #{transactionId,jdbcType=VARCHAR},
      </if>
      <if test="outTradeNo != null">
        #{outTradeNo,jdbcType=VARCHAR},
      </if>
      <if test="refundId != null">
        #{refundId,jdbcType=VARCHAR},
      </if>
      <if test="outRefundNo != null">
        #{outRefundNo,jdbcType=VARCHAR},
      </if>
      <if test="totalFee != null">
        #{totalFee,jdbcType=DECIMAL},
      </if>
      <if test="refundFee != null">
        #{refundFee,jdbcType=DECIMAL},
      </if>
      <if test="settlementRefundFee != null">
        #{settlementRefundFee,jdbcType=DECIMAL},
      </if>
      <if test="refundStatus != null">
        #{refundStatus,jdbcType=VARCHAR},
      </if>
      <if test="refundRecvAccout != null">
        #{refundRecvAccout,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xq.live.globalVoyage$.model.PayRefundLogExample" resultType="java.lang.Long">
    select count(*) from pay_refund_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update pay_refund_log
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.transactionId != null">
        transaction_id = #{record.transactionId,jdbcType=VARCHAR},
      </if>
      <if test="record.outTradeNo != null">
        out_trade_no = #{record.outTradeNo,jdbcType=VARCHAR},
      </if>
      <if test="record.refundId != null">
        refund_id = #{record.refundId,jdbcType=VARCHAR},
      </if>
      <if test="record.outRefundNo != null">
        out_refund_no = #{record.outRefundNo,jdbcType=VARCHAR},
      </if>
      <if test="record.totalFee != null">
        total_fee = #{record.totalFee,jdbcType=DECIMAL},
      </if>
      <if test="record.refundFee != null">
        refund_fee = #{record.refundFee,jdbcType=DECIMAL},
      </if>
      <if test="record.settlementRefundFee != null">
        settlement_refund_fee = #{record.settlementRefundFee,jdbcType=DECIMAL},
      </if>
      <if test="record.refundStatus != null">
        refund_status = #{record.refundStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.refundRecvAccout != null">
        refund_recv_accout = #{record.refundRecvAccout,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update pay_refund_log
    set id = #{record.id,jdbcType=BIGINT},
      transaction_id = #{record.transactionId,jdbcType=VARCHAR},
      out_trade_no = #{record.outTradeNo,jdbcType=VARCHAR},
      refund_id = #{record.refundId,jdbcType=VARCHAR},
      out_refund_no = #{record.outRefundNo,jdbcType=VARCHAR},
      total_fee = #{record.totalFee,jdbcType=DECIMAL},
      refund_fee = #{record.refundFee,jdbcType=DECIMAL},
      settlement_refund_fee = #{record.settlementRefundFee,jdbcType=DECIMAL},
      refund_status = #{record.refundStatus,jdbcType=VARCHAR},
      refund_recv_accout = #{record.refundRecvAccout,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <resultMap id="BaseResultMap" type="com.xq.live.globalVoyage$.model.PayRefundLog">
    <result column="id" jdbcType="BIGINT" property="id" />
    <result column="transaction_id" jdbcType="VARCHAR" property="transactionId" />
    <result column="out_trade_no" jdbcType="VARCHAR" property="outTradeNo" />
    <result column="refund_id" jdbcType="VARCHAR" property="refundId" />
    <result column="out_refund_no" jdbcType="VARCHAR" property="outRefundNo" />
    <result column="total_fee" jdbcType="DECIMAL" property="totalFee" />
    <result column="refund_fee" jdbcType="DECIMAL" property="refundFee" />
    <result column="settlement_refund_fee" jdbcType="DECIMAL" property="settlementRefundFee" />
    <result column="refund_status" jdbcType="VARCHAR" property="refundStatus" />
    <result column="refund_recv_accout" jdbcType="VARCHAR" property="refundRecvAccout" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, transaction_id, out_trade_no, refund_id, out_refund_no, total_fee, refund_fee, 
    settlement_refund_fee, refund_status, refund_recv_accout, create_time
  </sql>
  <select id="selectByExample" parameterType="com.xq.live.globalVoyage$.model.PayRefundLogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from pay_refund_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.xq.live.globalVoyage$.model.PayRefundLogExample">
    delete from pay_refund_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xq.live.globalVoyage$.model.PayRefundLog">
    insert into pay_refund_log (id, transaction_id, out_trade_no, 
      refund_id, out_refund_no, total_fee, 
      refund_fee, settlement_refund_fee, refund_status, 
      refund_recv_accout, create_time)
    values (#{id,jdbcType=BIGINT}, #{transactionId,jdbcType=VARCHAR}, #{outTradeNo,jdbcType=VARCHAR}, 
      #{refundId,jdbcType=VARCHAR}, #{outRefundNo,jdbcType=VARCHAR}, #{totalFee,jdbcType=DECIMAL}, 
      #{refundFee,jdbcType=DECIMAL}, #{settlementRefundFee,jdbcType=DECIMAL}, #{refundStatus,jdbcType=VARCHAR}, 
      #{refundRecvAccout,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.xq.live.globalVoyage$.model.PayRefundLog">
    insert into pay_refund_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="transactionId != null">
        transaction_id,
      </if>
      <if test="outTradeNo != null">
        out_trade_no,
      </if>
      <if test="refundId != null">
        refund_id,
      </if>
      <if test="outRefundNo != null">
        out_refund_no,
      </if>
      <if test="totalFee != null">
        total_fee,
      </if>
      <if test="refundFee != null">
        refund_fee,
      </if>
      <if test="settlementRefundFee != null">
        settlement_refund_fee,
      </if>
      <if test="refundStatus != null">
        refund_status,
      </if>
      <if test="refundRecvAccout != null">
        refund_recv_accout,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="transactionId != null">
        #{transactionId,jdbcType=VARCHAR},
      </if>
      <if test="outTradeNo != null">
        #{outTradeNo,jdbcType=VARCHAR},
      </if>
      <if test="refundId != null">
        #{refundId,jdbcType=VARCHAR},
      </if>
      <if test="outRefundNo != null">
        #{outRefundNo,jdbcType=VARCHAR},
      </if>
      <if test="totalFee != null">
        #{totalFee,jdbcType=DECIMAL},
      </if>
      <if test="refundFee != null">
        #{refundFee,jdbcType=DECIMAL},
      </if>
      <if test="settlementRefundFee != null">
        #{settlementRefundFee,jdbcType=DECIMAL},
      </if>
      <if test="refundStatus != null">
        #{refundStatus,jdbcType=VARCHAR},
      </if>
      <if test="refundRecvAccout != null">
        #{refundRecvAccout,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xq.live.globalVoyage$.model.PayRefundLogExample" resultType="java.lang.Long">
    select count(*) from pay_refund_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update pay_refund_log
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.transactionId != null">
        transaction_id = #{record.transactionId,jdbcType=VARCHAR},
      </if>
      <if test="record.outTradeNo != null">
        out_trade_no = #{record.outTradeNo,jdbcType=VARCHAR},
      </if>
      <if test="record.refundId != null">
        refund_id = #{record.refundId,jdbcType=VARCHAR},
      </if>
      <if test="record.outRefundNo != null">
        out_refund_no = #{record.outRefundNo,jdbcType=VARCHAR},
      </if>
      <if test="record.totalFee != null">
        total_fee = #{record.totalFee,jdbcType=DECIMAL},
      </if>
      <if test="record.refundFee != null">
        refund_fee = #{record.refundFee,jdbcType=DECIMAL},
      </if>
      <if test="record.settlementRefundFee != null">
        settlement_refund_fee = #{record.settlementRefundFee,jdbcType=DECIMAL},
      </if>
      <if test="record.refundStatus != null">
        refund_status = #{record.refundStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.refundRecvAccout != null">
        refund_recv_accout = #{record.refundRecvAccout,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update pay_refund_log
    set id = #{record.id,jdbcType=BIGINT},
      transaction_id = #{record.transactionId,jdbcType=VARCHAR},
      out_trade_no = #{record.outTradeNo,jdbcType=VARCHAR},
      refund_id = #{record.refundId,jdbcType=VARCHAR},
      out_refund_no = #{record.outRefundNo,jdbcType=VARCHAR},
      total_fee = #{record.totalFee,jdbcType=DECIMAL},
      refund_fee = #{record.refundFee,jdbcType=DECIMAL},
      settlement_refund_fee = #{record.settlementRefundFee,jdbcType=DECIMAL},
      refund_status = #{record.refundStatus,jdbcType=VARCHAR},
      refund_recv_accout = #{record.refundRecvAccout,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <resultMap id="BaseResultMap" type="com.xq.live.globalVoyage$.model.PayRefundLog">
    <result column="id" jdbcType="BIGINT" property="id" />
    <result column="transaction_id" jdbcType="VARCHAR" property="transactionId" />
    <result column="out_trade_no" jdbcType="VARCHAR" property="outTradeNo" />
    <result column="refund_id" jdbcType="VARCHAR" property="refundId" />
    <result column="out_refund_no" jdbcType="VARCHAR" property="outRefundNo" />
    <result column="total_fee" jdbcType="DECIMAL" property="totalFee" />
    <result column="refund_fee" jdbcType="DECIMAL" property="refundFee" />
    <result column="settlement_refund_fee" jdbcType="DECIMAL" property="settlementRefundFee" />
    <result column="refund_status" jdbcType="VARCHAR" property="refundStatus" />
    <result column="refund_recv_accout" jdbcType="VARCHAR" property="refundRecvAccout" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, transaction_id, out_trade_no, refund_id, out_refund_no, total_fee, refund_fee, 
    settlement_refund_fee, refund_status, refund_recv_accout, create_time
  </sql>
  <select id="selectByExample" parameterType="com.xq.live.globalVoyage$.model.PayRefundLogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from pay_refund_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.xq.live.globalVoyage$.model.PayRefundLogExample">
    delete from pay_refund_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xq.live.globalVoyage$.model.PayRefundLog">
    insert into pay_refund_log (id, transaction_id, out_trade_no, 
      refund_id, out_refund_no, total_fee, 
      refund_fee, settlement_refund_fee, refund_status, 
      refund_recv_accout, create_time)
    values (#{id,jdbcType=BIGINT}, #{transactionId,jdbcType=VARCHAR}, #{outTradeNo,jdbcType=VARCHAR}, 
      #{refundId,jdbcType=VARCHAR}, #{outRefundNo,jdbcType=VARCHAR}, #{totalFee,jdbcType=DECIMAL}, 
      #{refundFee,jdbcType=DECIMAL}, #{settlementRefundFee,jdbcType=DECIMAL}, #{refundStatus,jdbcType=VARCHAR}, 
      #{refundRecvAccout,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.xq.live.globalVoyage$.model.PayRefundLog">
    insert into pay_refund_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="transactionId != null">
        transaction_id,
      </if>
      <if test="outTradeNo != null">
        out_trade_no,
      </if>
      <if test="refundId != null">
        refund_id,
      </if>
      <if test="outRefundNo != null">
        out_refund_no,
      </if>
      <if test="totalFee != null">
        total_fee,
      </if>
      <if test="refundFee != null">
        refund_fee,
      </if>
      <if test="settlementRefundFee != null">
        settlement_refund_fee,
      </if>
      <if test="refundStatus != null">
        refund_status,
      </if>
      <if test="refundRecvAccout != null">
        refund_recv_accout,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="transactionId != null">
        #{transactionId,jdbcType=VARCHAR},
      </if>
      <if test="outTradeNo != null">
        #{outTradeNo,jdbcType=VARCHAR},
      </if>
      <if test="refundId != null">
        #{refundId,jdbcType=VARCHAR},
      </if>
      <if test="outRefundNo != null">
        #{outRefundNo,jdbcType=VARCHAR},
      </if>
      <if test="totalFee != null">
        #{totalFee,jdbcType=DECIMAL},
      </if>
      <if test="refundFee != null">
        #{refundFee,jdbcType=DECIMAL},
      </if>
      <if test="settlementRefundFee != null">
        #{settlementRefundFee,jdbcType=DECIMAL},
      </if>
      <if test="refundStatus != null">
        #{refundStatus,jdbcType=VARCHAR},
      </if>
      <if test="refundRecvAccout != null">
        #{refundRecvAccout,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xq.live.globalVoyage$.model.PayRefundLogExample" resultType="java.lang.Long">
    select count(*) from pay_refund_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update pay_refund_log
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.transactionId != null">
        transaction_id = #{record.transactionId,jdbcType=VARCHAR},
      </if>
      <if test="record.outTradeNo != null">
        out_trade_no = #{record.outTradeNo,jdbcType=VARCHAR},
      </if>
      <if test="record.refundId != null">
        refund_id = #{record.refundId,jdbcType=VARCHAR},
      </if>
      <if test="record.outRefundNo != null">
        out_refund_no = #{record.outRefundNo,jdbcType=VARCHAR},
      </if>
      <if test="record.totalFee != null">
        total_fee = #{record.totalFee,jdbcType=DECIMAL},
      </if>
      <if test="record.refundFee != null">
        refund_fee = #{record.refundFee,jdbcType=DECIMAL},
      </if>
      <if test="record.settlementRefundFee != null">
        settlement_refund_fee = #{record.settlementRefundFee,jdbcType=DECIMAL},
      </if>
      <if test="record.refundStatus != null">
        refund_status = #{record.refundStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.refundRecvAccout != null">
        refund_recv_accout = #{record.refundRecvAccout,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update pay_refund_log
    set id = #{record.id,jdbcType=BIGINT},
      transaction_id = #{record.transactionId,jdbcType=VARCHAR},
      out_trade_no = #{record.outTradeNo,jdbcType=VARCHAR},
      refund_id = #{record.refundId,jdbcType=VARCHAR},
      out_refund_no = #{record.outRefundNo,jdbcType=VARCHAR},
      total_fee = #{record.totalFee,jdbcType=DECIMAL},
      refund_fee = #{record.refundFee,jdbcType=DECIMAL},
      settlement_refund_fee = #{record.settlementRefundFee,jdbcType=DECIMAL},
      refund_status = #{record.refundStatus,jdbcType=VARCHAR},
      refund_recv_accout = #{record.refundRecvAccout,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <resultMap id="BaseResultMap" type="com.xq.live.globalVoyage$.model.PayRefundLog">
    <result column="id" jdbcType="BIGINT" property="id" />
    <result column="transaction_id" jdbcType="VARCHAR" property="transactionId" />
    <result column="out_trade_no" jdbcType="VARCHAR" property="outTradeNo" />
    <result column="refund_id" jdbcType="VARCHAR" property="refundId" />
    <result column="out_refund_no" jdbcType="VARCHAR" property="outRefundNo" />
    <result column="total_fee" jdbcType="DECIMAL" property="totalFee" />
    <result column="refund_fee" jdbcType="DECIMAL" property="refundFee" />
    <result column="settlement_refund_fee" jdbcType="DECIMAL" property="settlementRefundFee" />
    <result column="refund_status" jdbcType="VARCHAR" property="refundStatus" />
    <result column="refund_recv_accout" jdbcType="VARCHAR" property="refundRecvAccout" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, transaction_id, out_trade_no, refund_id, out_refund_no, total_fee, refund_fee, 
    settlement_refund_fee, refund_status, refund_recv_accout, create_time
  </sql>
  <select id="selectByExample" parameterType="com.xq.live.globalVoyage$.model.PayRefundLogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from pay_refund_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.xq.live.globalVoyage$.model.PayRefundLogExample">
    delete from pay_refund_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xq.live.globalVoyage$.model.PayRefundLog">
    insert into pay_refund_log (id, transaction_id, out_trade_no, 
      refund_id, out_refund_no, total_fee, 
      refund_fee, settlement_refund_fee, refund_status, 
      refund_recv_accout, create_time)
    values (#{id,jdbcType=BIGINT}, #{transactionId,jdbcType=VARCHAR}, #{outTradeNo,jdbcType=VARCHAR}, 
      #{refundId,jdbcType=VARCHAR}, #{outRefundNo,jdbcType=VARCHAR}, #{totalFee,jdbcType=DECIMAL}, 
      #{refundFee,jdbcType=DECIMAL}, #{settlementRefundFee,jdbcType=DECIMAL}, #{refundStatus,jdbcType=VARCHAR}, 
      #{refundRecvAccout,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.xq.live.globalVoyage$.model.PayRefundLog">
    insert into pay_refund_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="transactionId != null">
        transaction_id,
      </if>
      <if test="outTradeNo != null">
        out_trade_no,
      </if>
      <if test="refundId != null">
        refund_id,
      </if>
      <if test="outRefundNo != null">
        out_refund_no,
      </if>
      <if test="totalFee != null">
        total_fee,
      </if>
      <if test="refundFee != null">
        refund_fee,
      </if>
      <if test="settlementRefundFee != null">
        settlement_refund_fee,
      </if>
      <if test="refundStatus != null">
        refund_status,
      </if>
      <if test="refundRecvAccout != null">
        refund_recv_accout,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="transactionId != null">
        #{transactionId,jdbcType=VARCHAR},
      </if>
      <if test="outTradeNo != null">
        #{outTradeNo,jdbcType=VARCHAR},
      </if>
      <if test="refundId != null">
        #{refundId,jdbcType=VARCHAR},
      </if>
      <if test="outRefundNo != null">
        #{outRefundNo,jdbcType=VARCHAR},
      </if>
      <if test="totalFee != null">
        #{totalFee,jdbcType=DECIMAL},
      </if>
      <if test="refundFee != null">
        #{refundFee,jdbcType=DECIMAL},
      </if>
      <if test="settlementRefundFee != null">
        #{settlementRefundFee,jdbcType=DECIMAL},
      </if>
      <if test="refundStatus != null">
        #{refundStatus,jdbcType=VARCHAR},
      </if>
      <if test="refundRecvAccout != null">
        #{refundRecvAccout,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xq.live.globalVoyage$.model.PayRefundLogExample" resultType="java.lang.Long">
    select count(*) from pay_refund_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update pay_refund_log
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.transactionId != null">
        transaction_id = #{record.transactionId,jdbcType=VARCHAR},
      </if>
      <if test="record.outTradeNo != null">
        out_trade_no = #{record.outTradeNo,jdbcType=VARCHAR},
      </if>
      <if test="record.refundId != null">
        refund_id = #{record.refundId,jdbcType=VARCHAR},
      </if>
      <if test="record.outRefundNo != null">
        out_refund_no = #{record.outRefundNo,jdbcType=VARCHAR},
      </if>
      <if test="record.totalFee != null">
        total_fee = #{record.totalFee,jdbcType=DECIMAL},
      </if>
      <if test="record.refundFee != null">
        refund_fee = #{record.refundFee,jdbcType=DECIMAL},
      </if>
      <if test="record.settlementRefundFee != null">
        settlement_refund_fee = #{record.settlementRefundFee,jdbcType=DECIMAL},
      </if>
      <if test="record.refundStatus != null">
        refund_status = #{record.refundStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.refundRecvAccout != null">
        refund_recv_accout = #{record.refundRecvAccout,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update pay_refund_log
    set id = #{record.id,jdbcType=BIGINT},
      transaction_id = #{record.transactionId,jdbcType=VARCHAR},
      out_trade_no = #{record.outTradeNo,jdbcType=VARCHAR},
      refund_id = #{record.refundId,jdbcType=VARCHAR},
      out_refund_no = #{record.outRefundNo,jdbcType=VARCHAR},
      total_fee = #{record.totalFee,jdbcType=DECIMAL},
      refund_fee = #{record.refundFee,jdbcType=DECIMAL},
      settlement_refund_fee = #{record.settlementRefundFee,jdbcType=DECIMAL},
      refund_status = #{record.refundStatus,jdbcType=VARCHAR},
      refund_recv_accout = #{record.refundRecvAccout,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>