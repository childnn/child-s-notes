<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xq.live.globalVoyage$.dao.AccountInfoMapper">
  <resultMap id="BaseResultMap" type="com.xq.live.globalVoyage$.model.AccountInfo">
    <result column="id" jdbcType="BIGINT" property="id" />
    <result column="shop_id" jdbcType="BIGINT" property="shopId" />
    <result column="account_bank_name" jdbcType="VARCHAR" property="accountBankName" />
    <result column="account_bank_address" jdbcType="VARCHAR" property="accountBankAddress" />
    <result column="account_bank_totalname" jdbcType="VARCHAR" property="accountBankTotalname" />
    <result column="account_name" jdbcType="VARCHAR" property="accountName" />
    <result column="cash_bank_id" jdbcType="BIGINT" property="cashBankId" />
    <result column="invoice_status" jdbcType="INTEGER" property="invoiceStatus" />
    <result column="invoice_payable" jdbcType="VARCHAR" property="invoicePayable" />
    <result column="taxpayer_idenNumber" jdbcType="VARCHAR" property="taxpayerIdennumber" />
    <result column="invoice_type" jdbcType="VARCHAR" property="invoiceType" />
    <result column="invoice_recipient" jdbcType="VARCHAR" property="invoiceRecipient" />
    <result column="invoice_receiving_telephone" jdbcType="VARCHAR" property="invoiceReceivingTelephone" />
    <result column="invoice_receiving_address" jdbcType="VARCHAR" property="invoiceReceivingAddress" />
    <result column="company_registered_address" jdbcType="VARCHAR" property="companyRegisteredAddress" />
    <result column="telephone" jdbcType="VARCHAR" property="telephone" />
    <result column="invoice_bank" jdbcType="VARCHAR" property="invoiceBank" />
    <result column="invoice_bank_num" jdbcType="VARCHAR" property="invoiceBankNum" />
    <result column="account_status" jdbcType="INTEGER" property="accountStatus" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="update_by" jdbcType="VARCHAR" property="updateBy" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, shop_id, account_bank_name, account_bank_address, account_bank_totalname, account_name, 
    cash_bank_id, invoice_status, invoice_payable, taxpayer_idenNumber, invoice_type, 
    invoice_recipient, invoice_receiving_telephone, invoice_receiving_address, company_registered_address, 
    telephone, invoice_bank, invoice_bank_num, account_status, create_time, update_time, 
    create_by, update_by
  </sql>
  <select id="selectByExample" parameterType="com.xq.live.globalVoyage$.model.AccountInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from account_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.xq.live.globalVoyage$.model.AccountInfoExample">
    delete from account_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xq.live.globalVoyage$.model.AccountInfo">
    insert into account_info (id, shop_id, account_bank_name, 
      account_bank_address, account_bank_totalname, 
      account_name, cash_bank_id, invoice_status, 
      invoice_payable, taxpayer_idenNumber, invoice_type, 
      invoice_recipient, invoice_receiving_telephone, 
      invoice_receiving_address, company_registered_address, 
      telephone, invoice_bank, invoice_bank_num, 
      account_status, create_time, update_time, 
      create_by, update_by)
    values (#{id,jdbcType=BIGINT}, #{shopId,jdbcType=BIGINT}, #{accountBankName,jdbcType=VARCHAR}, 
      #{accountBankAddress,jdbcType=VARCHAR}, #{accountBankTotalname,jdbcType=VARCHAR}, 
      #{accountName,jdbcType=VARCHAR}, #{cashBankId,jdbcType=BIGINT}, #{invoiceStatus,jdbcType=INTEGER}, 
      #{invoicePayable,jdbcType=VARCHAR}, #{taxpayerIdennumber,jdbcType=VARCHAR}, #{invoiceType,jdbcType=VARCHAR}, 
      #{invoiceRecipient,jdbcType=VARCHAR}, #{invoiceReceivingTelephone,jdbcType=VARCHAR}, 
      #{invoiceReceivingAddress,jdbcType=VARCHAR}, #{companyRegisteredAddress,jdbcType=VARCHAR}, 
      #{telephone,jdbcType=VARCHAR}, #{invoiceBank,jdbcType=VARCHAR}, #{invoiceBankNum,jdbcType=VARCHAR}, 
      #{accountStatus,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{createBy,jdbcType=VARCHAR}, #{updateBy,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.xq.live.globalVoyage$.model.AccountInfo">
    insert into account_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="shopId != null">
        shop_id,
      </if>
      <if test="accountBankName != null">
        account_bank_name,
      </if>
      <if test="accountBankAddress != null">
        account_bank_address,
      </if>
      <if test="accountBankTotalname != null">
        account_bank_totalname,
      </if>
      <if test="accountName != null">
        account_name,
      </if>
      <if test="cashBankId != null">
        cash_bank_id,
      </if>
      <if test="invoiceStatus != null">
        invoice_status,
      </if>
      <if test="invoicePayable != null">
        invoice_payable,
      </if>
      <if test="taxpayerIdennumber != null">
        taxpayer_idenNumber,
      </if>
      <if test="invoiceType != null">
        invoice_type,
      </if>
      <if test="invoiceRecipient != null">
        invoice_recipient,
      </if>
      <if test="invoiceReceivingTelephone != null">
        invoice_receiving_telephone,
      </if>
      <if test="invoiceReceivingAddress != null">
        invoice_receiving_address,
      </if>
      <if test="companyRegisteredAddress != null">
        company_registered_address,
      </if>
      <if test="telephone != null">
        telephone,
      </if>
      <if test="invoiceBank != null">
        invoice_bank,
      </if>
      <if test="invoiceBankNum != null">
        invoice_bank_num,
      </if>
      <if test="accountStatus != null">
        account_status,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="updateBy != null">
        update_by,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="shopId != null">
        #{shopId,jdbcType=BIGINT},
      </if>
      <if test="accountBankName != null">
        #{accountBankName,jdbcType=VARCHAR},
      </if>
      <if test="accountBankAddress != null">
        #{accountBankAddress,jdbcType=VARCHAR},
      </if>
      <if test="accountBankTotalname != null">
        #{accountBankTotalname,jdbcType=VARCHAR},
      </if>
      <if test="accountName != null">
        #{accountName,jdbcType=VARCHAR},
      </if>
      <if test="cashBankId != null">
        #{cashBankId,jdbcType=BIGINT},
      </if>
      <if test="invoiceStatus != null">
        #{invoiceStatus,jdbcType=INTEGER},
      </if>
      <if test="invoicePayable != null">
        #{invoicePayable,jdbcType=VARCHAR},
      </if>
      <if test="taxpayerIdennumber != null">
        #{taxpayerIdennumber,jdbcType=VARCHAR},
      </if>
      <if test="invoiceType != null">
        #{invoiceType,jdbcType=VARCHAR},
      </if>
      <if test="invoiceRecipient != null">
        #{invoiceRecipient,jdbcType=VARCHAR},
      </if>
      <if test="invoiceReceivingTelephone != null">
        #{invoiceReceivingTelephone,jdbcType=VARCHAR},
      </if>
      <if test="invoiceReceivingAddress != null">
        #{invoiceReceivingAddress,jdbcType=VARCHAR},
      </if>
      <if test="companyRegisteredAddress != null">
        #{companyRegisteredAddress,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null">
        #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="invoiceBank != null">
        #{invoiceBank,jdbcType=VARCHAR},
      </if>
      <if test="invoiceBankNum != null">
        #{invoiceBankNum,jdbcType=VARCHAR},
      </if>
      <if test="accountStatus != null">
        #{accountStatus,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xq.live.globalVoyage$.model.AccountInfoExample" resultType="java.lang.Long">
    select count(*) from account_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update account_info
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.shopId != null">
        shop_id = #{record.shopId,jdbcType=BIGINT},
      </if>
      <if test="record.accountBankName != null">
        account_bank_name = #{record.accountBankName,jdbcType=VARCHAR},
      </if>
      <if test="record.accountBankAddress != null">
        account_bank_address = #{record.accountBankAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.accountBankTotalname != null">
        account_bank_totalname = #{record.accountBankTotalname,jdbcType=VARCHAR},
      </if>
      <if test="record.accountName != null">
        account_name = #{record.accountName,jdbcType=VARCHAR},
      </if>
      <if test="record.cashBankId != null">
        cash_bank_id = #{record.cashBankId,jdbcType=BIGINT},
      </if>
      <if test="record.invoiceStatus != null">
        invoice_status = #{record.invoiceStatus,jdbcType=INTEGER},
      </if>
      <if test="record.invoicePayable != null">
        invoice_payable = #{record.invoicePayable,jdbcType=VARCHAR},
      </if>
      <if test="record.taxpayerIdennumber != null">
        taxpayer_idenNumber = #{record.taxpayerIdennumber,jdbcType=VARCHAR},
      </if>
      <if test="record.invoiceType != null">
        invoice_type = #{record.invoiceType,jdbcType=VARCHAR},
      </if>
      <if test="record.invoiceRecipient != null">
        invoice_recipient = #{record.invoiceRecipient,jdbcType=VARCHAR},
      </if>
      <if test="record.invoiceReceivingTelephone != null">
        invoice_receiving_telephone = #{record.invoiceReceivingTelephone,jdbcType=VARCHAR},
      </if>
      <if test="record.invoiceReceivingAddress != null">
        invoice_receiving_address = #{record.invoiceReceivingAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.companyRegisteredAddress != null">
        company_registered_address = #{record.companyRegisteredAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.telephone != null">
        telephone = #{record.telephone,jdbcType=VARCHAR},
      </if>
      <if test="record.invoiceBank != null">
        invoice_bank = #{record.invoiceBank,jdbcType=VARCHAR},
      </if>
      <if test="record.invoiceBankNum != null">
        invoice_bank_num = #{record.invoiceBankNum,jdbcType=VARCHAR},
      </if>
      <if test="record.accountStatus != null">
        account_status = #{record.accountStatus,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createBy != null">
        create_by = #{record.createBy,jdbcType=VARCHAR},
      </if>
      <if test="record.updateBy != null">
        update_by = #{record.updateBy,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update account_info
    set id = #{record.id,jdbcType=BIGINT},
      shop_id = #{record.shopId,jdbcType=BIGINT},
      account_bank_name = #{record.accountBankName,jdbcType=VARCHAR},
      account_bank_address = #{record.accountBankAddress,jdbcType=VARCHAR},
      account_bank_totalname = #{record.accountBankTotalname,jdbcType=VARCHAR},
      account_name = #{record.accountName,jdbcType=VARCHAR},
      cash_bank_id = #{record.cashBankId,jdbcType=BIGINT},
      invoice_status = #{record.invoiceStatus,jdbcType=INTEGER},
      invoice_payable = #{record.invoicePayable,jdbcType=VARCHAR},
      taxpayer_idenNumber = #{record.taxpayerIdennumber,jdbcType=VARCHAR},
      invoice_type = #{record.invoiceType,jdbcType=VARCHAR},
      invoice_recipient = #{record.invoiceRecipient,jdbcType=VARCHAR},
      invoice_receiving_telephone = #{record.invoiceReceivingTelephone,jdbcType=VARCHAR},
      invoice_receiving_address = #{record.invoiceReceivingAddress,jdbcType=VARCHAR},
      company_registered_address = #{record.companyRegisteredAddress,jdbcType=VARCHAR},
      telephone = #{record.telephone,jdbcType=VARCHAR},
      invoice_bank = #{record.invoiceBank,jdbcType=VARCHAR},
      invoice_bank_num = #{record.invoiceBankNum,jdbcType=VARCHAR},
      account_status = #{record.accountStatus,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      create_by = #{record.createBy,jdbcType=VARCHAR},
      update_by = #{record.updateBy,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <resultMap id="BaseResultMap" type="com.xq.live.globalVoyage$.model.AccountInfo">
    <result column="id" jdbcType="BIGINT" property="id" />
    <result column="shop_id" jdbcType="BIGINT" property="shopId" />
    <result column="account_bank_name" jdbcType="VARCHAR" property="accountBankName" />
    <result column="account_bank_address" jdbcType="VARCHAR" property="accountBankAddress" />
    <result column="account_bank_totalname" jdbcType="VARCHAR" property="accountBankTotalname" />
    <result column="account_name" jdbcType="VARCHAR" property="accountName" />
    <result column="cash_bank_id" jdbcType="BIGINT" property="cashBankId" />
    <result column="invoice_status" jdbcType="INTEGER" property="invoiceStatus" />
    <result column="invoice_payable" jdbcType="VARCHAR" property="invoicePayable" />
    <result column="taxpayer_idenNumber" jdbcType="VARCHAR" property="taxpayerIdennumber" />
    <result column="invoice_type" jdbcType="VARCHAR" property="invoiceType" />
    <result column="invoice_recipient" jdbcType="VARCHAR" property="invoiceRecipient" />
    <result column="invoice_receiving_telephone" jdbcType="VARCHAR" property="invoiceReceivingTelephone" />
    <result column="invoice_receiving_address" jdbcType="VARCHAR" property="invoiceReceivingAddress" />
    <result column="company_registered_address" jdbcType="VARCHAR" property="companyRegisteredAddress" />
    <result column="telephone" jdbcType="VARCHAR" property="telephone" />
    <result column="invoice_bank" jdbcType="VARCHAR" property="invoiceBank" />
    <result column="invoice_bank_num" jdbcType="VARCHAR" property="invoiceBankNum" />
    <result column="account_status" jdbcType="INTEGER" property="accountStatus" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="update_by" jdbcType="VARCHAR" property="updateBy" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, shop_id, account_bank_name, account_bank_address, account_bank_totalname, account_name, 
    cash_bank_id, invoice_status, invoice_payable, taxpayer_idenNumber, invoice_type, 
    invoice_recipient, invoice_receiving_telephone, invoice_receiving_address, company_registered_address, 
    telephone, invoice_bank, invoice_bank_num, account_status, create_time, update_time, 
    create_by, update_by
  </sql>
  <select id="selectByExample" parameterType="com.xq.live.globalVoyage$.model.AccountInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from account_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.xq.live.globalVoyage$.model.AccountInfoExample">
    delete from account_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xq.live.globalVoyage$.model.AccountInfo">
    insert into account_info (id, shop_id, account_bank_name, 
      account_bank_address, account_bank_totalname, 
      account_name, cash_bank_id, invoice_status, 
      invoice_payable, taxpayer_idenNumber, invoice_type, 
      invoice_recipient, invoice_receiving_telephone, 
      invoice_receiving_address, company_registered_address, 
      telephone, invoice_bank, invoice_bank_num, 
      account_status, create_time, update_time, 
      create_by, update_by)
    values (#{id,jdbcType=BIGINT}, #{shopId,jdbcType=BIGINT}, #{accountBankName,jdbcType=VARCHAR}, 
      #{accountBankAddress,jdbcType=VARCHAR}, #{accountBankTotalname,jdbcType=VARCHAR}, 
      #{accountName,jdbcType=VARCHAR}, #{cashBankId,jdbcType=BIGINT}, #{invoiceStatus,jdbcType=INTEGER}, 
      #{invoicePayable,jdbcType=VARCHAR}, #{taxpayerIdennumber,jdbcType=VARCHAR}, #{invoiceType,jdbcType=VARCHAR}, 
      #{invoiceRecipient,jdbcType=VARCHAR}, #{invoiceReceivingTelephone,jdbcType=VARCHAR}, 
      #{invoiceReceivingAddress,jdbcType=VARCHAR}, #{companyRegisteredAddress,jdbcType=VARCHAR}, 
      #{telephone,jdbcType=VARCHAR}, #{invoiceBank,jdbcType=VARCHAR}, #{invoiceBankNum,jdbcType=VARCHAR}, 
      #{accountStatus,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{createBy,jdbcType=VARCHAR}, #{updateBy,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.xq.live.globalVoyage$.model.AccountInfo">
    insert into account_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="shopId != null">
        shop_id,
      </if>
      <if test="accountBankName != null">
        account_bank_name,
      </if>
      <if test="accountBankAddress != null">
        account_bank_address,
      </if>
      <if test="accountBankTotalname != null">
        account_bank_totalname,
      </if>
      <if test="accountName != null">
        account_name,
      </if>
      <if test="cashBankId != null">
        cash_bank_id,
      </if>
      <if test="invoiceStatus != null">
        invoice_status,
      </if>
      <if test="invoicePayable != null">
        invoice_payable,
      </if>
      <if test="taxpayerIdennumber != null">
        taxpayer_idenNumber,
      </if>
      <if test="invoiceType != null">
        invoice_type,
      </if>
      <if test="invoiceRecipient != null">
        invoice_recipient,
      </if>
      <if test="invoiceReceivingTelephone != null">
        invoice_receiving_telephone,
      </if>
      <if test="invoiceReceivingAddress != null">
        invoice_receiving_address,
      </if>
      <if test="companyRegisteredAddress != null">
        company_registered_address,
      </if>
      <if test="telephone != null">
        telephone,
      </if>
      <if test="invoiceBank != null">
        invoice_bank,
      </if>
      <if test="invoiceBankNum != null">
        invoice_bank_num,
      </if>
      <if test="accountStatus != null">
        account_status,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="updateBy != null">
        update_by,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="shopId != null">
        #{shopId,jdbcType=BIGINT},
      </if>
      <if test="accountBankName != null">
        #{accountBankName,jdbcType=VARCHAR},
      </if>
      <if test="accountBankAddress != null">
        #{accountBankAddress,jdbcType=VARCHAR},
      </if>
      <if test="accountBankTotalname != null">
        #{accountBankTotalname,jdbcType=VARCHAR},
      </if>
      <if test="accountName != null">
        #{accountName,jdbcType=VARCHAR},
      </if>
      <if test="cashBankId != null">
        #{cashBankId,jdbcType=BIGINT},
      </if>
      <if test="invoiceStatus != null">
        #{invoiceStatus,jdbcType=INTEGER},
      </if>
      <if test="invoicePayable != null">
        #{invoicePayable,jdbcType=VARCHAR},
      </if>
      <if test="taxpayerIdennumber != null">
        #{taxpayerIdennumber,jdbcType=VARCHAR},
      </if>
      <if test="invoiceType != null">
        #{invoiceType,jdbcType=VARCHAR},
      </if>
      <if test="invoiceRecipient != null">
        #{invoiceRecipient,jdbcType=VARCHAR},
      </if>
      <if test="invoiceReceivingTelephone != null">
        #{invoiceReceivingTelephone,jdbcType=VARCHAR},
      </if>
      <if test="invoiceReceivingAddress != null">
        #{invoiceReceivingAddress,jdbcType=VARCHAR},
      </if>
      <if test="companyRegisteredAddress != null">
        #{companyRegisteredAddress,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null">
        #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="invoiceBank != null">
        #{invoiceBank,jdbcType=VARCHAR},
      </if>
      <if test="invoiceBankNum != null">
        #{invoiceBankNum,jdbcType=VARCHAR},
      </if>
      <if test="accountStatus != null">
        #{accountStatus,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xq.live.globalVoyage$.model.AccountInfoExample" resultType="java.lang.Long">
    select count(*) from account_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update account_info
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.shopId != null">
        shop_id = #{record.shopId,jdbcType=BIGINT},
      </if>
      <if test="record.accountBankName != null">
        account_bank_name = #{record.accountBankName,jdbcType=VARCHAR},
      </if>
      <if test="record.accountBankAddress != null">
        account_bank_address = #{record.accountBankAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.accountBankTotalname != null">
        account_bank_totalname = #{record.accountBankTotalname,jdbcType=VARCHAR},
      </if>
      <if test="record.accountName != null">
        account_name = #{record.accountName,jdbcType=VARCHAR},
      </if>
      <if test="record.cashBankId != null">
        cash_bank_id = #{record.cashBankId,jdbcType=BIGINT},
      </if>
      <if test="record.invoiceStatus != null">
        invoice_status = #{record.invoiceStatus,jdbcType=INTEGER},
      </if>
      <if test="record.invoicePayable != null">
        invoice_payable = #{record.invoicePayable,jdbcType=VARCHAR},
      </if>
      <if test="record.taxpayerIdennumber != null">
        taxpayer_idenNumber = #{record.taxpayerIdennumber,jdbcType=VARCHAR},
      </if>
      <if test="record.invoiceType != null">
        invoice_type = #{record.invoiceType,jdbcType=VARCHAR},
      </if>
      <if test="record.invoiceRecipient != null">
        invoice_recipient = #{record.invoiceRecipient,jdbcType=VARCHAR},
      </if>
      <if test="record.invoiceReceivingTelephone != null">
        invoice_receiving_telephone = #{record.invoiceReceivingTelephone,jdbcType=VARCHAR},
      </if>
      <if test="record.invoiceReceivingAddress != null">
        invoice_receiving_address = #{record.invoiceReceivingAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.companyRegisteredAddress != null">
        company_registered_address = #{record.companyRegisteredAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.telephone != null">
        telephone = #{record.telephone,jdbcType=VARCHAR},
      </if>
      <if test="record.invoiceBank != null">
        invoice_bank = #{record.invoiceBank,jdbcType=VARCHAR},
      </if>
      <if test="record.invoiceBankNum != null">
        invoice_bank_num = #{record.invoiceBankNum,jdbcType=VARCHAR},
      </if>
      <if test="record.accountStatus != null">
        account_status = #{record.accountStatus,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createBy != null">
        create_by = #{record.createBy,jdbcType=VARCHAR},
      </if>
      <if test="record.updateBy != null">
        update_by = #{record.updateBy,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update account_info
    set id = #{record.id,jdbcType=BIGINT},
      shop_id = #{record.shopId,jdbcType=BIGINT},
      account_bank_name = #{record.accountBankName,jdbcType=VARCHAR},
      account_bank_address = #{record.accountBankAddress,jdbcType=VARCHAR},
      account_bank_totalname = #{record.accountBankTotalname,jdbcType=VARCHAR},
      account_name = #{record.accountName,jdbcType=VARCHAR},
      cash_bank_id = #{record.cashBankId,jdbcType=BIGINT},
      invoice_status = #{record.invoiceStatus,jdbcType=INTEGER},
      invoice_payable = #{record.invoicePayable,jdbcType=VARCHAR},
      taxpayer_idenNumber = #{record.taxpayerIdennumber,jdbcType=VARCHAR},
      invoice_type = #{record.invoiceType,jdbcType=VARCHAR},
      invoice_recipient = #{record.invoiceRecipient,jdbcType=VARCHAR},
      invoice_receiving_telephone = #{record.invoiceReceivingTelephone,jdbcType=VARCHAR},
      invoice_receiving_address = #{record.invoiceReceivingAddress,jdbcType=VARCHAR},
      company_registered_address = #{record.companyRegisteredAddress,jdbcType=VARCHAR},
      telephone = #{record.telephone,jdbcType=VARCHAR},
      invoice_bank = #{record.invoiceBank,jdbcType=VARCHAR},
      invoice_bank_num = #{record.invoiceBankNum,jdbcType=VARCHAR},
      account_status = #{record.accountStatus,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      create_by = #{record.createBy,jdbcType=VARCHAR},
      update_by = #{record.updateBy,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>