算法：algorithm
    被明确定义的有限个规则的集合,用于根据有限的步骤解决问题.
    例如在既定的精度下,把求解 sin x 的计算步骤无一遗漏的记录下来的文字.
  简而言之: 算法就是 把解决问题的步骤无一遗漏地用文字或图表示出来.
    把这些 "用文字或图表示" 替换为 "用编程语言表达", 算法就变成了程序.
    并且, 必须满足条件 "算法的步骤必须是明确的并且步骤数必须是有限的".

排序
---
排序术语
  稳定: 如果 a 原本在 b 前面, 且 a = b, 排序之后 a 仍然在 b 前面
  不稳定: 如果 a 原本在 b 前面, 且 a = b, 排序后 a 可能会出现在 b 后面
  内排序: 所有排序操作都在内存中完成
  外排序: 由于数据太大, 因此把数据放在磁盘中, 而排序通过磁盘和内存的数据传输才能进行
  时间复杂度: 一个算法执行所耗费的时间
  空间复杂度: 运行完一个程序所需内存的大小
  ---
  比较排序: 常见的快速排序、归并排序、堆排序、冒泡排序等属于比较排序。在排序的最终结果里，
       元素之间的次序依赖于它们之间的比较。每个数都必须和其他数进行比较，才能确定自己的位置。
       在冒泡排序之类的排序中，问题规模为n，又因为需要比较n次，所以平均时间复杂度为 O(n²)。
       在归并排序、快速排序之类的排序中，问题规模通过分治法消减为 logN 次，所以时间复杂度平均 O(nlogn)。
       比较排序的优势是，适用于各种规模的数据，也不在乎数据的分布，都能进行排序。可以说，比较排序适用于一切需要排序的情况。
  非比较排序: 计数排序、基数排序、桶排序则属于非比较排序。非比较排序是通过确定每个元素之前，应该有多少个元素来排序。
       针对数组arr，计算arr[i]之前有多少个元素，则唯一确定了arr[i]在排序后数组中的位置。非比较排序只要确定
       每个元素之前的已有的元素个数即可，所有一次遍历即可解决。算法时间复杂度O(n)。非比较排序时间复杂度底，
       但由于非比较排序需要占用空间来确定唯一位置。所以对数据规模和数据分布有一定的要求。
